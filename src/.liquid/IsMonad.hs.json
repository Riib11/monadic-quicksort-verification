{"status":"safe","types":{"84":{"19":{"ann":"x1:a b -> x2:a c -> {v : a c | v == vseq isMonad x1 x2\n                               && v == vbind isMonad x1 (vconst x2)}","ident":"_","row":84,"col":19},"3":{"ann":"forall a b .\nx1:c a -> x2:c b -> {v : c b | v == vseq isMonad x1 x2\n                               && v == vbind isMonad x1 (vconst x2)}","ident":"vseq_","row":84,"col":3},"24":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":84,"col":24}},"61":{"14":{"ann":"a b","ident":"m1","row":61,"col":14},"49":{"ann":"{v : a b | v == m2}","ident":"m2","row":61,"col":49},"29":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":61,"col":29},"17":{"ann":"a b","ident":"m2","row":61,"col":17},"1":{"ann":"forall a b c .\nx1:(IsMonad.IsMonad a) -> x2:a b -> x3:a c -> {VV : a c | VV == vseq x1 x2 x3\n                                                          && VV == vbind x1 x2 (vconst x3)}","ident":"IsMonad.vseq","row":61,"col":1},"41":{"ann":"x1:a -> {v : b c | v == vconst m2 x1\n                   && v == m2}","ident":"lq_anf$##7205759403792821428","row":61,"col":41},"38":{"ann":"{v : a b | v == m1}","ident":"m1","row":61,"col":38},"6":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":61,"col":6}},"78":{"31":{"ann":"x1:() -> {v : a () | v == vconst m x1\n                     && v == m}","ident":"lq_anf$##7205759403792821431","row":78,"col":31},"16":{"ann":"{v : a () | v == vlift_ vunit}","ident":"lq_anf$##7205759403792821430","row":78,"col":16},"39":{"ann":"{v : a () | v == m}","ident":"m","row":78,"col":39},"24":{"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","row":78,"col":24},"9":{"ann":"a ()","ident":"lq_anf$##7205759403792821432","row":78,"col":9}},"82":{"9":{"ann":"{v : Liquid.ProofCombinators.QED | (isAdmit v <=> false)\n                                   && v == QED}","ident":"Liquid.ProofCombinators.QED","row":82,"col":9}},"129":{"48":{"ann":"{VV : a | VV == x}","ident":"x","row":129,"col":48},"31":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad\n                            && VV == vlift'}","ident":"vlift'","row":129,"col":31},"22":{"ann":"a -> b c","ident":"lq_anf$##7205759403792816594","row":129,"col":22},"29":{"ann":"{v : a b | v == m}","ident":"m","row":129,"col":29},"45":{"ann":"{VV : a | VV == f x}","ident":"lq_anf$##7205759403792816593","row":129,"col":45},"1":{"ann":"forall a b c .\nx1:(IsMonad.IsMonad a) -> x2:(b -> c) -> x4:a b -> {VV : a c | VV == vliftF x1 x2 x4\n                                                               && VV == vbind x1 x4 lam x##a5Pg : b##xo . vlift x1 (x2 x##a5Pg)}","ident":"IsMonad.vliftF","row":129,"col":1},"18":{"ann":"a b","ident":"m","row":129,"col":18},"16":{"ann":"a -> b","ident":"f","row":129,"col":16},"8":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":129,"col":8},"33":{"ann":"a","ident":"x","row":129,"col":33}},"85":{"19":{"ann":"{v : a () | v == vseq_epsilon isMonad\n            && v == vlift isMonad vunit}","ident":"_","row":85,"col":19},"3":{"ann":"{v : a () | v == vseq_epsilon isMonad\n            && v == vlift isMonad vunit}","ident":"vseq_epsilon_","row":85,"col":3},"32":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":85,"col":32}},"44":{"25":{"ann":"a -> b c","ident":"g","row":44,"col":25},"13":{"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"raw_vbind","row":44,"col":13},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":44,"col":44},"1":{"ann":"forall a b c d .\nx1:(forall a b .\n    a a -> (a -> a b) -> a b) -> x5:(b -> a c) -> x7:(c -> a d) -> x9:b -> {VV : a d | VV == raw_kleisli x1 x5 x7 x9\n                                                                                       && VV == x1 (x5 x9) x7}","ident":"IsMonad.raw_kleisli","row":44,"col":1},"23":{"ann":"a -> b c","ident":"f","row":44,"col":23},"27":{"ann":"a","ident":"x","row":44,"col":27},"41":{"ann":"{v : a b | v == f x}","ident":"lq_anf$##7205759403792816590","row":44,"col":41},"47":{"ann":"a -> b c","ident":"g","row":44,"col":47}},"88":{"31":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":88,"col":31},"19":{"ann":"{VV : forall a b .\n      k:(a -> c b) -> x:a -> {v : () | vbind isMonad (vlift isMonad x) k == k x} | VV == vbind_vlift isMonad}","ident":"_","row":88,"col":19},"3":{"ann":"forall a b .\nk:(a -> c b) -> x:a -> {v : () | vbind isMonad (vlift isMonad x) k == k x}","ident":"vbind_vlift_","row":88,"col":3}},"131":{"12":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad}","ident":"_","row":131,"col":12},"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":131,"col":18},"3":{"ann":"forall a . a -> b a","ident":"vlift'","row":131,"col":3}},"86":{"25":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":86,"col":25},"19":{"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","row":86,"col":19},"3":{"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind_","row":86,"col":3}},"67":{"14":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":67,"col":14},"30":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":67,"col":30},"1":{"ann":"forall a .\nx1:(IsMonad.IsMonad a) -> {VV : a () | VV == vseq_epsilon x1\n                                       && VV == vlift x1 vunit}","ident":"IsMonad.vseq_epsilon","row":67,"col":1},"38":{"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","row":67,"col":38}},"1":{"1":{"ann":"GHC.Types.Module","ident":"IsMonad.$trModule","row":1,"col":1}},"144":{"12":{"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","row":144,"col":12},"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":144,"col":18},"3":{"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind'","row":144,"col":3}},"141":{"37":{"ann":"{VV : a | VV == x}","ident":"x","row":141,"col":37},"22":{"ann":"a","ident":"y","row":141,"col":22},"17":{"ann":"{v : a b | v == mb}","ident":"mb","row":141,"col":17},"34":{"ann":"{VV : a | VV == f x y}","ident":"lq_anf$##7205759403792816595","row":141,"col":34},"20":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad\n                            && VV == vlift'}","ident":"vlift'","row":141,"col":20},"39":{"ann":"{VV : a | VV == y}","ident":"y","row":141,"col":39},"5":{"ann":"a","ident":"x","row":141,"col":5},"3":{"ann":"a -> b c","ident":"lq_anf$##7205759403792816596","row":141,"col":3}},"87":{"25":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":87,"col":25},"19":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad}","ident":"_","row":87,"col":19},"3":{"ann":"forall a . a -> b a","ident":"vlift_","row":87,"col":3}},"140":{"3":{"ann":"{v : a b | v == ma}","ident":"ma","row":140,"col":3}},"132":{"12":{"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","row":132,"col":12},"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":132,"col":18},"3":{"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind'","row":132,"col":3}},"80":{"22":{"ann":"x1:() -> {v : a () | v == vconst m x1\n                     && v == m}","ident":"lq_anf$##7205759403792821436","row":80,"col":22},"30":{"ann":"{v : a () | v == m}","ident":"m","row":80,"col":30},"33":{"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","row":80,"col":33},"9":{"ann":"()","ident":"lq_anf$##7205759403792821437","row":80,"col":9}},"55":{"31":{"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","row":55,"col":31},"1":{"ann":"forall a b c d .\nx1:(IsMonad.IsMonad a) -> x2:(b -> a c) -> x4:(c -> a d) -> x6:b -> {VV : a d | VV == kleisli x1 x2 x4 x6\n                                                                                && VV == raw_kleisli (vbind x1) x2 x4 x6}","ident":"IsMonad.kleisli","row":55,"col":1},"38":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":55,"col":38},"9":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":55,"col":9}},"77":{"23":{"ann":"{v : a () | v == m}","ident":"m","row":77,"col":23},"3":{"ann":"{v : a () | v == vseq isMonad vseq_epsilon_ m\n            && v == vbind isMonad vseq_epsilon_ (vconst m)\n            && v == vseq_ vseq_epsilon_ m}","ident":"lq_anf$##7205759403792821429","row":77,"col":3},"9":{"ann":"{v : a () | v == vseq_epsilon isMonad\n            && v == vlift isMonad vunit\n            && v == vseq_epsilon_}","ident":"vseq_epsilon_","row":77,"col":9}},"139":{"22":{"ann":"a b","ident":"mb","row":139,"col":22},"19":{"ann":"a b","ident":"ma","row":139,"col":19},"17":{"ann":"a -> b -> c","ident":"f","row":139,"col":17},"1":{"ann":"forall a b c d .\nx1:(IsMonad.IsMonad a) -> x2:(b -> c -> d) -> x5:a b -> x6:a c -> {VV : a d | VV == vliftF2 x1 x2 x5 x6\n                                                                              && VV == vbind x1 x5 lam x##a5Pn : b##xo . vbind x1 x6 lam y##a5Po : c##xo . vlift x1 (x2 x##a5Pn y##a5Po)}","ident":"IsMonad.vliftF2","row":139,"col":1},"9":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":139,"col":9}},"120":{"15":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":120,"col":15},"1":{"ann":"forall a b .\nx1:(IsMonad.IsMonad a) -> x2:a () -> {VV : () | vseq x1 (vseq_epsilon x1) x2 == x2\n                                                && vseq x1 x2 (vseq_epsilon x1) == x2}","ident":"IsMonad.vseq_identity","row":120,"col":1},"23":{"ann":"a ()","ident":"m","row":120,"col":23}},"79":{"18":{"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","row":79,"col":18},"16":{"ann":"{v : a () | v == m}","ident":"m","row":79,"col":16},"9":{"ann":"{v : a () | v == vconst m vunit\n            && v == m}","ident":"lq_anf$##7205759403792821434","row":79,"col":9}},"143":{"12":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad}","ident":"_","row":143,"col":12},"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","row":143,"col":18},"3":{"ann":"forall a . a -> b a","ident":"vlift'","row":143,"col":3}},"97":{"29":{"ann":"a ()","ident":"m","row":97,"col":29},"1":{"ann":"forall a b .\nx1:(IsMonad.IsMonad a) -> x2:a () -> {VV : () | vseq x1 x2 (vseq_epsilon x1) == x2}","ident":"IsMonad.vseq_identity_right","row":97,"col":1},"21":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":97,"col":21}},"76":{"28":{"ann":"a ()","ident":"m","row":76,"col":28},"1":{"ann":"forall a .\nx1:(IsMonad.IsMonad a) -> x2:a () -> {VV : () | vseq x1 (vseq_epsilon x1) x2 == x2}","ident":"IsMonad.vseq_identity_left","row":76,"col":1},"20":{"ann":"(IsMonad.IsMonad a)","ident":"isMonad","row":76,"col":20}},"81":{"9":{"ann":"{v : a () | v == m}","ident":"m","row":81,"col":9}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"IsMonad.$trModule","stop":{"line":1,"column":1}},{"start":{"line":44,"column":1},"ann":"forall a b c d .\nx1:(forall a b .\n    a a -> (a -> a b) -> a b) -> x5:(b -> a c) -> x7:(c -> a d) -> x9:b -> {VV : a d | VV == raw_kleisli x1 x5 x7 x9\n                                                                                       && VV == x1 (x5 x9) x7}","ident":"IsMonad.raw_kleisli","stop":{"line":44,"column":12}},{"start":{"line":44,"column":13},"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"raw_vbind","stop":{"line":44,"column":22}},{"start":{"line":44,"column":23},"ann":"a -> b c","ident":"f","stop":{"line":44,"column":24}},{"start":{"line":44,"column":25},"ann":"a -> b c","ident":"g","stop":{"line":44,"column":26}},{"start":{"line":44,"column":27},"ann":"a","ident":"x","stop":{"line":44,"column":28}},{"start":{"line":44,"column":41},"ann":"{v : a b | v == f x}","ident":"lq_anf$##7205759403792816590","stop":{"line":44,"column":46}},{"start":{"line":44,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":44,"column":45}},{"start":{"line":44,"column":47},"ann":"a -> b c","ident":"g","stop":{"line":44,"column":48}},{"start":{"line":55,"column":1},"ann":"forall a b c d .\nx1:(IsMonad.IsMonad a) -> x2:(b -> a c) -> x4:(c -> a d) -> x6:b -> {VV : a d | VV == kleisli x1 x2 x4 x6\n                                                                                && VV == raw_kleisli (vbind x1) x2 x4 x6}","ident":"IsMonad.kleisli","stop":{"line":55,"column":8}},{"start":{"line":55,"column":9},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":55,"column":16}},{"start":{"line":55,"column":31},"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","stop":{"line":55,"column":46}},{"start":{"line":55,"column":38},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":55,"column":45}},{"start":{"line":61,"column":1},"ann":"forall a b c .\nx1:(IsMonad.IsMonad a) -> x2:a b -> x3:a c -> {VV : a c | VV == vseq x1 x2 x3\n                                                          && VV == vbind x1 x2 (vconst x3)}","ident":"IsMonad.vseq","stop":{"line":61,"column":5}},{"start":{"line":61,"column":6},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":61,"column":13}},{"start":{"line":61,"column":14},"ann":"a b","ident":"m1","stop":{"line":61,"column":16}},{"start":{"line":61,"column":17},"ann":"a b","ident":"m2","stop":{"line":61,"column":19}},{"start":{"line":61,"column":29},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":61,"column":36}},{"start":{"line":61,"column":38},"ann":"{v : a b | v == m1}","ident":"m1","stop":{"line":61,"column":40}},{"start":{"line":61,"column":41},"ann":"x1:a -> {v : b c | v == vconst m2 x1\n                   && v == m2}","ident":"lq_anf$##7205759403792821428","stop":{"line":61,"column":52}},{"start":{"line":61,"column":49},"ann":"{v : a b | v == m2}","ident":"m2","stop":{"line":61,"column":51}},{"start":{"line":67,"column":1},"ann":"forall a .\nx1:(IsMonad.IsMonad a) -> {VV : a () | VV == vseq_epsilon x1\n                                       && VV == vlift x1 vunit}","ident":"IsMonad.vseq_epsilon","stop":{"line":67,"column":13}},{"start":{"line":67,"column":14},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":67,"column":21}},{"start":{"line":67,"column":30},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":67,"column":37}},{"start":{"line":67,"column":38},"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","stop":{"line":67,"column":43}},{"start":{"line":76,"column":1},"ann":"forall a .\nx1:(IsMonad.IsMonad a) -> x2:a () -> {VV : () | vseq x1 (vseq_epsilon x1) x2 == x2}","ident":"IsMonad.vseq_identity_left","stop":{"line":76,"column":19}},{"start":{"line":76,"column":20},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":76,"column":27}},{"start":{"line":76,"column":28},"ann":"a ()","ident":"m","stop":{"line":76,"column":29}},{"start":{"line":77,"column":3},"ann":"{v : a () | v == vseq isMonad vseq_epsilon_ m\n            && v == vbind isMonad vseq_epsilon_ (vconst m)\n            && v == vseq_ vseq_epsilon_ m}","ident":"lq_anf$##7205759403792821429","stop":{"line":77,"column":24}},{"start":{"line":77,"column":9},"ann":"{v : a () | v == vseq_epsilon isMonad\n            && v == vlift isMonad vunit\n            && v == vseq_epsilon_}","ident":"vseq_epsilon_","stop":{"line":77,"column":22}},{"start":{"line":77,"column":23},"ann":"{v : a () | v == m}","ident":"m","stop":{"line":77,"column":24}},{"start":{"line":78,"column":9},"ann":"a ()","ident":"lq_anf$##7205759403792821432","stop":{"line":78,"column":41}},{"start":{"line":78,"column":16},"ann":"{v : a () | v == vlift_ vunit}","ident":"lq_anf$##7205759403792821430","stop":{"line":78,"column":30}},{"start":{"line":78,"column":24},"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","stop":{"line":78,"column":29}},{"start":{"line":78,"column":31},"ann":"x1:() -> {v : a () | v == vconst m x1\n                     && v == m}","ident":"lq_anf$##7205759403792821431","stop":{"line":78,"column":41}},{"start":{"line":78,"column":39},"ann":"{v : a () | v == m}","ident":"m","stop":{"line":78,"column":40}},{"start":{"line":79,"column":9},"ann":"{v : a () | v == vconst m vunit\n            && v == m}","ident":"lq_anf$##7205759403792821434","stop":{"line":79,"column":23}},{"start":{"line":79,"column":16},"ann":"{v : a () | v == m}","ident":"m","stop":{"line":79,"column":17}},{"start":{"line":79,"column":18},"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","stop":{"line":79,"column":23}},{"start":{"line":80,"column":9},"ann":"()","ident":"lq_anf$##7205759403792821437","stop":{"line":80,"column":38}},{"start":{"line":80,"column":22},"ann":"x1:() -> {v : a () | v == vconst m x1\n                     && v == m}","ident":"lq_anf$##7205759403792821436","stop":{"line":80,"column":32}},{"start":{"line":80,"column":30},"ann":"{v : a () | v == m}","ident":"m","stop":{"line":80,"column":31}},{"start":{"line":80,"column":33},"ann":"{v : () | v == vunit\n          && v == ()}","ident":"VUnit.vunit","stop":{"line":80,"column":38}},{"start":{"line":81,"column":9},"ann":"{v : a () | v == m}","ident":"m","stop":{"line":81,"column":10}},{"start":{"line":82,"column":9},"ann":"{v : Liquid.ProofCombinators.QED | (isAdmit v <=> false)\n                                   && v == QED}","ident":"Liquid.ProofCombinators.QED","stop":{"line":82,"column":12}},{"start":{"line":84,"column":3},"ann":"forall a b .\nx1:c a -> x2:c b -> {v : c b | v == vseq isMonad x1 x2\n                               && v == vbind isMonad x1 (vconst x2)}","ident":"vseq_","stop":{"line":84,"column":8}},{"start":{"line":84,"column":19},"ann":"x1:a b -> x2:a c -> {v : a c | v == vseq isMonad x1 x2\n                               && v == vbind isMonad x1 (vconst x2)}","ident":"_","stop":{"line":84,"column":31}},{"start":{"line":84,"column":24},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":84,"column":31}},{"start":{"line":85,"column":3},"ann":"{v : a () | v == vseq_epsilon isMonad\n            && v == vlift isMonad vunit}","ident":"vseq_epsilon_","stop":{"line":85,"column":16}},{"start":{"line":85,"column":19},"ann":"{v : a () | v == vseq_epsilon isMonad\n            && v == vlift isMonad vunit}","ident":"_","stop":{"line":85,"column":39}},{"start":{"line":85,"column":32},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":85,"column":39}},{"start":{"line":86,"column":3},"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind_","stop":{"line":86,"column":9}},{"start":{"line":86,"column":19},"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","stop":{"line":86,"column":32}},{"start":{"line":86,"column":25},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":86,"column":32}},{"start":{"line":87,"column":3},"ann":"forall a . a -> b a","ident":"vlift_","stop":{"line":87,"column":9}},{"start":{"line":87,"column":19},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad}","ident":"_","stop":{"line":87,"column":32}},{"start":{"line":87,"column":25},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":87,"column":32}},{"start":{"line":88,"column":3},"ann":"forall a b .\nk:(a -> c b) -> x:a -> {v : () | vbind isMonad (vlift isMonad x) k == k x}","ident":"vbind_vlift_","stop":{"line":88,"column":15}},{"start":{"line":88,"column":19},"ann":"{VV : forall a b .\n      k:(a -> c b) -> x:a -> {v : () | vbind isMonad (vlift isMonad x) k == k x} | VV == vbind_vlift isMonad}","ident":"_","stop":{"line":88,"column":38}},{"start":{"line":88,"column":31},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":88,"column":38}},{"start":{"line":97,"column":1},"ann":"forall a b .\nx1:(IsMonad.IsMonad a) -> x2:a () -> {VV : () | vseq x1 x2 (vseq_epsilon x1) == x2}","ident":"IsMonad.vseq_identity_right","stop":{"line":97,"column":20}},{"start":{"line":97,"column":21},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":97,"column":28}},{"start":{"line":97,"column":29},"ann":"a ()","ident":"m","stop":{"line":97,"column":30}},{"start":{"line":120,"column":1},"ann":"forall a b .\nx1:(IsMonad.IsMonad a) -> x2:a () -> {VV : () | vseq x1 (vseq_epsilon x1) x2 == x2\n                                                && vseq x1 x2 (vseq_epsilon x1) == x2}","ident":"IsMonad.vseq_identity","stop":{"line":120,"column":14}},{"start":{"line":120,"column":15},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":120,"column":22}},{"start":{"line":120,"column":23},"ann":"a ()","ident":"m","stop":{"line":120,"column":24}},{"start":{"line":129,"column":1},"ann":"forall a b c .\nx1:(IsMonad.IsMonad a) -> x2:(b -> c) -> x4:a b -> {VV : a c | VV == vliftF x1 x2 x4\n                                                               && VV == vbind x1 x4 lam x##a5Pg : b##xo . vlift x1 (x2 x##a5Pg)}","ident":"IsMonad.vliftF","stop":{"line":129,"column":7}},{"start":{"line":129,"column":8},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":129,"column":15}},{"start":{"line":129,"column":16},"ann":"a -> b","ident":"f","stop":{"line":129,"column":17}},{"start":{"line":129,"column":18},"ann":"a b","ident":"m","stop":{"line":129,"column":19}},{"start":{"line":129,"column":22},"ann":"a -> b c","ident":"lq_anf$##7205759403792816594","stop":{"line":129,"column":51}},{"start":{"line":129,"column":29},"ann":"{v : a b | v == m}","ident":"m","stop":{"line":129,"column":30}},{"start":{"line":129,"column":31},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad\n                            && VV == vlift'}","ident":"vlift'","stop":{"line":129,"column":51}},{"start":{"line":129,"column":33},"ann":"a","ident":"x","stop":{"line":129,"column":34}},{"start":{"line":129,"column":45},"ann":"{VV : a | VV == f x}","ident":"lq_anf$##7205759403792816593","stop":{"line":129,"column":50}},{"start":{"line":129,"column":48},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":129,"column":49}},{"start":{"line":131,"column":3},"ann":"forall a . a -> b a","ident":"vlift'","stop":{"line":131,"column":9}},{"start":{"line":131,"column":12},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad}","ident":"_","stop":{"line":131,"column":25}},{"start":{"line":131,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":131,"column":25}},{"start":{"line":132,"column":3},"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind'","stop":{"line":132,"column":9}},{"start":{"line":132,"column":12},"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","stop":{"line":132,"column":25}},{"start":{"line":132,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":132,"column":25}},{"start":{"line":139,"column":1},"ann":"forall a b c d .\nx1:(IsMonad.IsMonad a) -> x2:(b -> c -> d) -> x5:a b -> x6:a c -> {VV : a d | VV == vliftF2 x1 x2 x5 x6\n                                                                              && VV == vbind x1 x5 lam x##a5Pn : b##xo . vbind x1 x6 lam y##a5Po : c##xo . vlift x1 (x2 x##a5Pn y##a5Po)}","ident":"IsMonad.vliftF2","stop":{"line":139,"column":8}},{"start":{"line":139,"column":9},"ann":"(IsMonad.IsMonad a)","ident":"isMonad","stop":{"line":139,"column":16}},{"start":{"line":139,"column":17},"ann":"a -> b -> c","ident":"f","stop":{"line":139,"column":18}},{"start":{"line":139,"column":19},"ann":"a b","ident":"ma","stop":{"line":139,"column":21}},{"start":{"line":139,"column":22},"ann":"a b","ident":"mb","stop":{"line":139,"column":24}},{"start":{"line":140,"column":3},"ann":"{v : a b | v == ma}","ident":"ma","stop":{"line":140,"column":5}},{"start":{"line":141,"column":3},"ann":"a -> b c","ident":"lq_anf$##7205759403792816596","stop":{"line":141,"column":43}},{"start":{"line":141,"column":5},"ann":"a","ident":"x","stop":{"line":141,"column":6}},{"start":{"line":141,"column":17},"ann":"{v : a b | v == mb}","ident":"mb","stop":{"line":141,"column":19}},{"start":{"line":141,"column":20},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad\n                            && VV == vlift'}","ident":"vlift'","stop":{"line":141,"column":42}},{"start":{"line":141,"column":22},"ann":"a","ident":"y","stop":{"line":141,"column":23}},{"start":{"line":141,"column":34},"ann":"{VV : a | VV == f x y}","ident":"lq_anf$##7205759403792816595","stop":{"line":141,"column":41}},{"start":{"line":141,"column":37},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":141,"column":38}},{"start":{"line":141,"column":39},"ann":"{VV : a | VV == y}","ident":"y","stop":{"line":141,"column":40}},{"start":{"line":143,"column":3},"ann":"forall a . a -> b a","ident":"vlift'","stop":{"line":143,"column":9}},{"start":{"line":143,"column":12},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad}","ident":"_","stop":{"line":143,"column":25}},{"start":{"line":143,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":143,"column":25}},{"start":{"line":144,"column":3},"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind'","stop":{"line":144,"column":9}},{"start":{"line":144,"column":12},"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad}","ident":"_","stop":{"line":144,"column":25}},{"start":{"line":144,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad}","ident":"isMonad","stop":{"line":144,"column":25}}],"errors":[]}