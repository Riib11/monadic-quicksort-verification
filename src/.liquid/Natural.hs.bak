module Natural where


{-@
data Natural = Zero | Suc Natural
@-}
data Natural = Zero | Suc Natural


{-@ reflect add @-}
add :: Natural -> Natural -> Natural
add Zero    n = n
add (Suc m) n = Suc (add m n)


{-@ reflect mul @-}
mul :: Natural -> Natural -> Natural
mul Zero    _ = Zero
mul (Suc m) n = add n (mul m n)
