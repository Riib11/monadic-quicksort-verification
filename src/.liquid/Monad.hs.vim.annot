1:1-1:1::Monad.$trModule :: "GHC.Types.Module"
40:3-40:53::Monad.$dm>>= :: "forall a .\n(Monad.Monad<[]> a) =>\nforall a b .\nx1:a a -> x2:(a -> a b) -> {v : a b | v == vbind $dMonad_a4ov x1 x2}"
41:3-41:15::_ :: "{VV : forall a b .\n      x1:c a -> x2:(a -> c b) -> {v : c b | v == vbind $dMonad_a4ov x1 x2} | VV == vbind $dMonad_a4ov}"
47:3-47:45::Monad.$dm>> :: "forall a .\n(Monad.Monad<[]> a) =>\nforall a b .\nx1:a a -> x2:a b -> {v : a b | v == seq $dMonad_a4ov x1 x2}"
48:3-48:13::_ :: "{VV : forall a b .\n      x1:c a -> x2:c b -> {v : c b | v == seq $dMonad_a4ov x1 x2} | VV == seq $dMonad_a4ov}"
51:3-51:71::Monad.$dmkleisli :: "forall a .\n(Monad.Monad<[]> a) =>\nforall a b c . f:(a -> a b) -> g:(b -> a c) -> a -> a c"
52:3-52:35::$dMonad_a4ov :: "{v : (Monad.Monad a) | v == $dMonad_a4ov}"
52:11-52:12::f :: "a -> b c"
52:13-52:14::g :: "a -> b c"
52:18-52:19::x :: "a"
52:28-52:33::lq_anf$##7205759403792810653 :: "{v : a b | v == f x}"
52:31-52:32::x :: "{VV : a | VV == x}"
52:34-52:35::g :: "a -> b c"
55:3-55:69::Monad.$dm>=> :: "forall a .\n(Monad.Monad<[]> a) =>\nforall a b c .\nx1:(a -> a b) -> x3:(b -> a c) -> x5:a -> {v : a c | v == kleisli $dMonad_a4ov x1 x3 x5}"
56:3-56:18::_ :: "{VV : forall a b c .\n      x1:(a -> d b) -> x3:(b -> d c) -> x5:a -> {v : d c | v == kleisli $dMonad_a4ov x1 x3 x5} | VV == kleisli $dMonad_a4ov}"
74:3-74:46::Monad.$dmvlift2 :: "forall a .\n(Monad.Monad<[]> a) =>\nforall a b c . f:(a -> b -> c) -> ma:a a -> a b -> a c"
75:3-75:57::lq_anf$##7205759403792810652 :: "a -> b c"
75:9-75:10::f :: "a -> b -> c"
75:11-75:13::ma :: "a b"
75:14-75:16::mb :: "a b"
75:19-75:21::ma :: "{v : a b | v == ma}"
75:26-75:57::lq_anf$##7205759403792810651 :: "a -> b c"
75:27-75:28::x :: "a"
75:32-75:34::mb :: "{v : a b | v == mb}"
75:39-75:57::$dMonad_a4ov :: "{v : (Monad.Monad a) | v == $dMonad_a4ov}"
75:40-75:41::y :: "a"
75:50-75:57::lq_anf$##7205759403792810650 :: "{VV : a | VV == f x y}"
75:53-75:54::x :: "{VV : a | VV == x}"
75:55-75:56::y :: "{VV : a | VV == y}"
94:3-94:44::Monad.$dm<+> :: "forall a .\n(Monad.MonadPlus<[]> a) =>\nforall a .\nx1:a a -> x2:a a -> {v : a a | v == mplus $dMonadPlus_a4pv x1 x2}"
95:3-95:16::_ :: "{VV : forall a .\n      x1:b a -> x2:b a -> {v : b a | v == mplus $dMonadPlus_a4pv x1 x2} | VV == mplus $dMonadPlus_a4pv}"
98:3-98:70::Monad.$dmmplus_ap :: "forall a .\n(Monad.MonadPlus<[]> a) =>\nforall a b . f:(a -> a b) -> g:(a -> a b) -> a -> a b"
99:3-99:31::$dMonadPlus_a4pv :: "{v : (Monad.MonadPlus a) | v == $dMonadPlus_a4pv}"
99:12-99:13::f :: "a -> b c"
99:14-99:15::g :: "a -> b c"
99:16-99:17::x :: "a"
99:20-99:23::lq_anf$##7205759403792810648 :: "{v : a b | v == f x}"
99:22-99:23::x :: "{VV : a | VV == x}"
99:28-99:31::lq_anf$##7205759403792810649 :: "{v : a b | v == g x}"
99:30-99:31::x :: "{VV : a | VV == x}"
102:3-102:67::Monad.$dm$+$ :: "forall a .\n(Monad.MonadPlus<[]> a) =>\nforall a b .\nx1:(a -> a b) -> x3:(a -> a b) -> x5:a -> {v : a b | v == mplus_ap $dMonadPlus_a4pv x1 x3 x5}"
103:3-103:19::_ :: "{VV : forall a b .\n      x1:(a -> c b) -> x3:(a -> c b) -> x5:a -> {v : c b | v == mplus_ap $dMonadPlus_a4pv x1 x3 x5} | VV == mplus_ap $dMonadPlus_a4pv}"
125:3-125:24::Monad.$dmguard :: "forall a . (Monad.MonadPlus<[]> a) => GHC.Types.Bool -> a ()"
126:3-126:41::lq_anf$##7205759403792810647 :: "{v : GHC.Types.Bool | v == b}"
126:9-126:10::b :: "GHC.Types.Bool"
126:16-126:17::_ :: "{v : GHC.Types.Bool | v == b}"
126:23-126:30::$dMonad_a4q0 :: "{v : (Monad.Monad a) | v == $p1MonadPlus $dMonadPlus_a4pv\n                       && v == $dMonad_a4q0}"
126:28-126:30::GHC.Tuple.() :: "{v : () | v == ()}"
126:36-126:41::_ :: "{VV : forall a .\n      {v : b a | v == mzero $dMonadPlus_a4pv} | VV == mzero $dMonadPlus_a4pv}"