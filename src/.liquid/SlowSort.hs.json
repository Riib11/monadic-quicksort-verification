{"status":"safe","types":{"84":{"12":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a ((VList.VList b), (VList.VList b)) | VV == split x1 x2}","ident":"SlowSort.split","row":84,"col":12},"18":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":84,"col":18},"3":{"ann":"forall a .\nx1:(VList.VList a) -> {v : b ((VList.VList a), (VList.VList a)) | v == split isMonadPlus x1}","ident":"split_","row":84,"col":3}},"51":{"14":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a (VList.VList b) | VV == permute x1 x2}","ident":"SlowSort.permute","row":51,"col":14},"22":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":51,"col":22},"3":{"ann":"forall a .\nx1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1}","ident":"permute_","row":51,"col":3}},"37":{"1":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a (VList.VList b) | VV == permute x1 x2}","ident":"SlowSort.permute","row":37,"col":1},"34":{"ann":"{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}","ident":"_","row":37,"col":34},"27":{"ann":"{v : (VList.VList a) | vlength v == Zero\n                       && v == Nil}","ident":"lq_anf$##7205759403792843614","row":37,"col":27},"9":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":37,"col":9}},"48":{"15":{"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad_}","ident":"_","row":48,"col":15},"3":{"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind_","row":48,"col":3},"21":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":48,"col":21}},"61":{"15":{"ann":"a -> a -> GHC.Types.Bool","ident":"_","row":61,"col":15},"19":{"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","row":61,"col":19},"3":{"ann":"a -> a -> GHC.Types.Bool","ident":"leq_","row":61,"col":3}},"25":{"22":{"ann":"(IsOrdered.IsOrdered a)","ident":"iOrd","row":25,"col":22},"29":{"ann":"x1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1}","ident":"lq_anf$##7205759403792843622","row":25,"col":29},"1":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(IsOrdered.IsOrdered b) -> x3:(VList.VList b) -> {VV : a (VList.VList b) | VV == slowsort x1 x2 x3\n                                                                                                                && VV == kleisli (isMonad x1) (permute x1) (mguardBy x1 (isSorted x2)) x3}","ident":"SlowSort.slowsort","row":25,"col":1},"58":{"ann":"x1:(VList.VList a) -> {v : GHC.Types.Bool | v == isSorted iOrd x1}","ident":"isSorted_","row":25,"col":58},"38":{"ann":"{VV : forall a .\n      x1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1} | VV == permute isMonadPlus\n                                                                                    && VV == permute_}","ident":"_","row":25,"col":38},"47":{"ann":"x1:(VList.VList a) -> {v : b (VList.VList a) | v == mguardBy isMonadPlus isSorted_ x1\n                                               && v == vseq (isMonad isMonadPlus) (mguard isMonadPlus (isSorted_ x1)) (vlift (isMonad isMonadPlus) x1)}","ident":"lq_anf$##7205759403792843623","row":25,"col":47},"10":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":25,"col":10}},"78":{"12":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","row":78,"col":12},"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":78,"col":18},"3":{"ann":"forall a . a -> b a","ident":"vlift_","row":78,"col":3}},"43":{"48":{"ann":"{v : (VList.VList a) | v == vappend xs zs}","ident":"lq_anf$##7205759403792843617","row":43,"col":48},"28":{"ann":"(VList.VList a)","ident":"ys","row":43,"col":28},"57":{"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","row":43,"col":57},"31":{"ann":"(VList.VList a)","ident":"zs","row":43,"col":31},"45":{"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","row":43,"col":45},"26":{"ann":"{VV : forall a .\n      x1:(VList.VList a) -> x2:(VList.VList a) -> {v : (VList.VList a) | v == vappend x1 x2} | VV == vappend}","ident":"VList.vappend","row":43,"col":26},"60":{"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","row":43,"col":60}},"82":{"57":{"ann":"{v : ((VList.VList a), (VList.VList a)) | x_Tuple21 v == ys\n                                          && lqdc##$select v == ys\n                                          && fst v == ys}","ident":"lq_anf$##7205759403792843610","row":82,"col":57},"49":{"ann":"a ((VList.VList b), (VList.VList b))","ident":"lq_anf$##7205759403792843611","row":82,"col":49},"44":{"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","row":82,"col":44},"17":{"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd isMonadPlus\n                                     && VV == vmadd_}","ident":"vmadd_","row":82,"col":17},"67":{"ann":"{VV : a | VV == x}","ident":"x","row":82,"col":67},"40":{"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","row":82,"col":40},"62":{"ann":"{v : (VList.VList a) | tl v == zs\n                       && hd v == x\n                       && vlength v == Suc (vlength zs)\n                       && v == Cons x zs}","ident":"lq_anf$##7205759403792843609","row":82,"col":62},"69":{"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","row":82,"col":69},"58":{"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","row":82,"col":58},"33":{"ann":"{v : (VList.VList a) | tl v == ys\n                       && hd v == x\n                       && vlength v == Suc (vlength ys)\n                       && v == Cons x ys}","ident":"lq_anf$##7205759403792843606","row":82,"col":33},"38":{"ann":"{VV : a | VV == x}","ident":"x","row":82,"col":38},"3":{"ann":"((VList.VList a), (VList.VList a))","ident":"lq_anf$##7205759403792843605","row":82,"col":3},"24":{"ann":"a ((VList.VList b), (VList.VList b))","ident":"lq_anf$##7205759403792843608","row":82,"col":24},"32":{"ann":"{v : ((VList.VList a), (VList.VList a)) | x_Tuple22 v == zs\n                                          && lqdc##$select v == zs\n                                          && snd v == zs}","ident":"lq_anf$##7205759403792843607","row":82,"col":32}},"28":{"15":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a (VList.VList b) | VV == permute x1 x2}","ident":"SlowSort.permute","row":28,"col":15},"23":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":28,"col":23},"3":{"ann":"forall a .\nx1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1}","ident":"permute_","row":28,"col":3}},"31":{"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":31,"col":18},"26":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":31,"col":26},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":31,"col":3}},"49":{"14":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a ((VList.VList b), (VList.VList b)) | VV == split x1 x2}","ident":"SlowSort.split","row":49,"col":14},"20":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":49,"col":20},"3":{"ann":"forall a .\nx1:(VList.VList a) -> {v : b ((VList.VList a), (VList.VList a)) | v == split isMonadPlus x1}","ident":"split_","row":49,"col":3}},"85":{"13":{"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd isMonadPlus}","ident":"_","row":85,"col":13},"19":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":85,"col":19},"3":{"ann":"forall a . b a -> b a -> b a","ident":"vmadd_","row":85,"col":3}},"50":{"15":{"ann":"x1:(a -> b -> c) -> x4:d a -> x5:d b -> {v : d c | v == vliftF2 isMonad_ x1 x4 x5\n                                                   && v == vbind isMonad_ x4 lam x##a5Pn : a##xo . vbind isMonad_ x5 lam y##a5Po : b##xo . vlift isMonad_ (x1 x##a5Pn y##a5Po)}","ident":"_","row":50,"col":15},"23":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":50,"col":23},"3":{"ann":"forall a b c .\nx1:(a -> b -> c) -> x4:d a -> x5:d b -> {v : d c | v == vliftF2 isMonad_ x1 x4 x5\n                                                   && v == vbind isMonad_ x4 lam x##a5Pn : a##xo . vbind isMonad_ x5 lam y##a5Po : b##xo . vlift isMonad_ (x1 x##a5Pn y##a5Po)}","ident":"vliftF2_","row":50,"col":3}},"44":{"25":{"ann":"{v : a (VList.VList b) | v == permute isMonadPlus ys\n                         && v == permute_ ys}","ident":"lq_anf$##7205759403792843619","row":44,"col":25},"35":{"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","row":44,"col":35}},"88":{"15":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":88,"col":15},"23":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":88,"col":23},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":88,"col":3}},"29":{"15":{"ann":"x1:(a -> GHC.Types.Bool) -> x3:a -> {v : b a | v == mguardBy isMonadPlus x1 x3\n                                               && v == vseq (isMonad isMonadPlus) (mguard isMonadPlus (x1 x3)) (vlift (isMonad isMonadPlus) x3)}","ident":"_","row":29,"col":15},"3":{"ann":"forall a .\nx1:(a -> GHC.Types.Bool) -> x3:a -> {v : b a | v == mguardBy isMonadPlus x1 x3\n                                               && v == vseq (isMonad isMonadPlus) (mguard isMonadPlus (x1 x3)) (vlift (isMonad isMonadPlus) x3)}","ident":"mguardBy_","row":29,"col":3},"24":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":29,"col":24}},"30":{"15":{"ann":"x1:(a -> b c) -> x3:(c -> b d) -> x5:a -> {v : b d | v == kleisli isMonad_ x1 x3 x5\n                                                     && v == raw_kleisli (vbind isMonad_) x1 x3 x5}","ident":"_","row":30,"col":15},"23":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":30,"col":23},"3":{"ann":"forall a b c .\nx1:(a -> d b) -> x3:(b -> d c) -> x5:a -> {v : d c | v == kleisli isMonad_ x1 x3 x5\n                                                     && v == raw_kleisli (vbind isMonad_) x1 x3 x5}","ident":"kleisli_","row":30,"col":3}},"86":{"13":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","row":86,"col":13},"19":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":86,"col":19},"3":{"ann":"forall a . a -> b a","ident":"vlift_","row":86,"col":3}},"68":{"22":{"ann":"a","ident":"x","row":68,"col":22},"17":{"ann":"(IsOrdered.IsOrdered a)","ident":"iOrd","row":68,"col":17},"1":{"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:a -> x3:((VList.VList a), (VList.VList a)) -> {VV : GHC.Types.Bool | VV == isSortedBetween x1 x2 x3\n                                                                                                      && VV == (vall lam y##abar : a##xo . leq x1 y##abar x2 (lqdc##$select x3)\n                                                                                                                && vall lam z##abas : a##xo . leq x1 x2 z##abas (lqdc##$select x3))}","ident":"SlowSort.isSortedBetween","row":68,"col":1}},"45":{"25":{"ann":"{v : a (VList.VList b) | v == permute isMonadPlus zs\n                         && v == permute_ zs}","ident":"lq_anf$##7205759403792843620","row":45,"col":25},"35":{"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","row":45,"col":35}},"1":{"1":{"ann":"GHC.Types.Module","ident":"SlowSort.$trModule","row":1,"col":1}},"40":{"14":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":40,"col":14},"22":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":40,"col":22},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":40,"col":3}},"62":{"15":{"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:(VList.VList a) -> {VV : GHC.Types.Bool | VV == isSorted x1 x2}","ident":"SlowSort.isSorted","row":62,"col":15},"3":{"ann":"x1:(VList.VList a) -> {v : GHC.Types.Bool | v == isSorted iOrd x1}","ident":"isSorted_","row":62,"col":3},"24":{"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","row":62,"col":24}},"59":{"43":{"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","row":59,"col":43},"49":{"ann":"{v : GHC.Types.Bool | v == isSorted iOrd xs\n                      && v == isSorted_ xs}","ident":"lq_anf$##7205759403792843594","row":59,"col":49},"29":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792843593","row":59,"col":29},"40":{"ann":"{VV : a | VV == x}","ident":"x","row":59,"col":40},"59":{"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","row":59,"col":59},"34":{"ann":"a -> GHC.Types.Bool","ident":"lq_anf$##7205759403792843592","row":59,"col":34}},"52":{"25":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":52,"col":25},"17":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":52,"col":17},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":52,"col":3}},"70":{"16":{"ann":"a -> a -> GHC.Types.Bool","ident":"_","row":70,"col":16},"20":{"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","row":70,"col":20},"9":{"ann":"a -> a -> GHC.Types.Bool","ident":"leq_","row":70,"col":9}},"69":{"48":{"ann":"{VV : a | VV == x}","ident":"x","row":69,"col":48},"25":{"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","row":69,"col":25},"31":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792837365","row":69,"col":31},"36":{"ann":"{v : GHC.Types.Bool | v == leq_ x z}","ident":"_","row":69,"col":36},"50":{"ann":"{VV : a | VV == z}","ident":"z","row":69,"col":50},"22":{"ann":"{VV : a | VV == x}","ident":"x","row":69,"col":22},"53":{"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","row":69,"col":53},"20":{"ann":"{VV : a | VV == y}","ident":"y","row":69,"col":20},"8":{"ann":"{v : GHC.Types.Bool | v == leq_ y x}","ident":"_","row":69,"col":8},"38":{"ann":"a","ident":"z","row":69,"col":38},"3":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792837363","row":69,"col":3},"10":{"ann":"a","ident":"y","row":69,"col":10}},"87":{"13":{"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad_}","ident":"_","row":87,"col":13},"19":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":87,"col":19},"3":{"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind_","row":87,"col":3}},"39":{"12":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","row":39,"col":12},"18":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":39,"col":18},"3":{"ann":"forall a . a -> b a","ident":"vlift_","row":39,"col":3}},"58":{"29":{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","row":58,"col":29},"1":{"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:(VList.VList a) -> {VV : GHC.Types.Bool | VV == isSorted x1 x2}","ident":"SlowSort.isSorted","row":58,"col":1},"10":{"ann":"(IsOrdered.IsOrdered a)","ident":"iOrd","row":58,"col":10}},"27":{"15":{"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:(VList.VList a) -> {VV : GHC.Types.Bool | VV == isSorted x1 x2}","ident":"SlowSort.isSorted","row":27,"col":15},"3":{"ann":"x1:(VList.VList a) -> {v : GHC.Types.Bool | v == isSorted iOrd x1}","ident":"isSorted_","row":27,"col":3},"24":{"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","row":27,"col":24}},"79":{"14":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":79,"col":14},"22":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":79,"col":22},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":79,"col":3}},"42":{"11":{"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","row":42,"col":11},"3":{"ann":"{v : a ((VList.VList b), (VList.VList b)) | v == split isMonadPlus xs\n                                            && v == split_ xs}","ident":"lq_anf$##7205759403792843615","row":42,"col":3}},"76":{"7":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":76,"col":7},"25":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_\n                            && VV == vlift_}","ident":"vlift_","row":76,"col":25},"1":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a ((VList.VList b), (VList.VList b)) | VV == split x1 x2}","ident":"SlowSort.split","row":76,"col":1},"33":{"ann":"{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}","ident":"_","row":76,"col":33},"38":{"ann":"{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}","ident":"_","row":76,"col":38},"32":{"ann":"((VList.VList a), (VList.VList a))","ident":"lq_anf$##7205759403792843603","row":76,"col":32}},"81":{"11":{"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","row":81,"col":11},"3":{"ann":"{v : a ((VList.VList b), (VList.VList b)) | v == split isMonadPlus xs\n                                            && v == split_ xs}","ident":"lq_anf$##7205759403792843604","row":81,"col":3}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"SlowSort.$trModule","stop":{"line":1,"column":1}},{"start":{"line":25,"column":1},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(IsOrdered.IsOrdered b) -> x3:(VList.VList b) -> {VV : a (VList.VList b) | VV == slowsort x1 x2 x3\n                                                                                                                && VV == kleisli (isMonad x1) (permute x1) (mguardBy x1 (isSorted x2)) x3}","ident":"SlowSort.slowsort","stop":{"line":25,"column":9}},{"start":{"line":25,"column":10},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":25,"column":21}},{"start":{"line":25,"column":22},"ann":"(IsOrdered.IsOrdered a)","ident":"iOrd","stop":{"line":25,"column":26}},{"start":{"line":25,"column":29},"ann":"x1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1}","ident":"lq_anf$##7205759403792843622","stop":{"line":25,"column":68}},{"start":{"line":25,"column":38},"ann":"{VV : forall a .\n      x1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1} | VV == permute isMonadPlus\n                                                                                    && VV == permute_}","ident":"_","stop":{"line":25,"column":46}},{"start":{"line":25,"column":47},"ann":"x1:(VList.VList a) -> {v : b (VList.VList a) | v == mguardBy isMonadPlus isSorted_ x1\n                                               && v == vseq (isMonad isMonadPlus) (mguard isMonadPlus (isSorted_ x1)) (vlift (isMonad isMonadPlus) x1)}","ident":"lq_anf$##7205759403792843623","stop":{"line":25,"column":68}},{"start":{"line":25,"column":58},"ann":"x1:(VList.VList a) -> {v : GHC.Types.Bool | v == isSorted iOrd x1}","ident":"isSorted_","stop":{"line":25,"column":67}},{"start":{"line":27,"column":3},"ann":"x1:(VList.VList a) -> {v : GHC.Types.Bool | v == isSorted iOrd x1}","ident":"isSorted_","stop":{"line":27,"column":12}},{"start":{"line":27,"column":15},"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:(VList.VList a) -> {VV : GHC.Types.Bool | VV == isSorted x1 x2}","ident":"SlowSort.isSorted","stop":{"line":27,"column":28}},{"start":{"line":27,"column":24},"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","stop":{"line":27,"column":28}},{"start":{"line":28,"column":3},"ann":"forall a .\nx1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1}","ident":"permute_","stop":{"line":28,"column":11}},{"start":{"line":28,"column":15},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a (VList.VList b) | VV == permute x1 x2}","ident":"SlowSort.permute","stop":{"line":28,"column":34}},{"start":{"line":28,"column":23},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":28,"column":34}},{"start":{"line":29,"column":3},"ann":"forall a .\nx1:(a -> GHC.Types.Bool) -> x3:a -> {v : b a | v == mguardBy isMonadPlus x1 x3\n                                               && v == vseq (isMonad isMonadPlus) (mguard isMonadPlus (x1 x3)) (vlift (isMonad isMonadPlus) x3)}","ident":"mguardBy_","stop":{"line":29,"column":12}},{"start":{"line":29,"column":15},"ann":"x1:(a -> GHC.Types.Bool) -> x3:a -> {v : b a | v == mguardBy isMonadPlus x1 x3\n                                               && v == vseq (isMonad isMonadPlus) (mguard isMonadPlus (x1 x3)) (vlift (isMonad isMonadPlus) x3)}","ident":"_","stop":{"line":29,"column":35}},{"start":{"line":29,"column":24},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":29,"column":35}},{"start":{"line":30,"column":3},"ann":"forall a b c .\nx1:(a -> d b) -> x3:(b -> d c) -> x5:a -> {v : d c | v == kleisli isMonad_ x1 x3 x5\n                                                     && v == raw_kleisli (vbind isMonad_) x1 x3 x5}","ident":"kleisli_","stop":{"line":30,"column":11}},{"start":{"line":30,"column":15},"ann":"x1:(a -> b c) -> x3:(c -> b d) -> x5:a -> {v : b d | v == kleisli isMonad_ x1 x3 x5\n                                                     && v == raw_kleisli (vbind isMonad_) x1 x3 x5}","ident":"_","stop":{"line":30,"column":31}},{"start":{"line":30,"column":23},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":30,"column":31}},{"start":{"line":31,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":31,"column":11}},{"start":{"line":31,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":31,"column":37}},{"start":{"line":31,"column":26},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":31,"column":37}},{"start":{"line":37,"column":1},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a (VList.VList b) | VV == permute x1 x2}","ident":"SlowSort.permute","stop":{"line":37,"column":8}},{"start":{"line":37,"column":9},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":37,"column":20}},{"start":{"line":37,"column":27},"ann":"{v : (VList.VList a) | vlength v == Zero\n                       && v == Nil}","ident":"lq_anf$##7205759403792843614","stop":{"line":37,"column":37}},{"start":{"line":37,"column":34},"ann":"{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}","ident":"_","stop":{"line":37,"column":37}},{"start":{"line":39,"column":3},"ann":"forall a . a -> b a","ident":"vlift_","stop":{"line":39,"column":9}},{"start":{"line":39,"column":12},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","stop":{"line":39,"column":26}},{"start":{"line":39,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":39,"column":26}},{"start":{"line":40,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":40,"column":11}},{"start":{"line":40,"column":14},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":40,"column":33}},{"start":{"line":40,"column":22},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":40,"column":33}},{"start":{"line":42,"column":3},"ann":"{v : a ((VList.VList b), (VList.VList b)) | v == split isMonadPlus xs\n                                            && v == split_ xs}","ident":"lq_anf$##7205759403792843615","stop":{"line":42,"column":14}},{"start":{"line":42,"column":11},"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","stop":{"line":42,"column":13}},{"start":{"line":43,"column":26},"ann":"{VV : forall a .\n      x1:(VList.VList a) -> x2:(VList.VList a) -> {v : (VList.VList a) | v == vappend x1 x2} | VV == vappend}","ident":"VList.vappend","stop":{"line":43,"column":64}},{"start":{"line":43,"column":28},"ann":"(VList.VList a)","ident":"ys","stop":{"line":43,"column":30}},{"start":{"line":43,"column":31},"ann":"(VList.VList a)","ident":"zs","stop":{"line":43,"column":33}},{"start":{"line":43,"column":45},"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","stop":{"line":43,"column":47}},{"start":{"line":43,"column":48},"ann":"{v : (VList.VList a) | v == vappend xs zs}","ident":"lq_anf$##7205759403792843617","stop":{"line":43,"column":63}},{"start":{"line":43,"column":57},"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","stop":{"line":43,"column":59}},{"start":{"line":43,"column":60},"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","stop":{"line":43,"column":62}},{"start":{"line":44,"column":25},"ann":"{v : a (VList.VList b) | v == permute isMonadPlus ys\n                         && v == permute_ ys}","ident":"lq_anf$##7205759403792843619","stop":{"line":44,"column":38}},{"start":{"line":44,"column":35},"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","stop":{"line":44,"column":37}},{"start":{"line":45,"column":25},"ann":"{v : a (VList.VList b) | v == permute isMonadPlus zs\n                         && v == permute_ zs}","ident":"lq_anf$##7205759403792843620","stop":{"line":45,"column":38}},{"start":{"line":45,"column":35},"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","stop":{"line":45,"column":37}},{"start":{"line":48,"column":3},"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind_","stop":{"line":48,"column":9}},{"start":{"line":48,"column":15},"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad_}","ident":"_","stop":{"line":48,"column":29}},{"start":{"line":48,"column":21},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":48,"column":29}},{"start":{"line":49,"column":3},"ann":"forall a .\nx1:(VList.VList a) -> {v : b ((VList.VList a), (VList.VList a)) | v == split isMonadPlus x1}","ident":"split_","stop":{"line":49,"column":9}},{"start":{"line":49,"column":14},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a ((VList.VList b), (VList.VList b)) | VV == split x1 x2}","ident":"SlowSort.split","stop":{"line":49,"column":31}},{"start":{"line":49,"column":20},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":49,"column":31}},{"start":{"line":50,"column":3},"ann":"forall a b c .\nx1:(a -> b -> c) -> x4:d a -> x5:d b -> {v : d c | v == vliftF2 isMonad_ x1 x4 x5\n                                                   && v == vbind isMonad_ x4 lam x##a5Pn : a##xo . vbind isMonad_ x5 lam y##a5Po : b##xo . vlift isMonad_ (x1 x##a5Pn y##a5Po)}","ident":"vliftF2_","stop":{"line":50,"column":11}},{"start":{"line":50,"column":15},"ann":"x1:(a -> b -> c) -> x4:d a -> x5:d b -> {v : d c | v == vliftF2 isMonad_ x1 x4 x5\n                                                   && v == vbind isMonad_ x4 lam x##a5Pn : a##xo . vbind isMonad_ x5 lam y##a5Po : b##xo . vlift isMonad_ (x1 x##a5Pn y##a5Po)}","ident":"_","stop":{"line":50,"column":31}},{"start":{"line":50,"column":23},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":50,"column":31}},{"start":{"line":51,"column":3},"ann":"forall a .\nx1:(VList.VList a) -> {v : b (VList.VList a) | v == permute isMonadPlus x1}","ident":"permute_","stop":{"line":51,"column":11}},{"start":{"line":51,"column":14},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a (VList.VList b) | VV == permute x1 x2}","ident":"SlowSort.permute","stop":{"line":51,"column":33}},{"start":{"line":51,"column":22},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":51,"column":33}},{"start":{"line":52,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":52,"column":11}},{"start":{"line":52,"column":17},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":52,"column":36}},{"start":{"line":52,"column":25},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":52,"column":36}},{"start":{"line":58,"column":1},"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:(VList.VList a) -> {VV : GHC.Types.Bool | VV == isSorted x1 x2}","ident":"SlowSort.isSorted","stop":{"line":58,"column":9}},{"start":{"line":58,"column":10},"ann":"(IsOrdered.IsOrdered a)","ident":"iOrd","stop":{"line":58,"column":14}},{"start":{"line":58,"column":29},"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","stop":{"line":58,"column":33}},{"start":{"line":59,"column":29},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792843593","stop":{"line":59,"column":45}},{"start":{"line":59,"column":34},"ann":"a -> GHC.Types.Bool","ident":"lq_anf$##7205759403792843592","stop":{"line":59,"column":42}},{"start":{"line":59,"column":40},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":59,"column":41}},{"start":{"line":59,"column":43},"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","stop":{"line":59,"column":45}},{"start":{"line":59,"column":49},"ann":"{v : GHC.Types.Bool | v == isSorted iOrd xs\n                      && v == isSorted_ xs}","ident":"lq_anf$##7205759403792843594","stop":{"line":59,"column":61}},{"start":{"line":59,"column":59},"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","stop":{"line":59,"column":61}},{"start":{"line":61,"column":3},"ann":"a -> a -> GHC.Types.Bool","ident":"leq_","stop":{"line":61,"column":7}},{"start":{"line":61,"column":15},"ann":"a -> a -> GHC.Types.Bool","ident":"_","stop":{"line":61,"column":23}},{"start":{"line":61,"column":19},"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","stop":{"line":61,"column":23}},{"start":{"line":62,"column":3},"ann":"x1:(VList.VList a) -> {v : GHC.Types.Bool | v == isSorted iOrd x1}","ident":"isSorted_","stop":{"line":62,"column":12}},{"start":{"line":62,"column":15},"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:(VList.VList a) -> {VV : GHC.Types.Bool | VV == isSorted x1 x2}","ident":"SlowSort.isSorted","stop":{"line":62,"column":28}},{"start":{"line":62,"column":24},"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","stop":{"line":62,"column":28}},{"start":{"line":68,"column":1},"ann":"forall a .\nx1:(IsOrdered.IsOrdered a) -> x2:a -> x3:((VList.VList a), (VList.VList a)) -> {VV : GHC.Types.Bool | VV == isSortedBetween x1 x2 x3\n                                                                                                      && VV == (vall lam y##abar : a##xo . leq x1 y##abar x2 (lqdc##$select x3)\n                                                                                                                && vall lam z##abas : a##xo . leq x1 x2 z##abas (lqdc##$select x3))}","ident":"SlowSort.isSortedBetween","stop":{"line":68,"column":16}},{"start":{"line":68,"column":17},"ann":"(IsOrdered.IsOrdered a)","ident":"iOrd","stop":{"line":68,"column":21}},{"start":{"line":68,"column":22},"ann":"a","ident":"x","stop":{"line":68,"column":23}},{"start":{"line":69,"column":3},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792837363","stop":{"line":69,"column":27}},{"start":{"line":69,"column":8},"ann":"{v : GHC.Types.Bool | v == leq_ y x}","ident":"_","stop":{"line":69,"column":24}},{"start":{"line":69,"column":10},"ann":"a","ident":"y","stop":{"line":69,"column":11}},{"start":{"line":69,"column":20},"ann":"{VV : a | VV == y}","ident":"y","stop":{"line":69,"column":21}},{"start":{"line":69,"column":22},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":69,"column":23}},{"start":{"line":69,"column":25},"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","stop":{"line":69,"column":27}},{"start":{"line":69,"column":31},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792837365","stop":{"line":69,"column":55}},{"start":{"line":69,"column":36},"ann":"{v : GHC.Types.Bool | v == leq_ x z}","ident":"_","stop":{"line":69,"column":52}},{"start":{"line":69,"column":38},"ann":"a","ident":"z","stop":{"line":69,"column":39}},{"start":{"line":69,"column":48},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":69,"column":49}},{"start":{"line":69,"column":50},"ann":"{VV : a | VV == z}","ident":"z","stop":{"line":69,"column":51}},{"start":{"line":69,"column":53},"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","stop":{"line":69,"column":55}},{"start":{"line":70,"column":9},"ann":"a -> a -> GHC.Types.Bool","ident":"leq_","stop":{"line":70,"column":13}},{"start":{"line":70,"column":16},"ann":"a -> a -> GHC.Types.Bool","ident":"_","stop":{"line":70,"column":24}},{"start":{"line":70,"column":20},"ann":"{v : (IsOrdered.IsOrdered a) | v == iOrd}","ident":"iOrd","stop":{"line":70,"column":24}},{"start":{"line":76,"column":1},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a ((VList.VList b), (VList.VList b)) | VV == split x1 x2}","ident":"SlowSort.split","stop":{"line":76,"column":6}},{"start":{"line":76,"column":7},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":76,"column":18}},{"start":{"line":76,"column":25},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_\n                            && VV == vlift_}","ident":"vlift_","stop":{"line":76,"column":42}},{"start":{"line":76,"column":32},"ann":"((VList.VList a), (VList.VList a))","ident":"lq_anf$##7205759403792843603","stop":{"line":76,"column":42}},{"start":{"line":76,"column":33},"ann":"{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}","ident":"_","stop":{"line":76,"column":36}},{"start":{"line":76,"column":38},"ann":"{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}","ident":"_","stop":{"line":76,"column":41}},{"start":{"line":78,"column":3},"ann":"forall a . a -> b a","ident":"vlift_","stop":{"line":78,"column":9}},{"start":{"line":78,"column":12},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","stop":{"line":78,"column":26}},{"start":{"line":78,"column":18},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":78,"column":26}},{"start":{"line":79,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":79,"column":11}},{"start":{"line":79,"column":14},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":79,"column":33}},{"start":{"line":79,"column":22},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":79,"column":33}},{"start":{"line":81,"column":3},"ann":"{v : a ((VList.VList b), (VList.VList b)) | v == split isMonadPlus xs\n                                            && v == split_ xs}","ident":"lq_anf$##7205759403792843604","stop":{"line":81,"column":14}},{"start":{"line":81,"column":11},"ann":"{v : (VList.VList a) | v == xs}","ident":"xs","stop":{"line":81,"column":13}},{"start":{"line":82,"column":3},"ann":"((VList.VList a), (VList.VList a))","ident":"lq_anf$##7205759403792843605","stop":{"line":82,"column":74}},{"start":{"line":82,"column":17},"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd isMonadPlus\n                                     && VV == vmadd_}","ident":"vmadd_","stop":{"line":82,"column":73}},{"start":{"line":82,"column":24},"ann":"a ((VList.VList b), (VList.VList b))","ident":"lq_anf$##7205759403792843608","stop":{"line":82,"column":48}},{"start":{"line":82,"column":32},"ann":"{v : ((VList.VList a), (VList.VList a)) | x_Tuple22 v == zs\n                                          && lqdc##$select v == zs\n                                          && snd v == zs}","ident":"lq_anf$##7205759403792843607","stop":{"line":82,"column":47}},{"start":{"line":82,"column":33},"ann":"{v : (VList.VList a) | tl v == ys\n                       && hd v == x\n                       && vlength v == Suc (vlength ys)\n                       && v == Cons x ys}","ident":"lq_anf$##7205759403792843606","stop":{"line":82,"column":42}},{"start":{"line":82,"column":38},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":82,"column":39}},{"start":{"line":82,"column":40},"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","stop":{"line":82,"column":42}},{"start":{"line":82,"column":44},"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","stop":{"line":82,"column":46}},{"start":{"line":82,"column":49},"ann":"a ((VList.VList b), (VList.VList b))","ident":"lq_anf$##7205759403792843611","stop":{"line":82,"column":73}},{"start":{"line":82,"column":57},"ann":"{v : ((VList.VList a), (VList.VList a)) | x_Tuple21 v == ys\n                                          && lqdc##$select v == ys\n                                          && fst v == ys}","ident":"lq_anf$##7205759403792843610","stop":{"line":82,"column":72}},{"start":{"line":82,"column":58},"ann":"{v : (VList.VList a) | v == ys}","ident":"ys","stop":{"line":82,"column":60}},{"start":{"line":82,"column":62},"ann":"{v : (VList.VList a) | tl v == zs\n                       && hd v == x\n                       && vlength v == Suc (vlength zs)\n                       && v == Cons x zs}","ident":"lq_anf$##7205759403792843609","stop":{"line":82,"column":71}},{"start":{"line":82,"column":67},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":82,"column":68}},{"start":{"line":82,"column":69},"ann":"{v : (VList.VList a) | v == zs}","ident":"zs","stop":{"line":82,"column":71}},{"start":{"line":84,"column":3},"ann":"forall a .\nx1:(VList.VList a) -> {v : b ((VList.VList a), (VList.VList a)) | v == split isMonadPlus x1}","ident":"split_","stop":{"line":84,"column":9}},{"start":{"line":84,"column":12},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(VList.VList b) -> {VV : a ((VList.VList b), (VList.VList b)) | VV == split x1 x2}","ident":"SlowSort.split","stop":{"line":84,"column":29}},{"start":{"line":84,"column":18},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":84,"column":29}},{"start":{"line":85,"column":3},"ann":"forall a . b a -> b a -> b a","ident":"vmadd_","stop":{"line":85,"column":9}},{"start":{"line":85,"column":13},"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd isMonadPlus}","ident":"_","stop":{"line":85,"column":30}},{"start":{"line":85,"column":19},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":85,"column":30}},{"start":{"line":86,"column":3},"ann":"forall a . a -> b a","ident":"vlift_","stop":{"line":86,"column":9}},{"start":{"line":86,"column":13},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","stop":{"line":86,"column":27}},{"start":{"line":86,"column":19},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":86,"column":27}},{"start":{"line":87,"column":3},"ann":"forall a b . c a -> (a -> c b) -> c b","ident":"vbind_","stop":{"line":87,"column":9}},{"start":{"line":87,"column":13},"ann":"{VV : forall a b . c a -> (a -> c b) -> c b | VV == vbind isMonad_}","ident":"_","stop":{"line":87,"column":27}},{"start":{"line":87,"column":19},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":87,"column":27}},{"start":{"line":88,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":88,"column":11}},{"start":{"line":88,"column":15},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":88,"column":34}},{"start":{"line":88,"column":23},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":88,"column":34}}],"errors":[]}