{"status":"safe","types":{"51":{"48":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == iMP}","ident":"iMP","row":51,"col":48},"7":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"iMP","row":51,"col":7},"43":{"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd iMP}","ident":"_","row":51,"col":43},"13":{"ann":"{VV : forall a b c .\n      x1:(forall a .\n          a a -> a a -> a a) -> x4:(b -> a c) -> x6:(b -> a c) -> x8:b -> {v : a c | v == raw_vmaddF x1 x4 x6 x8\n                                                                                     && v == x1 (x4 x8) (x6 x8)} | VV == raw_vmaddF}","ident":"IsMonadPlus.raw_vmaddF","row":51,"col":13},"35":{"ann":"forall a . b a -> b a -> b a","ident":"vmadd_","row":51,"col":35},"1":{"ann":"forall a b c .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(b -> a c) -> x4:(b -> a c) -> x6:b -> {VV : a c | VV == vmaddF x1 x2 x4 x6\n                                                                                        && VV == raw_vmaddF (vmadd x1) x2 x4 x6}","ident":"IsMonadPlus.vmaddF","row":51,"col":1},"23":{"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd iMP\n                                     && VV == vmadd_}","ident":"vmadd_","row":51,"col":23}},"61":{"15":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":61,"col":15},"23":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":61,"col":23},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":61,"col":3}},"130":{"51":{"ann":"{v : GHC.Types.Bool | v == b}","ident":"b","row":130,"col":51},"31":{"ann":"{v : a () | v == mguard isMonadPlus b\n            && v == (if b then vlift (isMonad isMonadPlus) () else vepsilon isMonadPlus)}","ident":"lq_anf$##7205759403792823386","row":130,"col":31},"18":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":130,"col":18},"39":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":130,"col":39},"3":{"ann":"a b","ident":"lq_anf$##7205759403792823387","row":130,"col":3},"9":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"lq_anf$##7205759403792823385","row":130,"col":9},"54":{"ann":"{v : a b | v == m1}","ident":"m1","row":130,"col":54}},"129":{"3":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":129,"col":3}},"57":{"49":{"ann":"{VV : forall a .\n      {v : b a | v == vepsilon isMonadPlus\n                 && v == vepsilon_} | VV == vepsilon isMonadPlus\n                                      && VV == vepsilon_}","ident":"_","row":57,"col":49},"1":{"ann":"forall a .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> {VV : a () | VV == mguard x1 x2\n                                                                    && VV == (if x2 then vlift (isMonad x1) () else vepsilon x1)}","ident":"IsMonadPlus.mguard","row":57,"col":1},"34":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_\n                            && VV == vlift_}","ident":"vlift_","row":57,"col":34},"20":{"ann":"GHC.Types.Bool","ident":"b","row":57,"col":20},"27":{"ann":"{v : GHC.Types.Bool | v == b}","ident":"_","row":57,"col":27},"41":{"ann":"{v : () | v == ()}","ident":"GHC.Tuple.()","row":57,"col":41},"8":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":57,"col":8},"24":{"ann":"{v : GHC.Types.Bool | v == b}","ident":"lq_anf$##7205759403792823380","row":57,"col":24}},"72":{"14":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","row":72,"col":14},"22":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":72,"col":22},"3":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","row":72,"col":3}},"91":{"1":{"ann":"forall a b c .\nx1:(IsMonadPlus.IsMonadPlus c) -> x2:c c -> x3:c c -> x4:(c -> c c) -> {VV : () | vmadd x1 x2 x3 == x3 => vmadd x1 (vbind (isMonad x1) x2 x4) (vbind (isMonad x1) x3 x4) == vbind (isMonad x1) x3 x4}","ident":"IsMonadPlus.vbind_monotonic_refinement","row":91,"col":1}},"128":{"31":{"ann":"a b","ident":"m1","row":128,"col":31},"29":{"ann":"GHC.Types.Bool","ident":"b","row":128,"col":29},"17":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":128,"col":17},"1":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> x3:a b -> x4:a b -> {VV : a b | VV == mguard_disjoint x1 x2 x3 x4\n                                                                                       && VV == vmadd x1 (vseq (isMonad x1) (mguard x1 x2) x3) (vseq (isMonad x1) (mguard x1 (vnot x2)) x3)}","ident":"IsMonadPlus.mguard_disjoint","row":128,"col":1},"34":{"ann":"a b","ident":"m2","row":128,"col":34}},"131":{"51":{"ann":"{v : GHC.Types.Bool | v == vnot b\n                      && v == (if b then false else true)}","ident":"lq_anf$##7205759403792823389","row":131,"col":51},"61":{"ann":"{v : a b | v == m1}","ident":"m1","row":131,"col":61},"57":{"ann":"{v : GHC.Types.Bool | v == b}","ident":"b","row":131,"col":57},"31":{"ann":"a ()","ident":"lq_anf$##7205759403792823390","row":131,"col":31},"18":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":131,"col":18},"39":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":131,"col":39},"3":{"ann":"a b","ident":"lq_anf$##7205759403792823391","row":131,"col":3},"9":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"lq_anf$##7205759403792823388","row":131,"col":9}},"71":{"14":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","row":71,"col":14},"20":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":71,"col":20},"3":{"ann":"forall a . a -> b a","ident":"vlift_","row":71,"col":3}},"67":{"43":{"ann":"{v : GHC.Types.Bool | v == p x}","ident":"lq_anf$##7205759403792823381","row":67,"col":43},"28":{"ann":"{VV : forall a b .\n      x1:c a -> x2:c b -> {v : c b | v == vseq isMonad_ x1 x2\n                                     && v == vbind isMonad_ x1 (vconst x2)} | VV == vseq isMonad_\n                                                                              && VV == vseq_}","ident":"vseq_","row":67,"col":28},"50":{"ann":"{v : a b | v == vlift_ x}","ident":"lq_anf$##7205759403792823383","row":67,"col":50},"22":{"ann":"a -> GHC.Types.Bool","ident":"p","row":67,"col":22},"1":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(b -> GHC.Types.Bool) -> x4:b -> {VV : a b | VV == mguardBy x1 x2 x4\n                                                                                  && VV == vseq (isMonad x1) (mguard x1 (x2 x4)) (vlift (isMonad x1) x4)}","ident":"IsMonadPlus.mguardBy","row":67,"col":1},"34":{"ann":"a ()","ident":"lq_anf$##7205759403792823382","row":67,"col":34},"46":{"ann":"{VV : a | VV == x}","ident":"x","row":67,"col":46},"58":{"ann":"{VV : a | VV == x}","ident":"x","row":67,"col":58},"24":{"ann":"a","ident":"x","row":67,"col":24},"10":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":67,"col":10}},"1":{"1":{"ann":"GHC.Types.Module","ident":"IsMonadPlus.$trModule","row":1,"col":1}},"144":{"1":{"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus b) -> x2:GHC.Types.Bool -> x3:b b -> x4:b b -> {VV : () | vmadd x1 (mguard_disjoint x1 x2 x3 x4) (vbranch x2 x3 x4) == vbranch x2 x3 x4}","ident":"IsMonadPlus.mguard_disjoint_branch","row":144,"col":1}},"105":{"1":{"ann":"forall a b c .\nx1:(IsMonadPlus.IsMonadPlus c) -> x2:GHC.Types.Bool -> x3:c c -> x4:(c -> c) -> {VV : () | vliftF2 (isMonad x1) (vconstF x4) (mguard x1 x2) x3 == vliftF2 (isMonad x1) (vflip (vconstF x4)) x3 (mguard x1 x2)}","ident":"IsMonadPlus.isMCommutative_mguard","row":105,"col":1}},"59":{"15":{"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","row":59,"col":15},"3":{"ann":"forall a . a -> b a","ident":"vlift_","row":59,"col":3},"21":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":59,"col":21}},"70":{"14":{"ann":"x1:GHC.Types.Bool -> {v : a () | v == mguard isMonadPlus x1\n                                 && v == (if x1 then vlift (isMonad isMonadPlus) () else vepsilon isMonadPlus)}","ident":"_","row":70,"col":14},"3":{"ann":"x1:GHC.Types.Bool -> {v : a () | v == mguard isMonadPlus x1\n                                 && v == (if x1 then vlift (isMonad isMonadPlus) () else vepsilon isMonadPlus)}","ident":"mguard_","row":70,"col":3},"21":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":70,"col":21}},"69":{"14":{"ann":"x1:a b -> x2:a c -> {v : a c | v == vseq isMonad_ x1 x2\n                               && v == vbind isMonad_ x1 (vconst x2)}","ident":"_","row":69,"col":14},"19":{"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","row":69,"col":19},"3":{"ann":"forall a b .\nx1:c a -> x2:c b -> {v : c b | v == vseq isMonad_ x1 x2\n                               && v == vbind isMonad_ x1 (vconst x2)}","ident":"vseq_","row":69,"col":3}},"121":{"1":{"ann":"forall a .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> x3:GHC.Types.Bool -> {VV : () | mguard_and x1 x2 x3 == vseq (isMonad x1) (mguard x1 x2) (mguard x1 x3)}","ident":"IsMonadPlus.mguard_and_vseq","row":121,"col":1}},"41":{"37":{"ann":"{v : a b | v == f x}","ident":"lq_anf$##7205759403792820684","row":41,"col":37},"43":{"ann":"{v : a b | v == g x}","ident":"lq_anf$##7205759403792820685","row":41,"col":43},"22":{"ann":"a -> b c","ident":"g","row":41,"col":22},"1":{"ann":"forall a b c .\nx1:(forall a .\n    a a -> a a -> a a) -> x4:(b -> a c) -> x6:(b -> a c) -> x8:b -> {VV : a c | VV == raw_vmaddF x1 x4 x6 x8\n                                                                                && VV == x1 (x4 x8) (x6 x8)}","ident":"IsMonadPlus.raw_vmaddF","row":41,"col":1},"40":{"ann":"{VV : a | VV == x}","ident":"x","row":41,"col":40},"20":{"ann":"a -> b c","ident":"f","row":41,"col":20},"46":{"ann":"{VV : a | VV == x}","ident":"x","row":41,"col":46},"11":{"ann":"forall a . b a -> b a -> b a","ident":"raw_vmadd","row":41,"col":11},"24":{"ann":"a","ident":"x","row":41,"col":24}},"110":{"51":{"ann":"{v : GHC.Types.Bool | v == vand b1 b2\n                      && v == (if b1 then b2 else false)}","ident":"lq_anf$##7205759403792823384","row":110,"col":51},"57":{"ann":"{v : GHC.Types.Bool | v == b1}","ident":"b1","row":110,"col":57},"12":{"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","row":110,"col":12},"1":{"ann":"forall a .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> x3:GHC.Types.Bool -> {VV : a () | VV == mguard_and x1 x2 x3\n                                                                                         && VV == mguard x1 (vand x2 x3)}","ident":"IsMonadPlus.mguard_and","row":110,"col":1},"39":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":110,"col":39},"27":{"ann":"GHC.Types.Bool","ident":"b2","row":110,"col":27},"24":{"ann":"GHC.Types.Bool","ident":"b1","row":110,"col":24},"60":{"ann":"{v : GHC.Types.Bool | v == b2}","ident":"b2","row":110,"col":60}},"60":{"15":{"ann":"{VV : forall a .\n      {v : b a | v == vepsilon isMonadPlus} | VV == vepsilon isMonadPlus}","ident":"_","row":60,"col":15},"3":{"ann":"forall a . {v : b a | v == vepsilon isMonadPlus}","ident":"vepsilon_","row":60,"col":3},"24":{"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","row":60,"col":24}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"IsMonadPlus.$trModule","stop":{"line":1,"column":1}},{"start":{"line":41,"column":1},"ann":"forall a b c .\nx1:(forall a .\n    a a -> a a -> a a) -> x4:(b -> a c) -> x6:(b -> a c) -> x8:b -> {VV : a c | VV == raw_vmaddF x1 x4 x6 x8\n                                                                                && VV == x1 (x4 x8) (x6 x8)}","ident":"IsMonadPlus.raw_vmaddF","stop":{"line":41,"column":10}},{"start":{"line":41,"column":11},"ann":"forall a . b a -> b a -> b a","ident":"raw_vmadd","stop":{"line":41,"column":19}},{"start":{"line":41,"column":20},"ann":"a -> b c","ident":"f","stop":{"line":41,"column":21}},{"start":{"line":41,"column":22},"ann":"a -> b c","ident":"g","stop":{"line":41,"column":23}},{"start":{"line":41,"column":24},"ann":"a","ident":"x","stop":{"line":41,"column":25}},{"start":{"line":41,"column":37},"ann":"{v : a b | v == f x}","ident":"lq_anf$##7205759403792820684","stop":{"line":41,"column":42}},{"start":{"line":41,"column":40},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":41,"column":41}},{"start":{"line":41,"column":43},"ann":"{v : a b | v == g x}","ident":"lq_anf$##7205759403792820685","stop":{"line":41,"column":48}},{"start":{"line":41,"column":46},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":41,"column":47}},{"start":{"line":51,"column":1},"ann":"forall a b c .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(b -> a c) -> x4:(b -> a c) -> x6:b -> {VV : a c | VV == vmaddF x1 x2 x4 x6\n                                                                                        && VV == raw_vmaddF (vmadd x1) x2 x4 x6}","ident":"IsMonadPlus.vmaddF","stop":{"line":51,"column":6}},{"start":{"line":51,"column":7},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"iMP","stop":{"line":51,"column":10}},{"start":{"line":51,"column":13},"ann":"{VV : forall a b c .\n      x1:(forall a .\n          a a -> a a -> a a) -> x4:(b -> a c) -> x6:(b -> a c) -> x8:b -> {v : a c | v == raw_vmaddF x1 x4 x6 x8\n                                                                                     && v == x1 (x4 x8) (x6 x8)} | VV == raw_vmaddF}","ident":"IsMonadPlus.raw_vmaddF","stop":{"line":51,"column":28}},{"start":{"line":51,"column":23},"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd iMP\n                                     && VV == vmadd_}","ident":"vmadd_","stop":{"line":51,"column":28}},{"start":{"line":51,"column":35},"ann":"forall a . b a -> b a -> b a","ident":"vmadd_","stop":{"line":51,"column":40}},{"start":{"line":51,"column":43},"ann":"{VV : forall a . b a -> b a -> b a | VV == vmadd iMP}","ident":"_","stop":{"line":51,"column":51}},{"start":{"line":51,"column":48},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == iMP}","ident":"iMP","stop":{"line":51,"column":51}},{"start":{"line":57,"column":1},"ann":"forall a .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> {VV : a () | VV == mguard x1 x2\n                                                                    && VV == (if x2 then vlift (isMonad x1) () else vepsilon x1)}","ident":"IsMonadPlus.mguard","stop":{"line":57,"column":7}},{"start":{"line":57,"column":8},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":57,"column":19}},{"start":{"line":57,"column":20},"ann":"GHC.Types.Bool","ident":"b","stop":{"line":57,"column":21}},{"start":{"line":57,"column":24},"ann":"{v : GHC.Types.Bool | v == b}","ident":"lq_anf$##7205759403792823380","stop":{"line":57,"column":58}},{"start":{"line":57,"column":27},"ann":"{v : GHC.Types.Bool | v == b}","ident":"_","stop":{"line":57,"column":28}},{"start":{"line":57,"column":34},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_\n                            && VV == vlift_}","ident":"vlift_","stop":{"line":57,"column":43}},{"start":{"line":57,"column":41},"ann":"{v : () | v == ()}","ident":"GHC.Tuple.()","stop":{"line":57,"column":43}},{"start":{"line":57,"column":49},"ann":"{VV : forall a .\n      {v : b a | v == vepsilon isMonadPlus\n                 && v == vepsilon_} | VV == vepsilon isMonadPlus\n                                      && VV == vepsilon_}","ident":"_","stop":{"line":57,"column":58}},{"start":{"line":59,"column":3},"ann":"forall a . a -> b a","ident":"vlift_","stop":{"line":59,"column":9}},{"start":{"line":59,"column":15},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","stop":{"line":59,"column":29}},{"start":{"line":59,"column":21},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":59,"column":29}},{"start":{"line":60,"column":3},"ann":"forall a . {v : b a | v == vepsilon isMonadPlus}","ident":"vepsilon_","stop":{"line":60,"column":12}},{"start":{"line":60,"column":15},"ann":"{VV : forall a .\n      {v : b a | v == vepsilon isMonadPlus} | VV == vepsilon isMonadPlus}","ident":"_","stop":{"line":60,"column":35}},{"start":{"line":60,"column":24},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":60,"column":35}},{"start":{"line":61,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":61,"column":11}},{"start":{"line":61,"column":15},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":61,"column":34}},{"start":{"line":61,"column":23},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":61,"column":34}},{"start":{"line":67,"column":1},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:(b -> GHC.Types.Bool) -> x4:b -> {VV : a b | VV == mguardBy x1 x2 x4\n                                                                                  && VV == vseq (isMonad x1) (mguard x1 (x2 x4)) (vlift (isMonad x1) x4)}","ident":"IsMonadPlus.mguardBy","stop":{"line":67,"column":9}},{"start":{"line":67,"column":10},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":67,"column":21}},{"start":{"line":67,"column":22},"ann":"a -> GHC.Types.Bool","ident":"p","stop":{"line":67,"column":23}},{"start":{"line":67,"column":24},"ann":"a","ident":"x","stop":{"line":67,"column":25}},{"start":{"line":67,"column":28},"ann":"{VV : forall a b .\n      x1:c a -> x2:c b -> {v : c b | v == vseq isMonad_ x1 x2\n                                     && v == vbind isMonad_ x1 (vconst x2)} | VV == vseq isMonad_\n                                                                              && VV == vseq_}","ident":"vseq_","stop":{"line":67,"column":60}},{"start":{"line":67,"column":34},"ann":"a ()","ident":"lq_anf$##7205759403792823382","stop":{"line":67,"column":49}},{"start":{"line":67,"column":43},"ann":"{v : GHC.Types.Bool | v == p x}","ident":"lq_anf$##7205759403792823381","stop":{"line":67,"column":48}},{"start":{"line":67,"column":46},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":67,"column":47}},{"start":{"line":67,"column":50},"ann":"{v : a b | v == vlift_ x}","ident":"lq_anf$##7205759403792823383","stop":{"line":67,"column":60}},{"start":{"line":67,"column":58},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":67,"column":59}},{"start":{"line":69,"column":3},"ann":"forall a b .\nx1:c a -> x2:c b -> {v : c b | v == vseq isMonad_ x1 x2\n                               && v == vbind isMonad_ x1 (vconst x2)}","ident":"vseq_","stop":{"line":69,"column":8}},{"start":{"line":69,"column":14},"ann":"x1:a b -> x2:a c -> {v : a c | v == vseq isMonad_ x1 x2\n                               && v == vbind isMonad_ x1 (vconst x2)}","ident":"_","stop":{"line":69,"column":27}},{"start":{"line":69,"column":19},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":69,"column":27}},{"start":{"line":70,"column":3},"ann":"x1:GHC.Types.Bool -> {v : a () | v == mguard isMonadPlus x1\n                                 && v == (if x1 then vlift (isMonad isMonadPlus) () else vepsilon isMonadPlus)}","ident":"mguard_","stop":{"line":70,"column":10}},{"start":{"line":70,"column":14},"ann":"x1:GHC.Types.Bool -> {v : a () | v == mguard isMonadPlus x1\n                                 && v == (if x1 then vlift (isMonad isMonadPlus) () else vepsilon isMonadPlus)}","ident":"_","stop":{"line":70,"column":32}},{"start":{"line":70,"column":21},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":70,"column":32}},{"start":{"line":71,"column":3},"ann":"forall a . a -> b a","ident":"vlift_","stop":{"line":71,"column":9}},{"start":{"line":71,"column":14},"ann":"{VV : forall a . a -> b a | VV == vlift isMonad_}","ident":"_","stop":{"line":71,"column":28}},{"start":{"line":71,"column":20},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus\n                           && v == isMonad_}","ident":"isMonad_","stop":{"line":71,"column":28}},{"start":{"line":72,"column":3},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"isMonad_","stop":{"line":72,"column":11}},{"start":{"line":72,"column":14},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"_","stop":{"line":72,"column":33}},{"start":{"line":72,"column":22},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":72,"column":33}},{"start":{"line":91,"column":1},"ann":"forall a b c .\nx1:(IsMonadPlus.IsMonadPlus c) -> x2:c c -> x3:c c -> x4:(c -> c c) -> {VV : () | vmadd x1 x2 x3 == x3 => vmadd x1 (vbind (isMonad x1) x2 x4) (vbind (isMonad x1) x3 x4) == vbind (isMonad x1) x3 x4}","ident":"IsMonadPlus.vbind_monotonic_refinement","stop":{"line":91,"column":27}},{"start":{"line":105,"column":1},"ann":"forall a b c .\nx1:(IsMonadPlus.IsMonadPlus c) -> x2:GHC.Types.Bool -> x3:c c -> x4:(c -> c) -> {VV : () | vliftF2 (isMonad x1) (vconstF x4) (mguard x1 x2) x3 == vliftF2 (isMonad x1) (vflip (vconstF x4)) x3 (mguard x1 x2)}","ident":"IsMonadPlus.isMCommutative_mguard","stop":{"line":105,"column":22}},{"start":{"line":110,"column":1},"ann":"forall a .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> x3:GHC.Types.Bool -> {VV : a () | VV == mguard_and x1 x2 x3\n                                                                                         && VV == mguard x1 (vand x2 x3)}","ident":"IsMonadPlus.mguard_and","stop":{"line":110,"column":11}},{"start":{"line":110,"column":12},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":110,"column":23}},{"start":{"line":110,"column":24},"ann":"GHC.Types.Bool","ident":"b1","stop":{"line":110,"column":26}},{"start":{"line":110,"column":27},"ann":"GHC.Types.Bool","ident":"b2","stop":{"line":110,"column":29}},{"start":{"line":110,"column":39},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":110,"column":50}},{"start":{"line":110,"column":51},"ann":"{v : GHC.Types.Bool | v == vand b1 b2\n                      && v == (if b1 then b2 else false)}","ident":"lq_anf$##7205759403792823384","stop":{"line":110,"column":63}},{"start":{"line":110,"column":57},"ann":"{v : GHC.Types.Bool | v == b1}","ident":"b1","stop":{"line":110,"column":59}},{"start":{"line":110,"column":60},"ann":"{v : GHC.Types.Bool | v == b2}","ident":"b2","stop":{"line":110,"column":62}},{"start":{"line":121,"column":1},"ann":"forall a .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> x3:GHC.Types.Bool -> {VV : () | mguard_and x1 x2 x3 == vseq (isMonad x1) (mguard x1 x2) (mguard x1 x3)}","ident":"IsMonadPlus.mguard_and_vseq","stop":{"line":121,"column":16}},{"start":{"line":128,"column":1},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus a) -> x2:GHC.Types.Bool -> x3:a b -> x4:a b -> {VV : a b | VV == mguard_disjoint x1 x2 x3 x4\n                                                                                       && VV == vmadd x1 (vseq (isMonad x1) (mguard x1 x2) x3) (vseq (isMonad x1) (mguard x1 (vnot x2)) x3)}","ident":"IsMonadPlus.mguard_disjoint","stop":{"line":128,"column":16}},{"start":{"line":128,"column":17},"ann":"(IsMonadPlus.IsMonadPlus a)","ident":"isMonadPlus","stop":{"line":128,"column":28}},{"start":{"line":128,"column":29},"ann":"GHC.Types.Bool","ident":"b","stop":{"line":128,"column":30}},{"start":{"line":128,"column":31},"ann":"a b","ident":"m1","stop":{"line":128,"column":33}},{"start":{"line":128,"column":34},"ann":"a b","ident":"m2","stop":{"line":128,"column":36}},{"start":{"line":129,"column":3},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":129,"column":14}},{"start":{"line":130,"column":3},"ann":"a b","ident":"lq_anf$##7205759403792823387","stop":{"line":130,"column":57}},{"start":{"line":130,"column":9},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"lq_anf$##7205759403792823385","stop":{"line":130,"column":30}},{"start":{"line":130,"column":18},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":130,"column":29}},{"start":{"line":130,"column":31},"ann":"{v : a () | v == mguard isMonadPlus b\n            && v == (if b then vlift (isMonad isMonadPlus) () else vepsilon isMonadPlus)}","ident":"lq_anf$##7205759403792823386","stop":{"line":130,"column":53}},{"start":{"line":130,"column":39},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":130,"column":50}},{"start":{"line":130,"column":51},"ann":"{v : GHC.Types.Bool | v == b}","ident":"b","stop":{"line":130,"column":52}},{"start":{"line":130,"column":54},"ann":"{v : a b | v == m1}","ident":"m1","stop":{"line":130,"column":56}},{"start":{"line":131,"column":3},"ann":"a b","ident":"lq_anf$##7205759403792823391","stop":{"line":131,"column":64}},{"start":{"line":131,"column":9},"ann":"{v : (IsMonad.IsMonad a) | v == isMonad isMonadPlus}","ident":"lq_anf$##7205759403792823388","stop":{"line":131,"column":30}},{"start":{"line":131,"column":18},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":131,"column":29}},{"start":{"line":131,"column":31},"ann":"a ()","ident":"lq_anf$##7205759403792823390","stop":{"line":131,"column":60}},{"start":{"line":131,"column":39},"ann":"{v : (IsMonadPlus.IsMonadPlus a) | v == isMonadPlus}","ident":"isMonadPlus","stop":{"line":131,"column":50}},{"start":{"line":131,"column":51},"ann":"{v : GHC.Types.Bool | v == vnot b\n                      && v == (if b then false else true)}","ident":"lq_anf$##7205759403792823389","stop":{"line":131,"column":59}},{"start":{"line":131,"column":57},"ann":"{v : GHC.Types.Bool | v == b}","ident":"b","stop":{"line":131,"column":58}},{"start":{"line":131,"column":61},"ann":"{v : a b | v == m1}","ident":"m1","stop":{"line":131,"column":63}},{"start":{"line":144,"column":1},"ann":"forall a b .\nx1:(IsMonadPlus.IsMonadPlus b) -> x2:GHC.Types.Bool -> x3:b b -> x4:b b -> {VV : () | vmadd x1 (mguard_disjoint x1 x2 x3 x4) (vbranch x2 x3 x4) == vbranch x2 x3 x4}","ident":"IsMonadPlus.mguard_disjoint_branch","stop":{"line":144,"column":23}}],"errors":[]}