1:1-1:1::VList.$trModule :: "GHC.Types.Module"
30:1-30:8::VList.vlength :: "forall a .\nx1:(VList.VList a) -> {VV : VNat.VNat | VV == vlength x1}"
30:23-30:27::VNat.Zero :: "{v : VNat.VNat | v == Zero}"
31:23-31:39::VNat.Suc :: "x1:VNat.VNat -> {v : VNat.VNat | lqdc##$select v == x1\n                                 && v == Suc x1}"
31:27-31:39::lq_anf$##7205759403792838951 :: "{v : VNat.VNat | v == vlength xs}"
31:36-31:38::xs :: "{v : (VList.VList a) | v == xs}"
37:1-37:11::VList.vsingleton :: "forall a .\nx1:a -> {VV : (VList.VList a) | VV == vsingleton x1\n                                && VV == Cons x1 Nil}"
37:12-37:13::x :: "a"
37:21-37:22::x :: "{VV : a | VV == x}"
37:23-37:26::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
43:1-43:8::VList.vappend :: "forall a .\nx1:(VList.VList a) -> x2:(VList.VList a) -> {VV : (VList.VList a) | VV == vappend x1 x2}"
43:21-43:23::ys :: "(VList.VList a)"
43:26-43:28::ys :: "{v : (VList.VList a) | v == ys}"
44:26-44:48::VList.Cons :: "{VV : forall a .\n      x1:a -> x2:(VList.VList a) -> {v : (VList.VList a) | tl v == x2\n                                                           && hd v == x1\n                                                           && vlength v == Suc (vlength x2)\n                                                           && v == Cons x1 x2} | VV == Cons}"
44:31-44:32::x :: "{VV : a | VV == x}"
44:33-44:48::lq_anf$##7205759403792838954 :: "{v : (VList.VList a) | v == vappend xs ys}"
44:42-44:44::xs :: "{v : (VList.VList a) | v == xs}"
44:45-44:47::ys :: "{v : (VList.VList a) | v == ys}"
54:1-54:20::VList.vappend_associative :: "forall a .\nx1:(VList.VList a) -> x2:(VList.VList a) -> x3:(VList.VList a) -> {VV : () | vappend x1 (vappend x2 x3) == vappend (vappend x1 x2) x3}"
54:21-54:23::xs :: "(VList.VList a)"
54:24-54:26::ys :: "(VList.VList a)"
54:27-54:29::zs :: "(VList.VList a)"
62:1-62:20::VList.isSemigroup_vappend :: "forall a . (IsSemigroup.IsSemigroup (VList.VList a))"
63:22-63:29::VList.vappend :: "forall a .\nx1:(VList.VList a) -> x2:(VList.VList a) -> {VV : (VList.VList a) | VV == vappend x1 x2}"
63:48-63:67::_ :: "{VV : forall a .\n      x1:(VList.VList a) -> x2:(VList.VList a) -> x3:(VList.VList a) -> {v : () | vappend x1 (vappend x2 x3) == vappend (vappend x1 x2) x3} | VV == vappend_associative}"
72:1-72:17::VList.vappend_identity :: "forall a .\nx1:(VList.VList a) -> {VV : () | vappend Nil x1 == x1\n                                 && vappend x1 Nil == x1}"
72:18-72:20::xs :: "(VList.VList a)"
94:1-94:21::VList.vappend_sums_vlength :: "forall a .\nx1:(VList.VList a) -> x2:(VList.VList a) -> {VV : () | vlength (vappend x1 x2) == vadd (vlength x1) (vlength x2)}"
94:26-94:28::ys :: "(VList.VList a)"
95:3-95:27::lq_anf$##7205759403792838962 :: "VNat.VNat"
95:11-95:27::lq_anf$##7205759403792838961 :: "(VList.VList a)"
95:20-95:23::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
95:24-95:26::ys :: "{v : (VList.VList a) | v == ys}"
96:9-96:19::lq_anf$##7205759403792838963 :: "{v : VNat.VNat | v == vlength ys}"
96:17-96:19::ys :: "{v : (VList.VList a) | v == ys}"
97:9-97:31::lq_anf$##7205759403792838966 :: "VNat.VNat"
97:14-97:18::VNat.Zero :: "{v : VNat.VNat | v == Zero}"
97:19-97:31::lq_anf$##7205759403792838965 :: "{v : VNat.VNat | v == vlength ys}"
97:28-97:30::ys :: "{v : (VList.VList a) | v == ys}"
98:9-98:35::lq_anf$##7205759403792838969 :: "()"
98:23-98:35::lq_anf$##7205759403792838968 :: "{v : VNat.VNat | v == vlength ys}"
98:32-98:34::ys :: "{v : (VList.VList a) | v == ys}"
99:9-99:40::lq_anf$##7205759403792838974 :: "VNat.VNat"
99:14-99:27::lq_anf$##7205759403792838972 :: "VNat.VNat"
99:23-99:26::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
99:28-99:40::lq_anf$##7205759403792838973 :: "{v : VNat.VNat | v == vlength ys}"
99:37-99:39::ys :: "{v : (VList.VList a) | v == ys}"
100:9-100:12::Liquid.ProofCombinators.QED :: "{v : Liquid.ProofCombinators.QED | (isAdmit v <=> false)\n                                   && v == QED}"
102:3-102:35::lq_anf$##7205759403792838978 :: "VNat.VNat"
102:11-102:35::lq_anf$##7205759403792838977 :: "(VList.VList a)"
102:20-102:31::lq_anf$##7205759403792838976 :: "{v : (VList.VList a) | tl v == xs\n                       && hd v == x\n                       && vlength v == Suc (vlength xs)\n                       && v == Cons x xs}"
102:26-102:27::x :: "{VV : a | VV == x}"
102:28-102:30::xs :: "{v : (VList.VList a) | v == xs}"
102:32-102:34::ys :: "{v : (VList.VList a) | v == ys}"
103:9-103:41::lq_anf$##7205759403792838981 :: "VNat.VNat"
103:17-103:41::lq_anf$##7205759403792838980 :: "{v : (VList.VList a) | hd v == x}"
103:23-103:24::x :: "{VV : a | VV == x}"
103:25-103:40::lq_anf$##7205759403792838979 :: "{v : (VList.VList a) | v == vappend xs ys}"
103:34-103:36::xs :: "{v : (VList.VList a) | v == xs}"
103:37-103:39::ys :: "{v : (VList.VList a) | v == ys}"
104:9-104:38::lq_anf$##7205759403792838985 :: "VNat.VNat"
104:13-104:38::lq_anf$##7205759403792838984 :: "VNat.VNat"
104:22-104:37::lq_anf$##7205759403792838983 :: "{v : (VList.VList a) | v == vappend xs ys}"
104:31-104:33::xs :: "{v : (VList.VList a) | v == xs}"
104:34-104:36::ys :: "{v : (VList.VList a) | v == ys}"
105:9-105:45::lq_anf$##7205759403792838990 :: "VNat.VNat"
105:13-105:45::lq_anf$##7205759403792838989 :: "VNat.VNat"
105:19-105:31::lq_anf$##7205759403792838987 :: "{v : VNat.VNat | v == vlength xs}"
105:28-105:30::xs :: "{v : (VList.VList a) | v == xs}"
105:32-105:44::lq_anf$##7205759403792838988 :: "{v : VNat.VNat | v == vlength ys}"
105:41-105:43::ys :: "{v : (VList.VList a) | v == ys}"
106:9-106:35::lq_anf$##7205759403792838992 :: "{v : () | vlength (vappend xs ys) == vadd (vlength xs) (vlength ys)\n          && v == vappend_sums_vlength xs ys}"
106:30-106:32::xs :: "{v : (VList.VList a) | v == xs}"
106:33-106:35::ys :: "{v : (VList.VList a) | v == ys}"
107:9-107:48::lq_anf$##7205759403792838997 :: "VNat.VNat"
107:14-107:32::lq_anf$##7205759403792838995 :: "VNat.VNat"
107:19-107:31::lq_anf$##7205759403792838994 :: "{v : VNat.VNat | v == vlength xs}"
107:28-107:30::xs :: "{v : (VList.VList a) | v == xs}"
107:36-107:48::lq_anf$##7205759403792838996 :: "{v : VNat.VNat | v == vlength ys}"
107:45-107:47::ys :: "{v : (VList.VList a) | v == ys}"
108:9-108:48::lq_anf$##7205759403792839002 :: "VNat.VNat"
108:14-108:35::lq_anf$##7205759403792839000 :: "VNat.VNat"
108:23-108:34::lq_anf$##7205759403792838999 :: "{v : (VList.VList a) | tl v == xs\n                       && hd v == x\n                       && vlength v == Suc (vlength xs)\n                       && v == Cons x xs}"
108:29-108:30::x :: "{VV : a | VV == x}"
108:31-108:33::xs :: "{v : (VList.VList a) | v == xs}"
108:36-108:48::lq_anf$##7205759403792839001 :: "{v : VNat.VNat | v == vlength ys}"
108:45-108:47::ys :: "{v : (VList.VList a) | v == ys}"
109:9-109:12::Liquid.ProofCombinators.QED :: "{v : Liquid.ProofCombinators.QED | (isAdmit v <=> false)\n                                   && v == QED}"
115:1-115:5::VList.vall :: "forall a .\nx1:(a -> GHC.Types.Bool) -> x3:(VList.VList a) -> {VV : GHC.Types.Bool | VV == vall x1 x3}"
115:6-115:7::p :: "a -> GHC.Types.Bool"
115:22-115:26::GHC.Types.True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
116:22-116:25::lq_anf$##7205759403792829032 :: "{v : GHC.Types.Bool | v == p x}"
116:24-116:25::x :: "{VV : a | VV == x}"
116:29-116:38::lq_anf$##7205759403792829033 :: "{v : GHC.Types.Bool | v == vall p xs}"
116:34-116:35::p :: "a -> GHC.Types.Bool"
116:36-116:38::xs :: "{v : (VList.VList a) | v == xs}"
122:1-122:9::VList.vreverse :: "forall a .\nx1:(VList.VList a) -> {VV : (VList.VList a) | VV == vreverse x1}"
122:24-122:27::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
123:24-123:58::VList.vappend :: "forall a .\nx1:(VList.VList a) -> x2:(VList.VList a) -> {VV : (VList.VList a) | VV == vappend x1 x2}"
123:32-123:45::lq_anf$##7205759403792838956 :: "{v : (VList.VList a) | v == vreverse xs}"
123:42-123:44::xs :: "{v : (VList.VList a) | v == xs}"
123:46-123:58::lq_anf$##7205759403792838958 :: "{v : (VList.VList a) | hd v == x}"
123:52-123:53::x :: "{VV : a | VV == x}"
123:54-123:57::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
132:1-132:27::VList.vreverse_preserves_vlength :: "forall a .\nx1:(VList.VList a) -> {VV : () | vlength x1 == vlength (vreverse x1)}"
132:34-132:36::GHC.Tuple.() :: "{v : () | v == ()}"
134:3-134:33::lq_anf$##7205759403792839007 :: "VNat.VNat"
134:11-134:33::lq_anf$##7205759403792839006 :: "(VList.VList a)"
134:21-134:32::lq_anf$##7205759403792839005 :: "{v : (VList.VList a) | tl v == xs\n                       && hd v == x\n                       && vlength v == Suc (vlength xs)\n                       && v == Cons x xs}"
134:27-134:28::x :: "{VV : a | VV == x}"
134:29-134:31::xs :: "{v : (VList.VList a) | v == xs}"
135:9-135:53::lq_anf$##7205759403792839012 :: "VNat.VNat"
135:17-135:53::lq_anf$##7205759403792839011 :: "(VList.VList a)"
135:26-135:39::lq_anf$##7205759403792839008 :: "{v : (VList.VList a) | v == vreverse xs}"
135:36-135:38::xs :: "{v : (VList.VList a) | v == xs}"
135:40-135:52::lq_anf$##7205759403792839010 :: "{v : (VList.VList a) | hd v == x}"
135:46-135:47::x :: "{VV : a | VV == x}"
135:48-135:51::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
136:9-136:60::lq_anf$##7205759403792839019 :: "VNat.VNat"
136:14-136:37::lq_anf$##7205759403792839015 :: "VNat.VNat"
136:23-136:36::lq_anf$##7205759403792839014 :: "{v : (VList.VList a) | v == vreverse xs}"
136:33-136:35::xs :: "{v : (VList.VList a) | v == xs}"
136:38-136:60::lq_anf$##7205759403792839018 :: "VNat.VNat"
136:47-136:59::lq_anf$##7205759403792839017 :: "{v : (VList.VList a) | hd v == x}"
136:53-136:54::x :: "{VV : a | VV == x}"
136:55-136:58::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
137:9-137:56::lq_anf$##7205759403792839024 :: "()"
137:30-137:43::lq_anf$##7205759403792839021 :: "{v : (VList.VList a) | v == vreverse xs}"
137:40-137:42::xs :: "{v : (VList.VList a) | v == xs}"
137:44-137:56::lq_anf$##7205759403792839023 :: "{v : (VList.VList a) | hd v == x}"
137:50-137:51::x :: "{VV : a | VV == x}"
137:52-137:55::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
138:9-138:60::lq_anf$##7205759403792839031 :: "VNat.VNat"
138:14-138:37::lq_anf$##7205759403792839027 :: "VNat.VNat"
138:23-138:36::lq_anf$##7205759403792839026 :: "{v : (VList.VList a) | v == vreverse xs}"
138:33-138:35::xs :: "{v : (VList.VList a) | v == xs}"
138:38-138:60::lq_anf$##7205759403792839030 :: "VNat.VNat"
138:47-138:59::lq_anf$##7205759403792839029 :: "{v : (VList.VList a) | hd v == x}"
138:53-138:54::x :: "{VV : a | VV == x}"
138:55-138:58::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
139:9-139:60::lq_anf$##7205759403792839037 :: "VNat.VNat"
139:14-139:26::lq_anf$##7205759403792839033 :: "{v : VNat.VNat | v == vlength xs}"
139:23-139:25::xs :: "{v : (VList.VList a) | v == xs}"
139:38-139:60::lq_anf$##7205759403792839036 :: "VNat.VNat"
139:47-139:59::lq_anf$##7205759403792839035 :: "{v : (VList.VList a) | hd v == x}"
139:53-139:54::x :: "{VV : a | VV == x}"
139:55-139:58::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == Nil} | VV == Nil}"
140:9-140:38::lq_anf$##7205759403792839039 :: "{v : () | vlength xs == vlength (vreverse xs)\n          && v == vreverse_preserves_vlength xs}"
140:36-140:38::xs :: "{v : (VList.VList a) | v == xs}"
141:9-141:37::lq_anf$##7205759403792839043 :: "VNat.VNat"
141:14-141:26::lq_anf$##7205759403792839041 :: "{v : VNat.VNat | v == vlength xs}"
141:23-141:25::xs :: "{v : (VList.VList a) | v == xs}"
141:27-141:37::lq_anf$##7205759403792839042 :: "{v : VNat.VNat | lqdc##$select v == Zero\n                 && v == Suc Zero}"
141:32-141:36::VNat.Zero :: "{v : VNat.VNat | v == Zero}"
142:9-142:37::lq_anf$##7205759403792839047 :: "VNat.VNat"
142:13-142:37::lq_anf$##7205759403792839046 :: "VNat.VNat"
142:19-142:31::lq_anf$##7205759403792839045 :: "{v : VNat.VNat | v == vlength xs}"
142:28-142:30::xs :: "{v : (VList.VList a) | v == xs}"
142:32-142:36::VNat.Zero :: "{v : VNat.VNat | v == Zero}"
143:9-143:36::lq_anf$##7205759403792839050 :: "()"
143:19-143:31::lq_anf$##7205759403792839049 :: "{v : VNat.VNat | v == vlength xs}"
143:28-143:30::xs :: "{v : (VList.VList a) | v == xs}"
143:32-143:36::VNat.Zero :: "{v : VNat.VNat | v == Zero}"
144:9-144:25::lq_anf$##7205759403792839053 :: "VNat.VNat"
144:13-144:25::lq_anf$##7205759403792839052 :: "{v : VNat.VNat | v == vlength xs}"
144:22-144:24::xs :: "{v : (VList.VList a) | v == xs}"
145:9-145:35::lq_anf$##7205759403792839056 :: "()"
145:23-145:35::lq_anf$##7205759403792839055 :: "{v : VNat.VNat | v == vlength xs}"
145:32-145:34::xs :: "{v : (VList.VList a) | v == xs}"
146:9-146:28::lq_anf$##7205759403792839059 :: "VNat.VNat"
146:17-146:28::lq_anf$##7205759403792839058 :: "{v : (VList.VList a) | tl v == xs\n                       && hd v == x\n                       && vlength v == Suc (vlength xs)\n                       && v == Cons x xs}"
146:23-146:24::x :: "{VV : a | VV == x}"
146:25-146:27::xs :: "{v : (VList.VList a) | v == xs}"
147:9-147:12::Liquid.ProofCombinators.QED :: "{v : Liquid.ProofCombinators.QED | (isAdmit v <=> false)\n                                   && v == QED}"