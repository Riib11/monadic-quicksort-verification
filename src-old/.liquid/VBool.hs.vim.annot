1:1-1:1::$trModule :: "GHC.Types.Module"
8:1-8:5::vand :: "x1:GHC.Types.Bool -> x2:GHC.Types.Bool -> {VV : GHC.Types.Bool | VV == vand x1 x2\n                                                                 && VV == (if x1 then x2 else false)}"
8:6-8:8::b1 :: "GHC.Types.Bool"
8:9-8:11::b2 :: "GHC.Types.Bool"
8:17-8:19::_ :: "{v : GHC.Types.Bool | v == b1}"
8:25-8:27::b2 :: "{v : GHC.Types.Bool | v == b2}"
8:33-8:38::False :: "{v : GHC.Types.Bool | not v\n                      && v == False}"
12:1-12:5::vnot :: "x1:GHC.Types.Bool -> {VV : GHC.Types.Bool | VV == vnot x1\n                                            && VV == (if x1 then false else true)}"
12:6-12:7::b :: "GHC.Types.Bool"
12:13-12:14::_ :: "{v : GHC.Types.Bool | v == b}"
12:20-12:25::False :: "{v : GHC.Types.Bool | not v\n                      && v == False}"
12:31-12:35::True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
16:1-16:8::vbranch :: "forall a .\nx1:GHC.Types.Bool -> x2:a -> x3:a -> {VV : a | VV == vbranch x1 x2 x3\n                                               && VV == (if x1 then x2 else x3)}"
16:9-16:10::b :: "GHC.Types.Bool"
16:11-16:12::x :: "a"
16:13-16:14::y :: "a"
16:20-16:21::_ :: "{v : GHC.Types.Bool | v == b}"
16:27-16:28::x :: "{VV : a | VV == x}"
16:34-16:35::y :: "{VV : a | VV == y}"