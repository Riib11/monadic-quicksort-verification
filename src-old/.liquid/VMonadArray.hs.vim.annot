1:1-1:1::$trModule :: "GHC.Types.Module"
52:1-52:10::vreadList :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:VNat.VNat -> {VV : a (VList.VList b) | VV == vreadList x1 x2 x3}"
52:11-52:22::iMonadArray :: "(VMonadArray.VMonadArray a b)"
52:32-52:42::lq_anf$##7205759403792820342 :: "{v : (VList.VList a) | vlength v == Zero\n                       && v == VNil}"
52:38-52:42::_ :: "{VV : forall a .\n      {v : (VList.VList a) | vlength v == Zero\n                             && v == VNil} | VV == VNil}"
54:5-54:10::lift_ :: "(VList.VList a) -> b (VList.VList a)"
54:13-54:25::_ :: "{VV : forall a . a -> b a | VV == lift iMonad_}"
54:18-54:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
55:5-55:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
55:15-55:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
55:22-55:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
58:5-58:10::_ :: "{VV : forall a .\n      x1:a -> x2:(VList.VList a) -> {v : (VList.VList a) | VCons##lqdc##$select v == x2\n                                                           && VCons##lqdc##$select v == x1\n                                                           && vlength v == Suc (vlength x2)\n                                                           && v == VCons x1 x2} | VV == VCons}"
59:5-59:15::lq_anf$##7205759403792820344 :: "a b"
59:13-59:14::ds_d6Vc :: "VNat.VNat"
60:5-60:27::lq_anf$##7205759403792820346 :: "a (VList.VList b)"
60:17-60:24::lq_anf$##7205759403792820345 :: "VNat.VNat"
60:22-60:23::ds_d6Vc :: "VNat.VNat"
60:25-60:26::n :: "{v : VNat.VNat | v == n}"
62:5-62:11::vread_ :: "VNat.VNat -> a b"
62:14-62:31::_ :: "VNat.VNat -> a b"
62:20-62:31::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
63:5-63:15::vreadList_ :: "x1:VNat.VNat -> x2:VNat.VNat -> {VV : a (VList.VList b) | VV == vreadList iMonadArray x1 x2}"
63:18-63:39::vreadList :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:VNat.VNat -> {VV : a (VList.VList b) | VV == vreadList x1 x2 x3}"
63:28-63:39::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
64:5-64:12::vmapM2_ :: "x1:(a -> (VList.VList a) -> (VList.VList a)) -> x4:b a -> x5:b (VList.VList a) -> {v : b (VList.VList a) | v == vmapM2 iMonad_ x1 x4 x5\n                                                                                                           && v == bind iMonad_ x4 (vmapM2_aux1 iMonad_ x1 x5)}"
64:15-64:29::_ :: "x1:(a -> (VList.VList a) -> (VList.VList a)) -> x4:b a -> x5:b (VList.VList a) -> {v : b (VList.VList a) | v == vmapM2 iMonad_ x1 x4 x5\n                                                                                                           && v == bind iMonad_ x4 (vmapM2_aux1 iMonad_ x1 x5)}"
64:22-64:29::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
65:5-65:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
65:15-65:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
65:22-65:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
69:1-69:11::vwriteList :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:(VList.VList b) -> {VV : a () | VV == vwriteList x1 x2 x3}"
69:12-69:23::iMonadArray :: "(VMonadArray.VMonadArray a b)"
69:33-69:41::lift_ :: "() -> a ()"
69:39-69:41::() :: "{v : () | v == ()}"
71:5-71:10::lift_ :: "() -> a ()"
71:13-71:25::_ :: "{VV : forall a . a -> b a | VV == lift iMonad_}"
71:18-71:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
72:5-72:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
72:15-72:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
72:22-72:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
75:5-75:18::lq_anf$##7205759403792820348 :: "a ()"
75:14-75:15::ds_d6UM :: "VNat.VNat"
75:16-75:17::x :: "{VV : a | VV == x}"
76:5-76:29::lq_anf$##7205759403792820350 :: "a ()"
76:18-76:25::lq_anf$##7205759403792820349 :: "VNat.VNat"
76:23-76:24::ds_d6UM :: "VNat.VNat"
76:26-76:28::xs :: "{v : (VList.VList a) | v == xs}"
78:5-78:10::vseq_ :: "x1:a () -> x2:a () -> {v : a () | v == vseq iMonad_ x1 x2\n                                  && v == bind iMonad_ x1 (vconst x2)}"
78:13-78:25::_ :: "x1:a () -> x2:a () -> {v : a () | v == vseq iMonad_ x1 x2\n                                  && v == bind iMonad_ x1 (vconst x2)}"
78:18-78:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
79:5-79:12::vwrite_ :: "VNat.VNat -> a -> b ()"
79:15-79:33::_ :: "VNat.VNat -> a -> b ()"
79:22-79:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
80:5-80:16::vwriteList_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {VV : b () | VV == vwriteList iMonadArray x1 x2}"
80:19-80:41::vwriteList :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:(VList.VList b) -> {VV : a () | VV == vwriteList x1 x2 x3}"
80:30-80:41::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
81:5-81:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
81:15-81:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
81:22-81:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
85:1-85:19::vwriteListToLength :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:(VList.VList b) -> {VV : a VNat.VNat | VV == vwriteListToLength x1 x2 x3\n                                                                                              && VV == vseq (iMonad x1) (vwriteList x1 x2 x3) (lift (iMonad x1) (vlength x3))}"
85:20-85:31::iMonadArray :: "(VMonadArray.VMonadArray a b)"
85:32-85:33::i :: "VNat.VNat"
85:34-85:36::xs :: "(VList.VList a)"
87:5-87:23::lq_anf$##7205759403792820351 :: "{v : a () | v == vwriteList iMonadArray i xs\n            && v == vwriteList_ i xs}"
87:18-87:19::i :: "{v : VNat.VNat | v == i}"
87:20-87:22::xs :: "{v : (VList.VList a) | v == xs}"
88:5-88:25::lq_anf$##7205759403792820353 :: "a VNat.VNat"
88:12-88:24::lq_anf$##7205759403792820352 :: "{v : VNat.VNat | v == vlength xs}"
88:21-88:23::xs :: "{v : (VList.VList a) | v == xs}"
90:5-90:16::vwriteList_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {v : b () | v == vwriteList iMonadArray x1 x2}"
90:19-90:41::_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {v : b () | v == vwriteList iMonadArray x1 x2}"
90:30-90:41::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
91:5-91:10::vseq_ :: "x1:a () -> x2:a VNat.VNat -> {v : a VNat.VNat | v == vseq iMonad_ x1 x2\n                                                && v == bind iMonad_ x1 (vconst x2)}"
91:13-91:25::_ :: "x1:a () -> x2:a VNat.VNat -> {v : a VNat.VNat | v == vseq iMonad_ x1 x2\n                                                && v == bind iMonad_ x1 (vconst x2)}"
91:18-91:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
92:5-92:10::lift_ :: "VNat.VNat -> a VNat.VNat"
92:13-92:25::_ :: "{VV : forall a . a -> b a | VV == lift iMonad_}"
92:18-92:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
93:5-93:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
93:15-93:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
93:22-93:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
101:1-101:22::vwriteListsToLengths2 :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:((VList.VList b), (VList.VList b)) -> {VV : a (VNat.VNat, VNat.VNat) | VV == vwriteListsToLengths2 x1 x2 x3\n                                                                                                                              && VV == vseq (iMonad x1) (vwriteList x1 x2 (vappend (lqdc##$select x3) (lqdc##$select x3))) (lift (iMonad x1) ((,) (vlength (lqdc##$select x3)) (vlength (lqdc##$select x3))))}"
101:23-101:34::iMonadArray :: "(VMonadArray.VMonadArray a b)"
101:35-101:36::i :: "VNat.VNat"
103:5-103:36::lq_anf$##7205759403792820356 :: "a ()"
103:18-103:19::i :: "{v : VNat.VNat | v == i}"
103:20-103:35::lq_anf$##7205759403792820355 :: "{v : (VList.VList a) | v == vappend xs ys}"
103:29-103:31::xs :: "{v : (VList.VList a) | v == xs}"
103:32-103:34::ys :: "{v : (VList.VList a) | v == ys}"
104:5-104:37::lq_anf$##7205759403792820360 :: "a (VNat.VNat, VNat.VNat)"
104:12-104:36::lq_anf$##7205759403792820359 :: "(VNat.VNat, VNat.VNat)"
104:13-104:23::lq_anf$##7205759403792820357 :: "{v : VNat.VNat | v == vlength xs}"
104:21-104:23::xs :: "{v : (VList.VList a) | v == xs}"
104:25-104:35::lq_anf$##7205759403792820358 :: "{v : VNat.VNat | v == vlength ys}"
104:33-104:35::ys :: "{v : (VList.VList a) | v == ys}"
106:5-106:10::vseq_ :: "x1:a () -> x2:a (VNat.VNat, VNat.VNat) -> {v : a (VNat.VNat, VNat.VNat) | v == vseq iMonad_ x1 x2\n                                                                          && v == bind iMonad_ x1 (vconst x2)}"
106:13-106:25::_ :: "x1:a () -> x2:a (VNat.VNat, VNat.VNat) -> {v : a (VNat.VNat, VNat.VNat) | v == vseq iMonad_ x1 x2\n                                                                          && v == bind iMonad_ x1 (vconst x2)}"
106:18-106:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
107:5-107:10::lift_ :: "(VNat.VNat, VNat.VNat) -> a (VNat.VNat, VNat.VNat)"
107:13-107:25::_ :: "{VV : forall a . a -> b a | VV == lift iMonad_}"
107:18-107:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
108:5-108:16::vwriteList_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {v : b () | v == vwriteList iMonadArray x1 x2}"
108:19-108:41::_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {v : b () | v == vwriteList iMonadArray x1 x2}"
108:30-108:41::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
109:5-109:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
109:15-109:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
109:22-109:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
117:1-117:22::vwriteListsToLengths3 :: "forall a b .\nx1:(VMonadArray.VMonadArray a b) -> x2:VNat.VNat -> x3:((VList.VList b), (VList.VList b), (VList.VList b)) -> {VV : a (VNat.VNat, VNat.VNat, VNat.VNat) | VV == vwriteListsToLengths3 x1 x2 x3\n                                                                                                                                                          && VV == vseq (iMonad x1) (vwriteList x1 x2 (vappend (lqdc##$select x3) (vappend (lqdc##$select x3) (lqdc##$select x3)))) (lift (iMonad x1) ((,,) (vlength (lqdc##$select x3)) (vlength (lqdc##$select x3)) (vlength (lqdc##$select x3))))}"
117:23-117:34::iMonadArray :: "(VMonadArray.VMonadArray a b)"
117:35-117:36::i :: "VNat.VNat"
119:5-119:49::lq_anf$##7205759403792820364 :: "a ()"
119:18-119:19::i :: "{v : VNat.VNat | v == i}"
119:20-119:48::lq_anf$##7205759403792820363 :: "(VList.VList a)"
119:29-119:31::xs :: "{v : (VList.VList a) | v == xs}"
119:32-119:47::lq_anf$##7205759403792820362 :: "{v : (VList.VList a) | v == vappend ys zs}"
119:41-119:43::ys :: "{v : (VList.VList a) | v == ys}"
119:44-119:46::zs :: "{v : (VList.VList a) | v == zs}"
120:5-120:49::lq_anf$##7205759403792820369 :: "a (VNat.VNat, VNat.VNat, VNat.VNat)"
120:12-120:48::lq_anf$##7205759403792820368 :: "(VNat.VNat, VNat.VNat, VNat.VNat)"
120:13-120:23::lq_anf$##7205759403792820365 :: "{v : VNat.VNat | v == vlength xs}"
120:21-120:23::xs :: "{v : (VList.VList a) | v == xs}"
120:25-120:35::lq_anf$##7205759403792820366 :: "{v : VNat.VNat | v == vlength ys}"
120:33-120:35::ys :: "{v : (VList.VList a) | v == ys}"
120:37-120:47::lq_anf$##7205759403792820367 :: "{v : VNat.VNat | v == vlength zs}"
120:45-120:47::zs :: "{v : (VList.VList a) | v == zs}"
122:5-122:10::vseq_ :: "x1:a () -> x2:a (VNat.VNat, VNat.VNat, VNat.VNat) -> {v : a (VNat.VNat, VNat.VNat, VNat.VNat) | v == vseq iMonad_ x1 x2\n                                                                                                && v == bind iMonad_ x1 (vconst x2)}"
122:13-122:25::_ :: "x1:a () -> x2:a (VNat.VNat, VNat.VNat, VNat.VNat) -> {v : a (VNat.VNat, VNat.VNat, VNat.VNat) | v == vseq iMonad_ x1 x2\n                                                                                                && v == bind iMonad_ x1 (vconst x2)}"
122:18-122:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
123:5-123:10::lift_ :: "(VNat.VNat, VNat.VNat, VNat.VNat) -> a (VNat.VNat, VNat.VNat, VNat.VNat)"
123:13-123:25::_ :: "{VV : forall a . a -> b a | VV == lift iMonad_}"
123:18-123:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
124:5-124:16::vwriteList_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {v : b () | v == vwriteList iMonadArray x1 x2}"
124:19-124:41::_ :: "x1:VNat.VNat -> x2:(VList.VList a) -> {v : b () | v == vwriteList iMonadArray x1 x2}"
124:30-124:41::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
125:5-125:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
125:15-125:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
125:22-125:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
139:1-139:19::vwriteList_vappend :: "forall a b .\nx1:(VMonadArray.VMonadArray b b) -> x2:VNat.VNat -> x3:(VList.VList b) -> x4:(VList.VList b) -> {VV : () | vwriteList x1 x2 (vappend x3 x4) == vseq (iMonad x1) (vwriteList x1 x2 x3) (vwriteList x1 (vadd x2 (vlength x3)) x4)}"
201:1-201:6::vswap :: "forall a b .\n(VMonadArray.VMonadArray a b) -> VNat.VNat -> VNat.VNat -> a ()"
201:7-201:18::iMonadArray :: "(VMonadArray.VMonadArray a b)"
201:19-201:20::i :: "VNat.VNat"
201:21-201:22::j :: "VNat.VNat"
203:5-203:15::lq_anf$##7205759403792820370 :: "{v : a b | v == vread_ i}"
203:13-203:14::i :: "{v : VNat.VNat | v == i}"
204:8-204:9::x :: "a"
206:11-206:21::lq_anf$##7205759403792820371 :: "{v : a b | v == vread_ j}"
206:19-206:20::j :: "{v : VNat.VNat | v == j}"
207:14-207:15::y :: "a"
209:17-209:30::lq_anf$##7205759403792820372 :: "{v : a () | v == vwrite_ i y}"
209:26-209:27::i :: "{v : VNat.VNat | v == i}"
209:28-209:29::y :: "{VV : a | VV == y}"
210:17-210:30::lq_anf$##7205759403792820373 :: "{v : a () | v == vwrite_ j x}"
210:26-210:27::j :: "{v : VNat.VNat | v == j}"
210:28-210:29::x :: "{VV : a | VV == x}"
214:5-214:10::bind_ :: "a b -> (b -> a ()) -> a ()"
214:13-214:25::_ :: "{VV : forall a b . c a -> (a -> c b) -> c b | VV == bind iMonad_}"
214:18-214:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
215:5-215:10::vseq_ :: "x1:a () -> x2:a () -> {v : a () | v == vseq iMonad_ x1 x2\n                                  && v == bind iMonad_ x1 (vconst x2)}"
215:13-215:25::_ :: "x1:a () -> x2:a () -> {v : a () | v == vseq iMonad_ x1 x2\n                                  && v == bind iMonad_ x1 (vconst x2)}"
215:18-215:25::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray\n                         && v == iMonad_}"
216:5-216:11::vread_ :: "VNat.VNat -> a b"
216:14-216:31::_ :: "VNat.VNat -> a b"
216:20-216:31::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
217:5-217:12::vwrite_ :: "VNat.VNat -> a -> b ()"
217:15-217:33::_ :: "VNat.VNat -> a -> b ()"
217:22-217:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"
218:5-218:12::iMonad_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
218:15-218:33::_ :: "{v : (VMonad.VMonad a) | v == iMonad iMonadArray}"
218:22-218:33::iMonadArray :: "{v : (VMonadArray.VMonadArray a b) | v == iMonadArray}"