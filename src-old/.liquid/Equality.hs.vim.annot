1:1-1:1::$trModule :: "GHC.Types.Module"
29:1-29:12::x :: "{VV : a | VV == x}"
29:3-29:6::==* :: "forall a .\nx1:a -> x2:{VV : a | peq x1 VV} -> {VV : a | peq VV x2\n                                             && peq VV x1}"
29:7-29:8::x :: "a"
34:1-34:6::isBEq :: "forall a .\nx1:(Equality.PBEq a) -> {VV : GHC.Types.Bool | VV == isBEq x1}"
34:21-34:25::True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
35:11-35:16::False :: "{v : GHC.Types.Bool | not v\n                      && v == False}"
43:1-43:9::fromPBEq :: "forall a .\nx1:a -> x2:a -> {pf : (Equality.PBEq a) | peq x1 x2\n                                          && isBEq pf} -> {VV : () | x1 == x2}"
43:28-43:35::trivial :: "{v : () | v == trivial}"
44:28-44:35::trivial :: "{v : () | v == trivial}"
45:30-45:37::trivial :: "{v : () | v == trivial}"
53:1-53:11::fromPBEq_f :: "forall a b .\nx1:(a -> b) -> x3:(a -> b) -> {_ : (Equality.PBEq (a -> b)) | peq x1 x3} -> x7:a -> {VV : () | x1 x7 == x3 x7}"
58:1-58:6::apply :: "forall a b .\nx1:(a -> b) -> x3:a -> {VV : b | VV == apply x1 x3\n                                 && VV == x1 x3}"
58:7-58:8::f :: "a -> b"
58:9-58:10::x :: "a"
58:15-58:16::x :: "{VV : a | VV == x}"
75:1-75:16::eta_equivalence :: "forall a b .\nx1:(a -> b) -> x3:a -> {VV : () | x1 x3 == apply lam x : a##xo . x1 x x3}"
75:17-75:18::f :: "a -> b"
75:32-75:33::f :: "a -> b"
75:34-75:45::_ :: "{VV : a | VV == f x}"
75:36-75:37::x :: "a"
75:43-75:44::x :: "{VV : a | VV == x}"
75:46-75:70::lq_anf$##7205759403792804432 :: "{v : (Equality.PBEq a -> b) | peq f lam x : a##xo . f x\n                              && v == eta_equivalence_PBEq f}"
75:68-75:69::f :: "a -> b"
84:1-84:21::eta_equivalence_PBEq :: "forall a b .\nx1:(a -> b) -> {_ : (Equality.PBEq a -> b) | peq x1 lam x : a##xo . x1 x}"
84:22-84:23::f :: "a -> b"
84:30-84:31::f :: "a -> b"
84:32-84:43::_ :: "{VV : a | VV == f x}"
84:34-84:35::x :: "a"
84:41-84:42::x :: "{VV : a | VV == x}"
84:44-84:78::lq_anf$##7205759403792804430 :: "x1:a -> {v : (Equality.PBEq b) | peq (f x1) (apply lam x : a##xo . f x x1)}"
84:76-84:77::f :: "a -> b"
93:1-93:31::eta_equivalence_PBEq_pointwise :: "forall a b .\nx1:(a -> b) -> x3:a -> {VV : (Equality.PBEq b) | peq (x1 x3) (apply lam x : a##xo . x1 x x3)}"
93:32-93:33::f :: "a -> b"
93:34-93:35::y :: "a"
95:5-95:10::lq_anf$##7205759403792804426 :: "{VV : a | VV == f y}"
95:8-95:9::y :: "{VV : a | VV == y}"
96:5-96:20::lq_anf$##7205759403792804427 :: "{VV : a | VV == f y}"
96:18-96:19::y :: "{VV : a | VV == y}"
97:5-97:36::lq_anf$##7205759403792804428 :: "{v : () | f y == apply lam x : a##a20y . f x y\n          && v == eta_equivalence_pointwise f y}"
97:32-97:33::f :: "a -> b"
97:34-97:35::y :: "{VV : a | VV == y}"
106:1-106:26::eta_equivalence_pointwise :: "forall a b .\nx1:(a -> b) -> x3:a -> {VV : () | x1 x3 == apply lam x : a##xo . x1 x x3}"
106:27-106:28::f :: "a -> b"
106:29-106:30::y :: "a"
107:3-107:6::lq_anf$##7205759403792804420 :: "{VV : a | VV == f y}"
107:5-107:6::y :: "{VV : a | VV == y}"
108:9-108:22::lq_anf$##7205759403792804421 :: "{VV : a | VV == f y}"
108:21-108:22::y :: "{VV : a | VV == y}"
109:9-109:28::lq_anf$##7205759403792804424 :: "a"
109:15-109:26::_ :: "{VV : a | VV == f x}"
109:17-109:18::x :: "a"
109:24-109:25::x :: "{VV : a | VV == x}"
109:27-109:28::y :: "{VV : a | VV == y}"
110:9-110:12::QED :: "{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}"
136:1-136:23::alpha_equivalence_PBEq :: "forall a b .\nx1:(a -> b) -> {h : (Equality.PBEq a -> b) | peq lam x : a##xo . x1 x lam y : a##xo . x1 y}"
136:24-136:25::f :: "a -> b"
138:5-138:16::_ :: "{VV : a | VV == f x}"
138:7-138:8::x :: "a"
138:14-138:15::x :: "{VV : a | VV == x}"
139:5-139:16::_ :: "{VV : a | VV == f y}"
139:7-139:8::y :: "a"
139:14-139:15::y :: "{VV : a | VV == y}"
140:5-140:56::BEq :: "{VV : forall a .\n      x1:a -> x2:a -> x3:{v : () | x1 == x2} -> {v : (Equality.PBEq a) | BEq v == x3\n                                                                         && BEq v == x2\n                                                                         && BEq v == x1\n                                                                         && peq x1 x2\n                                                                         && v == BEq x1 x2 x3} | VV == BEq}"
140:7-140:8::x :: "a"
140:16-140:31::lq_anf$##7205759403792804435 :: "{VV : a | VV == f x}"
140:29-140:30::x :: "{VV : a | VV == x}"
140:32-140:47::lq_anf$##7205759403792804436 :: "{VV : a | VV == f x}"
140:45-140:46::x :: "{VV : a | VV == x}"
140:48-140:55::trivial :: "{v : () | v == trivial}"