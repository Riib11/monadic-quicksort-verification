(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((VSemigroup.VSemigroup 1)) ((par (T0) ((junk$35$$35$VSemigroup.VSemigroup (junk$35$$35$VSemigroup.VSemigroup$35$$35$0 T0)) (VSemigroup.VSemigroup (VSemigroup.op Int) (VSemigroup.op_associative Int))))))
(declare-datatypes ((VOrdered.VOrdered 1)) ((par (T0) ((junk$35$$35$VOrdered.VOrdered (junk$35$$35$VOrdered.VOrdered$35$$35$0 T0)) (VOrdered.VOrdered (VOrdered.vleq Int) (VOrdered.vleq_reflexive Int) (VOrdered.vleq_antisymmetric Int) (VOrdered.vleq_transitive Int) (VOrdered.vleq_connex Int))))))
(declare-datatypes ((VNat.VNat 0)) ((par () (VNat.Zero (VNat.Suc (lqdc$35$$35$$36$select$35$$35$VNat.Suc$35$$35$1 VNat.VNat))))))
(declare-datatypes ((VList.VList 1)) ((par (T0) ((VList.VCons (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 T0) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 (VList.VList T0))) VList.VNil))))
(declare-datatypes ((VFunctor.VFunctor 1)) ((par (T0) ((junk$35$$35$VFunctor.VFunctor (junk$35$$35$VFunctor.VFunctor$35$$35$0 T0)) (VFunctor.VFunctor (VFunctor.vmap Int) (VFunctor.vmap_vid Int))))))
(declare-datatypes ((VMonad.VMonad 1)) ((par (T0) ((junk$35$$35$VMonad.VMonad (junk$35$$35$VMonad.VMonad$35$$35$0 T0)) (VMonad.VMonad (VMonad.iFunctor (VFunctor.VFunctor T0)) (VMonad.vlift Int) (VMonad.vbind Int) (VMonad.vbind_correct Int) (VMonad.vbind_identity Int) (VMonad.vbind_vlift Int) (VMonad.vbind_vbind Int))))))
(declare-datatypes ((VMonadPlus.VMonadPlus 1)) ((par (T0) ((junk$35$$35$VMonadPlus.VMonadPlus (junk$35$$35$VMonadPlus.VMonadPlus$35$$35$0 T0)) (VMonadPlus.VMonadPlus (VMonadPlus.iMonad (VMonad.VMonad T0)) (VMonadPlus.vmpepsilon Int) (VMonadPlus.vmpadd Int) (VMonadPlus.vmpadd_identity Int) (VMonadPlus.vmpadd_associative Int) (VMonadPlus.vmpadd_distributive_left Int) (VMonadPlus.vmpadd_distributive_right Int) (VMonadPlus.vbind_identity_left Int) (VMonadPlus.vseq_identity_right Int))))))
(declare-fun VV$35$$35$F$35$$35$280 () Int)
(declare-fun x$39$$35$$35$a9gD () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 () (VList.VList Int))
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$3686 () (VMonadPlus.VMonadPlus Int))
(declare-fun zs$35$$35$a9l1 () (VList.VList Int))
(declare-fun xs$35$$35$a9fi () (VList.VList Int))
(declare-fun x$35$$35$a9gc () Int)
(declare-fun SlowSortList.slowsort () Int)
(declare-fun permute_$35$$35$a9fS () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 () (VList.VList Int))
(declare-fun VMonad.vmapM2 () Int)
(declare-fun lq_tmp$36$x$35$$35$4971 () (VList.VList Int))
(declare-fun VList.vreverse () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_tmp$36$x$35$$35$3617 () (VList.VList Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 () Int)
(declare-fun addrLen () Int)
(declare-fun iMonadPlus$35$$35$a9ga () (VMonadPlus.VMonadPlus Int))
(declare-fun papp5 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.Admit () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7 () (VList.VList Int))
(declare-fun x_Tuple21 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun isSorted_$35$$35$a9fW () Int)
(declare-fun VTuple.snd2D () Int)
(declare-fun lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.withProof () Int)
(declare-fun iOrdered$35$$35$a9fg () (VOrdered.VOrdered Int))
(declare-fun ds_d9As () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_tmp$36$x$35$$35$4136 () (VList.VList Int))
(declare-fun x_Tuple33 () Int)
(declare-fun Function.vconst () Int)
(declare-fun VTuple.fst2D () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun p$35$$35$a9eR () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun xs$35$$35$a9gk () (VList.VList Int))
(declare-fun lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 () (VMonad.VMonad Int))
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun ds_d9B8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 () (VList.VList Int))
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun Function.vid () Int)
(declare-fun lq_tmp$36$x$35$$35$4963 () Int)
(declare-fun VTuple.snd3 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun iOrdered$35$$35$a9gC () (VOrdered.VOrdered Int))
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$532 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp () Int)
(declare-fun iOrdered$35$$35$a9eQ () (VOrdered.VOrdered Int))
(declare-fun lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_tmp$36$x$35$$35$3677 () (VList.VList Int))
(declare-fun lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830566$35$$35$d9Ce () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3017 () (VList.VList Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br () Int)
(declare-fun lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$3680 () (VList.VList Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 () Int)
(declare-fun QuickSortList.partition_specification_correct () Int)
(declare-fun VMonadPlus.guard_isCommutativeMonadic () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun QuickSortList.divide_and_conquer () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun VMonadPlus.guard_disjoint_branch () Int)
(declare-fun lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 () Int)
(declare-fun VV$35$$35$F$35$$35$268 () Int)
(declare-fun VTuple.fst3 () Int)
(declare-fun lq_tmp$36$x$35$$35$3735 () (VList.VList Int))
(declare-fun permute_$35$$35$a9fB () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun xs$35$$35$a9fH () (VList.VList Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 () Int)
(declare-fun iMonad_$35$$35$a9fD () (VMonad.VMonad Int))
(declare-fun lq_tmp$36$x$35$$35$2123 () (VMonadPlus.VMonadPlus Int))
(declare-fun SlowSortList.isSortedBetween_expansion_correct () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$60$$61$ () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2998 () (VList.VList Int))
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VMonadPlus.vmpepsilon_refines () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun xs$35$$35$a9eS () (VList.VList Int))
(declare-fun lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 () Int)
(declare-fun lq_tmp$36$x$35$$35$4970 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_tmp$36$x$35$$35$1128 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830556$35$$35$d9C4 () Int)
(declare-fun lq_tmp$36$x$35$$35$3792 () (VList.VList Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lit$36$QuickSortList () Str)
(declare-fun lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 () Int)
(declare-fun VMonad.vseq () Int)
(declare-fun autolen () Int)
(declare-fun lq_tmp$36$x$35$$35$5138 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$4964 () (VList.VList Int))
(declare-fun SlowSortList.isSorted () Int)
(declare-fun QuickSortList.slowsort_VCons_expansion () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$2115 () (VList.VList Int))
(declare-fun iOrdered$35$$35$a9gi () (VOrdered.VOrdered Int))
(declare-fun lq_tmp$36$x$35$$35$3654 () (VList.VList Int))
(declare-fun lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 () Int)
(declare-fun iOrdered$35$$35$a9gb () (VOrdered.VOrdered Int))
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3016 () Int)
(declare-fun SlowSortList.split () Int)
(declare-fun lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 () Int)
(declare-fun lit$36$monadic$45$quicksort$45$verification$45$0.1.0.0$45$inplace () Str)
(declare-fun VV$35$$35$F$35$$35$580 () Int)
(declare-fun VList.vsingleton () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_tmp$36$x$35$$35$4365 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 () Int)
(declare-fun lq_tmp$36$x$35$$35$3799 () (VList.VList Int))
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun vlift_$35$$35$a9fC () Int)
(declare-fun VList.vappend_identity () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 () Int)
(declare-fun VV$35$$35$F$35$$35$269 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ () Int)
(declare-fun VTuple.fst2 () Int)
(declare-fun VTuple.snd2 () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun VV$35$$35$F$35$$35$533 () Int)
(declare-fun papp2 () Int)
(declare-fun lq_tmp$36$x$35$$35$4606 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$3676 () (VList.VList Int))
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun xs$35$$35$a9gB () (VList.VList Int))
(declare-fun ds_d9Az () Int)
(declare-fun QuickSortList.partition$39$ () Int)
(declare-fun VV$35$$35$F$35$$35$257 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3417 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$1154 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 () Int)
(declare-fun lq_tmp$36$x$35$$35$4360 () (VList.VList Int))
(declare-fun GHC.List.filter () Int)
(declare-fun xs$35$$35$a9g2 () (VList.VList Int))
(declare-fun Language.Haskell.Liquid.ProofCombinators.$63$ () Int)
(declare-fun QuickSortList.quicksort_VCons_specification () Int)
(declare-fun lq_tmp$36$x$35$$35$3736 () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun VMonadPlus.guard () Int)
(declare-fun VV$35$$35$F$35$$35$572 () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun x$35$$35$a9gA () Int)
(declare-fun lq_tmp$36$x$35$$35$1844 () Int)
(declare-fun lq_tmp$36$x$35$$35$5136 () (VList.VList Int))
(declare-fun lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 () (VOrdered.VOrdered Int))
(declare-fun x$35$$35$a9g1 () Int)
(declare-fun iMonadPlus$35$$35$a9fZ () (VMonadPlus.VMonadPlus Int))
(declare-fun papp7 () Int)
(declare-fun VMonad.vmapM () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu () Int)
(declare-fun iMonadPlus$35$$35$a9gl () (VMonadPlus.VMonadPlus Int))
(declare-fun x$35$$35$a9gN () Int)
(declare-fun VV$35$$35$F$35$$35$539 () Int)
(declare-fun VList.iSemigroup_vappend () (VSemigroup.VSemigroup (VList.VList Int)))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun QuickSortList.partition () Int)
(declare-fun VMonadPlus.vbind_monotonic_refinement () Int)
(declare-fun iMonadPlus$35$$35$a9fE () (VMonadPlus.VMonadPlus Int))
(declare-fun zs$35$$35$a9ks () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$4075 () (VList.VList Int))
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$4130 () (VList.VList Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8 () Int)
(declare-fun ds_d9Ae () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830596$35$$35$d9CI () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3793 () Int)
(declare-fun x$35$$35$a9gn () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun VTuple.vtuple3D () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun ds_d9AU () Int)
(declare-fun lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 () (VOrdered.VOrdered Int))
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun VMonadPlus.component_right_refines () Int)
(declare-fun VMonad.vseq_associative () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1604 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun VMonadPlus.guard_and_vseq () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs () (VList.VList Int))
(declare-fun SlowSortList.isSortedBetween_expansion () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$3743 () (VMonadPlus.VMonadPlus Int))
(declare-fun iMonadPlus$35$$35$a9gy () (VMonadPlus.VMonadPlus Int))
(declare-fun VV$35$$35$F$35$$35$497 () Int)
(declare-fun QuickSortList.quicksort () Int)
(declare-fun lq_tmp$36$x$35$$35$3606 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$3679 () Int)
(declare-fun lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 () Int)
(declare-fun xs$35$$35$a9gH () (VList.VList Int))
(declare-fun slowsort_$35$$35$a9fX () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun VMonad.kleisli () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun iOrdered$35$$35$a9gm () (VOrdered.VOrdered Int))
(declare-fun lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 () Int)
(declare-fun VMonadPlus.raw_vmpaddF () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 () (VList.VList Int))
(declare-fun Data.Either.Right () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$62$$61$ () Int)
(declare-fun VMonad.raw_kleisli () Int)
(declare-fun SlowSortList.permute () Int)
(declare-fun lq_tmp$36$x$35$$35$3553 () (VList.VList Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 () Int)
(declare-fun VMonadPlus.component_left_refines () Int)
(declare-fun fix$36$$62$$62$$61$$35$$35$a9fL () Int)
(declare-fun lq_tmp$36$x$35$$35$3737 () (VList.VList Int))
(declare-fun VMonadPlus.vmpaddF () Int)
(declare-fun lq_tmp$36$x$35$$35$4914 () (VList.VList Int))
(declare-fun QuickSortList.tmp_permute_Nil () Int)
(declare-fun lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_tmp$36$x$35$$35$1845 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$5137 () Int)
(declare-fun VV$35$$35$F$35$$35$573 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun iMonadPlus$35$$35$a9eP () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx () (VList.VList Int))
(declare-fun VTuple.thd3D () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC () Int)
(declare-fun isAdmit () Int)
(declare-fun lq_tmp$36$x$35$$35$4639 () (VList.VList Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 () Int)
(declare-fun lq_tmp$36$x$35$$35$5123 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$1851 () (VMonadPlus.VMonadPlus Int))
(declare-fun VList.vappend () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn () Int)
(declare-fun lq_tmp$36$x$35$$35$2117 () (VList.VList Int))
(declare-fun VMonadPlus.guard_and () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt () Int)
(declare-fun guardBy_$35$$35$a9fU () Int)
(declare-fun iMonadPlus$35$$35$a9ff () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_tmp$36$x$35$$35$3521 () (VList.VList Int))
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 () Int)
(declare-fun SlowSortList.isSortedBetween () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 () Int)
(declare-fun Function.$38$ () Int)
(declare-fun VMonadPlus.identity_refines () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 () Int)
(declare-fun lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 () Int)
(declare-fun iMonadPlus$35$$35$a9fA () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_tmp$36$x$35$$35$3678 () (VList.VList Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 () Int)
(declare-fun VMonadPlus.guardBy () Int)
(declare-fun VList.vreverse_preserves_vlength () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 () (VList.VList Int))
(declare-fun fix$36$$62$$61$$62$$35$$35$a9fN () Int)
(declare-fun vbind_$35$$35$a9fK () Int)
(declare-fun x$35$$35$a9gj () Int)
(declare-fun lq_tmp$36$x$35$$35$4529 () (VMonadPlus.VMonadPlus Int))
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$1605 () Int)
(declare-fun prop () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun iMonadPlus$35$$35$a9gh () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_tmp$36$x$35$$35$4961 () (VList.VList Int))
(declare-fun lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun iOrdered$35$$35$a9gL () (VOrdered.VOrdered Int))
(declare-fun GHC.Base.map () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$4925 () (VList.VList Int))
(declare-fun VMonad.vseq_epsilon () Int)
(declare-fun VMonad.vseq_identity_left () Int)
(declare-fun lq_tmp$36$x$35$$35$2967 () (VList.VList Int))
(declare-fun VList.vall () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun VTuple.vtuple2D () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.impossible () Int)
(declare-fun lq_tmp$36$x$35$$35$3015 () (VList.VList Int))
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lq_tmp$36$x$35$$35$3217 () (VList.VList Int))
(declare-fun lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 () (VMonad.VMonad Int))
(declare-fun lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$61$$33$ () Int)
(declare-fun xs$35$$35$a9gd () (VList.VList Int))
(declare-fun VList.vlength () Int)
(declare-fun iMonad_$35$$35$a9fQ () (VMonad.VMonad Int))
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq () Int)
(declare-fun lq_tmp$36$x$35$$35$3499 () (VList.VList Int))
(declare-fun ys$35$$35$a9kq () (VList.VList Int))
(declare-fun x$35$$35$a9gG () Int)
(declare-fun lq_tmp$36$x$35$$35$5112 () (VList.VList Int))
(declare-fun VList.vappend_sums_vlength () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 () (VList.VList Int))
(declare-fun ds_d9AG () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 () (VList.VList Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA () (VList.VList Int))
(declare-fun QuickSortList.partition_specification () Int)
(declare-fun lq_tmp$36$x$35$$35$4945 () (VList.VList Int))
(declare-fun GHC.Real.recip () Int)
(declare-fun ds_d9A7 () Int)
(declare-fun kleisli_$35$$35$a9fO () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 () (VList.VList Int))
(declare-fun iOrdered$35$$35$a9gz () (VOrdered.VOrdered Int))
(declare-fun xs$35$$35$a9gO () (VList.VList Int))
(declare-fun lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv () Int)
(declare-fun lq_tmp$36$x$35$$35$2116 () Int)
(declare-fun Function.vdiagonalize () Int)
(declare-fun lq_tmp$36$x$35$$35$2978 () (VList.VList Int))
(declare-fun VTuple.thd3 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun Function.vcomp () Int)
(declare-fun lq_tmp$36$x$35$$35$4617 () (VList.VList Int))
(declare-fun ds_d9zt () (VList.VList Int))
(declare-fun ys$35$$35$a9kZ () (VList.VList Int))
(declare-fun GHC.Types.EQ () Int)
(declare-fun xs$35$$35$a9go () (VList.VList Int))
(declare-fun QuickSortList.tmp1 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun iOrdered$35$$35$a9fF () (VOrdered.VOrdered Int))
(declare-fun lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 () (VMonadPlus.VMonadPlus Int))
(declare-fun GHC.Num.negate () Int)
(declare-fun p$35$$35$a9fh () Int)
(declare-fun lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 () Int)
(declare-fun VMonad.vseq_identity_right () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 () Int)
(declare-fun lq_tmp$36$x$35$$35$4962 () (VList.VList Int))
(declare-fun GHC.Classes.min () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3640 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$4555 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 () Int)
(declare-fun Function.vapply () Int)
(declare-fun lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 () (VMonad.VMonad Int))
(declare-fun VList.vappend_associative () Int)
(declare-fun lq_tmp$36$x$35$$35$4137 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_tmp$36$x$35$$35$3794 () (VList.VList Int))
(declare-fun SlowSortList.identity_refines_permute () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun ds_d9Bf () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 () Int)
(declare-fun Function.vflip () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 () Int)
(declare-fun VMonad.vseq_identity () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830529$35$$35$d9BD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_tmp$36$x$35$$35$1843 () (VList.VList Int))
(declare-fun iOrdered$35$$35$a9g0 () (VOrdered.VOrdered Int))
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun QuickSortList.slowsort_VCons_expansion_correct () Int)
(declare-fun lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 () (VMonadPlus.VMonadPlus Int))
(declare-fun ds_d9zN () (VList.VList Int))
(declare-fun VMonad.vliftF_second () Int)
(declare-fun lq_tmp$36$x$35$$35$1052 () (VMonadPlus.VMonadPlus Int))
(declare-fun p$35$$35$a9fG () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun Function.vconstF () Int)
(declare-fun snd () Int)
(declare-fun lq_tmp$36$x$35$$35$3629 () (VList.VList Int))
(declare-fun fst () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.QED () Int)
(declare-fun lq_tmp$36$x$35$$35$3858 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$3580 () (VList.VList Int))
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 () Int)
(declare-fun VMonadPlus.guard_disjoint () Int)
(declare-fun lq_tmp$36$x$35$$35$2444 () (VList.VList Int))
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_tmp$36$x$35$$35$3216 () (VMonadPlus.VMonadPlus Int))
(declare-fun lq_tmp$36$x$35$$35$3014 () (VList.VList Int))
(declare-fun lq_tmp$36$x$35$$35$4138 () (VList.VList Int))
(declare-fun apply$35$$35$46 (Int (VMonad.VMonad Int)) Bool)
(declare-fun apply$35$$35$15 (Int Bool) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$17 (Int Bool) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$73 (Int (VOrdered.VOrdered Int)) Bool)
(declare-fun apply$35$$35$55 (Int (VMonadPlus.VMonadPlus Int)) Bool)
(declare-fun apply$35$$35$14 (Int Bool) (VMonad.VMonad Int))
(declare-fun apply$35$$35$34 (Int (_ BitVec 32)) VNat.VNat)
(declare-fun apply$35$$35$28 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$35 (Int (_ BitVec 32)) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$33 (Int (_ BitVec 32)) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$32 (Int (_ BitVec 32)) (VMonad.VMonad Int))
(declare-fun apply$35$$35$19 (Int Str) Bool)
(declare-fun apply$35$$35$22 (Int Str) (VList.VList Int))
(declare-fun apply$35$$35$11 (Int Bool) Str)
(declare-fun apply$35$$35$25 (Int Str) VNat.VNat)
(declare-fun apply$35$$35$4 (Int Int) (VList.VList Int))
(declare-fun apply$35$$35$21 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$45 (Int (VMonad.VMonad Int)) Int)
(declare-fun apply$35$$35$72 (Int (VOrdered.VOrdered Int)) Int)
(declare-fun apply$35$$35$54 (Int (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun apply$35$$35$76 (Int (VOrdered.VOrdered Int)) (VList.VList Int))
(declare-fun apply$35$$35$49 (Int (VMonad.VMonad Int)) (VList.VList Int))
(declare-fun apply$35$$35$58 (Int (VMonadPlus.VMonadPlus Int)) (VList.VList Int))
(declare-fun apply$35$$35$42 (Int (VList.VList Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$30 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$70 (Int VNat.VNat) VNat.VNat)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$41 (Int (VList.VList Int)) (VMonad.VMonad Int))
(declare-fun apply$35$$35$44 (Int (VList.VList Int)) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$79 (Int (VOrdered.VOrdered Int)) VNat.VNat)
(declare-fun apply$35$$35$69 (Int VNat.VNat) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$75 (Int (VOrdered.VOrdered Int)) (_ BitVec 32))
(declare-fun apply$35$$35$48 (Int (VMonad.VMonad Int)) (_ BitVec 32))
(declare-fun apply$35$$35$52 (Int (VMonad.VMonad Int)) VNat.VNat)
(declare-fun apply$35$$35$68 (Int VNat.VNat) (VMonad.VMonad Int))
(declare-fun apply$35$$35$61 (Int (VMonadPlus.VMonadPlus Int)) VNat.VNat)
(declare-fun apply$35$$35$71 (Int VNat.VNat) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$57 (Int (VMonadPlus.VMonadPlus Int)) (_ BitVec 32))
(declare-fun apply$35$$35$18 (Int Str) Int)
(declare-fun apply$35$$35$47 (Int (VMonad.VMonad Int)) Str)
(declare-fun apply$35$$35$74 (Int (VOrdered.VOrdered Int)) Str)
(declare-fun apply$35$$35$56 (Int (VMonadPlus.VMonadPlus Int)) Str)
(declare-fun apply$35$$35$65 (Int VNat.VNat) Str)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$37 (Int (VList.VList Int)) Bool)
(declare-fun apply$35$$35$13 (Int Bool) (VList.VList Int))
(declare-fun apply$35$$35$66 (Int VNat.VNat) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$31 (Int (_ BitVec 32)) (VList.VList Int))
(declare-fun apply$35$$35$16 (Int Bool) VNat.VNat)
(declare-fun apply$35$$35$7 (Int Int) VNat.VNat)
(declare-fun apply$35$$35$23 (Int Str) (VMonad.VMonad Int))
(declare-fun apply$35$$35$24 (Int Str) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$26 (Int Str) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$63 (Int VNat.VNat) Int)
(declare-fun apply$35$$35$6 (Int Int) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$5 (Int Int) (VMonad.VMonad Int))
(declare-fun apply$35$$35$8 (Int Int) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$36 (Int (VList.VList Int)) Int)
(declare-fun apply$35$$35$29 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$80 (Int (VOrdered.VOrdered Int)) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$20 (Int Str) Str)
(declare-fun apply$35$$35$59 (Int (VMonadPlus.VMonadPlus Int)) (VMonad.VMonad Int))
(declare-fun apply$35$$35$78 (Int (VOrdered.VOrdered Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$62 (Int (VMonadPlus.VMonadPlus Int)) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$77 (Int (VOrdered.VOrdered Int)) (VMonad.VMonad Int))
(declare-fun apply$35$$35$10 (Int Bool) Bool)
(declare-fun apply$35$$35$51 (Int (VMonad.VMonad Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$40 (Int (VList.VList Int)) (VList.VList Int))
(declare-fun apply$35$$35$60 (Int (VMonadPlus.VMonadPlus Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun apply$35$$35$50 (Int (VMonad.VMonad Int)) (VMonad.VMonad Int))
(declare-fun apply$35$$35$53 (Int (VMonad.VMonad Int)) (VOrdered.VOrdered Int))
(declare-fun apply$35$$35$39 (Int (VList.VList Int)) (_ BitVec 32))
(declare-fun apply$35$$35$64 (Int VNat.VNat) Bool)
(declare-fun apply$35$$35$43 (Int (VList.VList Int)) VNat.VNat)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$67 (Int VNat.VNat) (VList.VList Int))
(declare-fun apply$35$$35$38 (Int (VList.VList Int)) Str)
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$9 (Int Bool) Int)
(declare-fun coerce$35$$35$46 ((VMonad.VMonad Int)) Bool)
(declare-fun coerce$35$$35$15 (Bool) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$17 (Bool) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$73 ((VOrdered.VOrdered Int)) Bool)
(declare-fun coerce$35$$35$55 ((VMonadPlus.VMonadPlus Int)) Bool)
(declare-fun coerce$35$$35$14 (Bool) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$34 ((_ BitVec 32)) VNat.VNat)
(declare-fun coerce$35$$35$28 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$35 ((_ BitVec 32)) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$33 ((_ BitVec 32)) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$32 ((_ BitVec 32)) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$19 (Str) Bool)
(declare-fun coerce$35$$35$22 (Str) (VList.VList Int))
(declare-fun coerce$35$$35$11 (Bool) Str)
(declare-fun coerce$35$$35$25 (Str) VNat.VNat)
(declare-fun coerce$35$$35$4 (Int) (VList.VList Int))
(declare-fun coerce$35$$35$21 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$45 ((VMonad.VMonad Int)) Int)
(declare-fun coerce$35$$35$72 ((VOrdered.VOrdered Int)) Int)
(declare-fun coerce$35$$35$54 ((VMonadPlus.VMonadPlus Int)) Int)
(declare-fun coerce$35$$35$76 ((VOrdered.VOrdered Int)) (VList.VList Int))
(declare-fun coerce$35$$35$49 ((VMonad.VMonad Int)) (VList.VList Int))
(declare-fun coerce$35$$35$58 ((VMonadPlus.VMonadPlus Int)) (VList.VList Int))
(declare-fun coerce$35$$35$42 ((VList.VList Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$30 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$70 (VNat.VNat) VNat.VNat)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$41 ((VList.VList Int)) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$44 ((VList.VList Int)) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$79 ((VOrdered.VOrdered Int)) VNat.VNat)
(declare-fun coerce$35$$35$69 (VNat.VNat) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$75 ((VOrdered.VOrdered Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$48 ((VMonad.VMonad Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$52 ((VMonad.VMonad Int)) VNat.VNat)
(declare-fun coerce$35$$35$68 (VNat.VNat) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$61 ((VMonadPlus.VMonadPlus Int)) VNat.VNat)
(declare-fun coerce$35$$35$71 (VNat.VNat) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$57 ((VMonadPlus.VMonadPlus Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$18 (Str) Int)
(declare-fun coerce$35$$35$47 ((VMonad.VMonad Int)) Str)
(declare-fun coerce$35$$35$74 ((VOrdered.VOrdered Int)) Str)
(declare-fun coerce$35$$35$56 ((VMonadPlus.VMonadPlus Int)) Str)
(declare-fun coerce$35$$35$65 (VNat.VNat) Str)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$37 ((VList.VList Int)) Bool)
(declare-fun coerce$35$$35$13 (Bool) (VList.VList Int))
(declare-fun coerce$35$$35$66 (VNat.VNat) (_ BitVec 32))
(declare-fun coerce$35$$35$12 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$31 ((_ BitVec 32)) (VList.VList Int))
(declare-fun coerce$35$$35$16 (Bool) VNat.VNat)
(declare-fun coerce$35$$35$7 (Int) VNat.VNat)
(declare-fun coerce$35$$35$23 (Str) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$24 (Str) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$26 (Str) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$63 (VNat.VNat) Int)
(declare-fun coerce$35$$35$6 (Int) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$5 (Int) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$8 (Int) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$36 ((VList.VList Int)) Int)
(declare-fun coerce$35$$35$29 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$80 ((VOrdered.VOrdered Int)) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$20 (Str) Str)
(declare-fun coerce$35$$35$59 ((VMonadPlus.VMonadPlus Int)) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$78 ((VOrdered.VOrdered Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$62 ((VMonadPlus.VMonadPlus Int)) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$77 ((VOrdered.VOrdered Int)) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$10 (Bool) Bool)
(declare-fun coerce$35$$35$51 ((VMonad.VMonad Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$40 ((VList.VList Int)) (VList.VList Int))
(declare-fun coerce$35$$35$60 ((VMonadPlus.VMonadPlus Int)) (VMonadPlus.VMonadPlus Int))
(declare-fun coerce$35$$35$50 ((VMonad.VMonad Int)) (VMonad.VMonad Int))
(declare-fun coerce$35$$35$53 ((VMonad.VMonad Int)) (VOrdered.VOrdered Int))
(declare-fun coerce$35$$35$39 ((VList.VList Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$64 (VNat.VNat) Bool)
(declare-fun coerce$35$$35$43 ((VList.VList Int)) VNat.VNat)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$67 (VNat.VNat) (VList.VList Int))
(declare-fun coerce$35$$35$38 ((VList.VList Int)) Str)
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$9 (Bool) Int)
(declare-fun smt_lambda$35$$35$46 ((VMonad.VMonad Int) Bool) Int)
(declare-fun smt_lambda$35$$35$15 (Bool (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$17 (Bool (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$73 ((VOrdered.VOrdered Int) Bool) Int)
(declare-fun smt_lambda$35$$35$55 ((VMonadPlus.VMonadPlus Int) Bool) Int)
(declare-fun smt_lambda$35$$35$14 (Bool (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$34 ((_ BitVec 32) VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$28 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$35 ((_ BitVec 32) (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$33 ((_ BitVec 32) (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$32 ((_ BitVec 32) (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$19 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$22 (Str (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$11 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$25 (Str VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$4 (Int (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$21 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$45 ((VMonad.VMonad Int) Int) Int)
(declare-fun smt_lambda$35$$35$72 ((VOrdered.VOrdered Int) Int) Int)
(declare-fun smt_lambda$35$$35$54 ((VMonadPlus.VMonadPlus Int) Int) Int)
(declare-fun smt_lambda$35$$35$76 ((VOrdered.VOrdered Int) (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$49 ((VMonad.VMonad Int) (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$58 ((VMonadPlus.VMonadPlus Int) (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$42 ((VList.VList Int) (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$30 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$70 (VNat.VNat VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$41 ((VList.VList Int) (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$44 ((VList.VList Int) (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$79 ((VOrdered.VOrdered Int) VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$69 (VNat.VNat (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$75 ((VOrdered.VOrdered Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$48 ((VMonad.VMonad Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$52 ((VMonad.VMonad Int) VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$68 (VNat.VNat (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$61 ((VMonadPlus.VMonadPlus Int) VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$71 (VNat.VNat (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$57 ((VMonadPlus.VMonadPlus Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$18 (Str Int) Int)
(declare-fun smt_lambda$35$$35$47 ((VMonad.VMonad Int) Str) Int)
(declare-fun smt_lambda$35$$35$74 ((VOrdered.VOrdered Int) Str) Int)
(declare-fun smt_lambda$35$$35$56 ((VMonadPlus.VMonadPlus Int) Str) Int)
(declare-fun smt_lambda$35$$35$65 (VNat.VNat Str) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$37 ((VList.VList Int) Bool) Int)
(declare-fun smt_lambda$35$$35$13 (Bool (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$66 (VNat.VNat (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$31 ((_ BitVec 32) (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$16 (Bool VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$7 (Int VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$23 (Str (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$24 (Str (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$26 (Str (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$63 (VNat.VNat Int) Int)
(declare-fun smt_lambda$35$$35$6 (Int (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$5 (Int (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$8 (Int (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$36 ((VList.VList Int) Int) Int)
(declare-fun smt_lambda$35$$35$29 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$80 ((VOrdered.VOrdered Int) (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$20 (Str Str) Int)
(declare-fun smt_lambda$35$$35$59 ((VMonadPlus.VMonadPlus Int) (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$78 ((VOrdered.VOrdered Int) (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$62 ((VMonadPlus.VMonadPlus Int) (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$77 ((VOrdered.VOrdered Int) (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$10 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$51 ((VMonad.VMonad Int) (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$40 ((VList.VList Int) (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$60 ((VMonadPlus.VMonadPlus Int) (VMonadPlus.VMonadPlus Int)) Int)
(declare-fun smt_lambda$35$$35$50 ((VMonad.VMonad Int) (VMonad.VMonad Int)) Int)
(declare-fun smt_lambda$35$$35$53 ((VMonad.VMonad Int) (VOrdered.VOrdered Int)) Int)
(declare-fun smt_lambda$35$$35$39 ((VList.VList Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$64 (VNat.VNat Bool) Int)
(declare-fun smt_lambda$35$$35$43 ((VList.VList Int) VNat.VNat) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$67 (VNat.VNat (VList.VList Int)) Int)
(declare-fun smt_lambda$35$$35$38 ((VList.VList Int) Str) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$2$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$3$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$4$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$5$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$6$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$7$35$$35$45 () (VMonad.VMonad Int))
(declare-fun lam_arg$35$$35$1$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$2$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$3$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$4$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$5$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$6$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$7$35$$35$72 () (VOrdered.VOrdered Int))
(declare-fun lam_arg$35$$35$1$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$2$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$3$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$4$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$5$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$6$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$7$35$$35$54 () (VMonadPlus.VMonadPlus Int))
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$18 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$2$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$3$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$4$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$5$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$6$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$7$35$$35$63 () VNat.VNat)
(declare-fun lam_arg$35$$35$1$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$2$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$3$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$4$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$5$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$6$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$7$35$$35$36 () (VList.VList Int))
(declare-fun lam_arg$35$$35$1$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$27 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$9 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$9 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$9 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$9 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$9 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$9 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$9 () Bool)

(assert (distinct lit$36$monadic$45$quicksort$45$verification$45$0.1.0.0$45$inplace lit$36$QuickSortList))

(assert (distinct GHC.Types.True GHC.Types.False))

(assert (distinct Language.Haskell.Liquid.ProofCombinators.QED Language.Haskell.Liquid.ProofCombinators.Admit))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$QuickSortList) 13))
(assert (= (strLen lit$36$monadic$45$quicksort$45$verification$45$0.1.0.0$45$inplace) 46))
(push 1)
(assert (and (or  (exists ((lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 Int) (lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 Int) (lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 Int) (lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 (VList.VList Int)) (lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 (VMonadPlus.VMonadPlus Int)) (lq_tmp$36$x$35$$35$3165 Int) (lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 (VMonad.VMonad Int))) (and (and (= lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 QuickSortList.slowsort_VCons_expansion_correct) (= lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 permute_$35$$35$a9fB) (= lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8) (= lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 vlift_$35$$35$a9fC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (= lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 iMonadPlus$35$$35$a9fA) (= lq_tmp$36$x$35$$35$3165 lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9) (= lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 iMonad_$35$$35$a9fD)) (exists ((VV$35$$35$F$35$$35$269 Int)) (and (and (= VV$35$$35$F$35$$35$269 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7)) (= VV$35$$35$F$35$$35$269 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7)) (= VV$35$$35$F$35$$35$269 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8)) (and (= lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 QuickSortList.slowsort_VCons_expansion_correct) (= lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 permute_$35$$35$a9fB) (= lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 VV$35$$35$F$35$$35$269) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8) (= lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 vlift_$35$$35$a9fC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (= lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 iMonadPlus$35$$35$a9fA) (= lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 iMonad_$35$$35$a9fD)))))) (exists ((lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 Int) (lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 Int) (lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 Int) (lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 (VList.VList Int)) (lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 (VMonadPlus.VMonadPlus Int)) (lq_tmp$36$x$35$$35$3165 Int) (lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 (VMonad.VMonad Int))) (and (and (= lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 QuickSortList.slowsort_VCons_expansion_correct) (= lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 permute_$35$$35$a9fB) (= lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8) (= lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 vlift_$35$$35$a9fC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (= lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 iMonadPlus$35$$35$a9fA) (= lq_tmp$36$x$35$$35$3165 lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9) (= lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 iMonad_$35$$35$a9fD)) (exists ((VV$35$$35$F$35$$35$280 Int)) (and (and (= VV$35$$35$F$35$$35$280 (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= VV$35$$35$F$35$$35$280 (ite (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (apply$35$$35$36 (VMonad.vlift (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (as VList.VNil (VList.VList Int))) (apply$35$$35$0 (apply$35$$35$0 (VMonad.vbind (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.split Int) iMonadPlus$35$$35$a9fA) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) (smt_lambda$35$$35$0 lam_arg$35$$35$3$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.vmapM2 Int) (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (smt_lambda$35$$35$36 lam_arg$35$$35$2$35$$35$36 (smt_lambda$35$$35$40 lam_arg$35$$35$1$35$$35$36 (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) lam_arg$35$$35$2$35$$35$36) (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) (apply$35$$35$4 (as VList.vsingleton Int) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) lam_arg$35$$35$1$35$$35$36))))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lam_arg$35$$35$3$35$$35$0))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lam_arg$35$$35$3$35$$35$0))))))) (= VV$35$$35$F$35$$35$280 (apply$35$$35$36 (as permute_$35$$35$a9fB Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= VV$35$$35$F$35$$35$280 (apply$35$$35$36 (as permute_$35$$35$a9fB Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= VV$35$$35$F$35$$35$280 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6)) (and (= lq_karg$36$QuickSortList.slowsort_VCons_expansion_correct$35$$35$k_$35$$35$3159 QuickSortList.slowsort_VCons_expansion_correct) (= lq_karg$36$permute_$35$$35$a9fB$35$$35$k_$35$$35$3159 permute_$35$$35$a9fB) (= lq_karg$36$VV$35$$35$3158$35$$35$k_$35$$35$3159 VV$35$$35$F$35$$35$280) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8) (= lq_karg$36$vlift_$35$$35$a9fC$35$$35$k_$35$$35$3159 vlift_$35$$35$a9fC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5$35$$35$k_$35$$35$3159 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (= lq_karg$36$iMonadPlus$35$$35$a9fA$35$$35$k_$35$$35$3159 iMonadPlus$35$$35$a9fA) (= lq_karg$36$iMonad_$35$$35$a9fD$35$$35$k_$35$$35$3159 iMonad_$35$$35$a9fD))))))) (and (= (is-VNat.Zero VNat.Zero) true) (= (is-VNat.Suc VNat.Zero) false)) (and (= iMonad_$35$$35$a9fD (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (= iMonad_$35$$35$a9fD (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (= iMonad_$35$$35$a9fD (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA))) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= (as vlift_$35$$35$a9fC Int) (VMonad.vlift iMonad_$35$$35$a9fD)) GHC.Types.True (and (=> (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.QED) false) (=> (not (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.QED)) true) (= VV$35$$35$F$35$$35$257 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ Int) lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9) Language.Haskell.Liquid.ProofCombinators.QED))) (= (as permute_$35$$35$a9fB Int) (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA)) (and (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) true) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) VNat.Zero) (= lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5 (as VList.VNil (VList.VList Int))) (= lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5 (as VList.VNil (VList.VList Int)))) (and (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (ite (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (apply$35$$35$36 (VMonad.vlift (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (as VList.VNil (VList.VList Int))) (apply$35$$35$0 (apply$35$$35$0 (VMonad.vbind (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.split Int) iMonadPlus$35$$35$a9fA) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) (smt_lambda$35$$35$0 lam_arg$35$$35$3$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.vmapM2 Int) (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (smt_lambda$35$$35$36 lam_arg$35$$35$2$35$$35$36 (smt_lambda$35$$35$40 lam_arg$35$$35$1$35$$35$36 (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) lam_arg$35$$35$2$35$$35$36) (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) (apply$35$$35$4 (as VList.vsingleton Int) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) lam_arg$35$$35$1$35$$35$36))))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lam_arg$35$$35$3$35$$35$0))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lam_arg$35$$35$3$35$$35$0))))))) (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (apply$35$$35$36 (as permute_$35$$35$a9fB Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (apply$35$$35$36 (as permute_$35$$35$a9fB Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) (and (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) true) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) VNat.Zero) (= lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7 (as VList.VNil (VList.VList Int))) (= lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7 (as VList.VNil (VList.VList Int)))) (and (= lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7)) (= lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7))) (and (= lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) (= lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8) (= lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8)) (= lq_anf$36$$35$$35$7205759403792830561$35$$35$d9C9 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6) lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8))) (not GHC.Types.False)))
(push 1)
(assert (not (= (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (as VList.VNil (VList.VList Int))) (apply$35$$35$36 (VMonad.vlift (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (as VList.VNil (VList.VList Int))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (or  (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 (VMonad.VMonad Int)) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 Int) (lq_tmp$36$x$35$$35$1510 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 (VOrdered.VOrdered Int)) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 Int) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 Int) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 Int) (lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 (VMonadPlus.VMonadPlus Int))) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_tmp$36$x$35$$35$1510 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)) (exists ((VV$35$$35$F$35$$35$573 Int)) (and (and (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$573) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 (VMonad.VMonad Int)) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 Int) (lq_tmp$36$x$35$$35$1510 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 (VOrdered.VOrdered Int)) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 Int) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 Int) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 Int) (lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 (VMonadPlus.VMonadPlus Int))) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_tmp$36$x$35$$35$1510 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)) (exists ((VV$35$$35$F$35$$35$580 Int)) (and (and (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) (VMonadPlus.iMonad (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$54 (as SlowSortList.permute Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$0 (apply$35$$35$54 (as VMonadPlus.guardBy Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (apply$35$$35$72 (as SlowSortList.isSorted Int) (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)))) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$580) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE))))))) (or  (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 Int) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 (VOrdered.VOrdered Int)) (lq_tmp$36$x$35$$35$1686 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 Int) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 (VMonad.VMonad Int)) (lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 (VMonadPlus.VMonadPlus Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 Int)) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 iOrdered$35$$35$a9fF) (= lq_tmp$36$x$35$$35$1686 lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 permute_$35$$35$a9fS) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 slowsort_$35$$35$a9fX) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 iMonad_$35$$35$a9fQ) (= lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 ds_d9Bf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 iMonadPlus$35$$35$a9fE) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 p$35$$35$a9fG)) (exists ((VV$35$$35$F$35$$35$539 Int)) (and (and (or  (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 (VMonad.VMonad Int)) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 (VOrdered.VOrdered Int)) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 Int) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 Int) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 Int) (lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 (VMonadPlus.VMonadPlus Int))) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$539) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)) (exists ((VV$35$$35$F$35$$35$573 Int)) (and (and (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$573) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 (VMonad.VMonad Int)) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 (VOrdered.VOrdered Int)) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 Int) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 Int) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 Int) (lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 (VMonadPlus.VMonadPlus Int))) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$539) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)) (exists ((VV$35$$35$F$35$$35$580 Int)) (and (and (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) (VMonadPlus.iMonad (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$54 (as SlowSortList.permute Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$0 (apply$35$$35$54 (as VMonadPlus.guardBy Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (apply$35$$35$72 (as SlowSortList.isSorted Int) (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)))) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$580) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE))))))) (and (= VV$35$$35$F$35$$35$539 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= VV$35$$35$F$35$$35$539 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= VV$35$$35$F$35$$35$539 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (= VV$35$$35$F$35$$35$539 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (= VV$35$$35$F$35$$35$539 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu))) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 iOrdered$35$$35$a9fF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 permute_$35$$35$a9fS) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 slowsort_$35$$35$a9fX) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 iMonad_$35$$35$a9fQ) (= lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 VV$35$$35$F$35$$35$539) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 ds_d9Bf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 iMonadPlus$35$$35$a9fE) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 p$35$$35$a9fG)))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 Int) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 (VOrdered.VOrdered Int)) (lq_tmp$36$x$35$$35$1686 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 Int) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 (VMonad.VMonad Int)) (lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 (VMonadPlus.VMonadPlus Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 Int)) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 iOrdered$35$$35$a9fF) (= lq_tmp$36$x$35$$35$1686 lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 permute_$35$$35$a9fS) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 slowsort_$35$$35$a9fX) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 iMonad_$35$$35$a9fQ) (= lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 ds_d9Bf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 iMonadPlus$35$$35$a9fE) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 p$35$$35$a9fG)) (exists ((VV$35$$35$F$35$$35$533 Int)) (and (and (= VV$35$$35$F$35$$35$533 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= VV$35$$35$F$35$$35$533 (apply$35$$35$0 (apply$35$$35$0 (as vbind_$35$$35$a9fK Int) (apply$35$$35$36 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw)) (= VV$35$$35$F$35$$35$533 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= VV$35$$35$F$35$$35$533 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= VV$35$$35$F$35$$35$533 lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1682 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1682 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1682 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1682 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1682 iOrdered$35$$35$a9fF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1682 permute_$35$$35$a9fS) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1682 slowsort_$35$$35$a9fX) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1682 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1682 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1682 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1682 iMonad_$35$$35$a9fQ) (= lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 VV$35$$35$F$35$$35$533) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1682 ds_d9Bf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu$35$$35$k_$35$$35$1682 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1682 iMonadPlus$35$$35$a9fE) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1682 p$35$$35$a9fG)))))))) (and (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF))) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (and (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs))) (and (= (is-VNat.Zero VNat.Zero) true) (= (is-VNat.Suc VNat.Zero) false)) (and (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF))) (and (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt))) (and (= slowsort_$35$$35$a9fX (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (= slowsort_$35$$35$a9fX (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (and (= lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv (as permute_$35$$35$a9fS Int))) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) GHC.Types.True (and (= isSorted_$35$$35$a9fW (apply$35$$35$72 (as SlowSortList.isSorted Int) iOrdered$35$$35$a9fF)) (= isSorted_$35$$35$a9fW (apply$35$$35$72 (as SlowSortList.isSorted Int) iOrdered$35$$35$a9fF))) (and (= lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)) (= lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW))) (and (= VV$35$$35$F$35$$35$497 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$62$$61$$35$$35$a9fL Int) lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB) lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC)) (= VV$35$$35$F$35$$35$497 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$62$$61$$35$$35$a9fL Int) lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB) lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC)) (= VV$35$$35$F$35$$35$497 lq_anf$36$$35$$35$7205759403792830529$35$$35$d9BD)) (= (as guardBy_$35$$35$a9fU Int) (apply$35$$35$54 (as VMonadPlus.guardBy Int) iMonadPlus$35$$35$a9fE)) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (= (as permute_$35$$35$a9fS Int) (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (and (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$0 (apply$35$$35$0 (as vbind_$35$$35$a9fK Int) (apply$35$$35$36 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw)) (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx))) (and (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE))) (and (= lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By) (= lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By)) (= lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By))) (= (as kleisli_$35$$35$a9fO Int) (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ)) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (and (= (as fix$36$$62$$61$$62$$35$$35$a9fN Int) (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ)) (= (as fix$36$$62$$61$$62$$35$$35$a9fN Int) (as kleisli_$35$$35$a9fO Int))) (and (= lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE) lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA)) (= lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB (ite (is-VList.VNil lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA) (apply$35$$35$36 (VMonad.vlift (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (as VList.VNil (VList.VList Int))) (apply$35$$35$0 (apply$35$$35$0 (VMonad.vbind (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.split Int) iMonadPlus$35$$35$a9fE) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA))) (smt_lambda$35$$35$0 lam_arg$35$$35$3$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.vmapM2 Int) (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (smt_lambda$35$$35$36 lam_arg$35$$35$2$35$$35$36 (smt_lambda$35$$35$40 lam_arg$35$$35$1$35$$35$36 (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) lam_arg$35$$35$2$35$$35$36) (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) (apply$35$$35$4 (as VList.vsingleton Int) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA))) lam_arg$35$$35$1$35$$35$36))))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lam_arg$35$$35$3$35$$35$0))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lam_arg$35$$35$3$35$$35$0))))))) (= lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB (apply$35$$35$36 (as permute_$35$$35$a9fS Int) lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA)) (= lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB (apply$35$$35$36 (as permute_$35$$35$a9fS Int) lq_anf$36$$35$$35$7205759403792830526$35$$35$d9BA))) (= (as vbind_$35$$35$a9fK Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) (and (= lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)) (= lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW))) (not GHC.Types.False) (and (= (as fix$36$$62$$62$$61$$35$$35$a9fL Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) (= (as fix$36$$62$$62$$61$$35$$35$a9fL Int) (as vbind_$35$$35$a9fK Int))) (and (= lq_anf$36$$35$$35$7205759403792830529$35$$35$d9BD (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$62$$61$$35$$35$a9fL Int) lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB) lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC)) (= lq_anf$36$$35$$35$7205759403792830529$35$$35$d9BD (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$62$$61$$35$$35$a9fL Int) lq_anf$36$$35$$35$7205759403792830527$35$$35$d9BB) lq_anf$36$$35$$35$7205759403792830528$35$$35$d9BC))) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (and (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) (VMonadPlus.iMonad (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$54 (as SlowSortList.permute Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$0 (apply$35$$35$54 (as VMonadPlus.guardBy Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (apply$35$$35$72 (as SlowSortList.isSorted Int) (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)))) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo))) (and (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (as permute_$35$$35$a9fS Int))) (and (= lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)) (= lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$497 lq_anf$36$$35$$35$7205759403792830525$35$$35$d9Bz)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (or  (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 (VMonad.VMonad Int)) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 Int) (lq_tmp$36$x$35$$35$1510 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 (VOrdered.VOrdered Int)) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 Int) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 Int) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 Int) (lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 (VMonadPlus.VMonadPlus Int))) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_tmp$36$x$35$$35$1510 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)) (exists ((VV$35$$35$F$35$$35$573 Int)) (and (and (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$573 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$573) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 (VMonad.VMonad Int)) (lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 Int) (lq_tmp$36$x$35$$35$1510 Int) (lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 Int) (lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 Int) (lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 Int) (lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 (VOrdered.VOrdered Int)) (lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 Int) (lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 Int) (lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 Int) (lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 (VList.VList Int)) (lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 Int) (lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 Int) (lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 Int) (lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 (VMonadPlus.VMonadPlus Int))) (and (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_tmp$36$x$35$$35$1510 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE)) (exists ((VV$35$$35$F$35$$35$580 Int)) (and (and (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) (VMonadPlus.iMonad (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$54 (as SlowSortList.permute Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$0 (apply$35$$35$54 (as VMonadPlus.guardBy Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (apply$35$$35$72 (as SlowSortList.isSorted Int) (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)))) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= VV$35$$35$F$35$$35$580 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp)) (and (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) (= lq_karg$36$iMonad_$35$$35$a9fQ$35$$35$k_$35$$35$1506 iMonad_$35$$35$a9fQ) (= lq_karg$36$$62$$61$$62$$35$$35$a9fN$35$$35$k_$35$$35$1506 fix$36$$62$$61$$62$$35$$35$a9fN) (= lq_karg$36$xs$35$$35$a9fH$35$$35$k_$35$$35$1506 xs$35$$35$a9fH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_karg$36$$62$$62$$61$$35$$35$a9fL$35$$35$k_$35$$35$1506 fix$36$$62$$62$$61$$35$$35$a9fL) (= lq_karg$36$slowsort_$35$$35$a9fX$35$$35$k_$35$$35$1506 slowsort_$35$$35$a9fX) (= lq_karg$36$permute_$35$$35$a9fS$35$$35$k_$35$$35$1506 permute_$35$$35$a9fS) (= lq_karg$36$iOrdered$35$$35$a9fF$35$$35$k_$35$$35$1506 iOrdered$35$$35$a9fF) (= lq_karg$36$kleisli_$35$$35$a9fO$35$$35$k_$35$$35$1506 kleisli_$35$$35$a9fO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) (= lq_karg$36$vbind_$35$$35$a9fK$35$$35$k_$35$$35$1506 vbind_$35$$35$a9fK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_karg$36$guardBy_$35$$35$a9fU$35$$35$k_$35$$35$1506 guardBy_$35$$35$a9fU) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) (= lq_karg$36$isSorted_$35$$35$a9fW$35$$35$k_$35$$35$1506 isSorted_$35$$35$a9fW) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs$35$$35$k_$35$$35$1506 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (= lq_karg$36$p$35$$35$a9fG$35$$35$k_$35$$35$1506 p$35$$35$a9fG) (= lq_karg$36$VV$35$$35$1505$35$$35$k_$35$$35$1506 VV$35$$35$F$35$$35$580) (= lq_karg$36$ds_d9Bf$35$$35$k_$35$$35$1506 ds_d9Bf) (= lq_karg$36$iMonadPlus$35$$35$a9fE$35$$35$k_$35$$35$1506 iMonadPlus$35$$35$a9fE))))))) (and (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF))) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (and (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs))) (and (= (is-VNat.Zero VNat.Zero) true) (= (is-VNat.Suc VNat.Zero) false)) (and (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF))) (and (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt) (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (= lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ Int) lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp) lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt))) (and (= slowsort_$35$$35$a9fX (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (= slowsort_$35$$35$a9fX (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (and (= lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv (as permute_$35$$35$a9fS Int))) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) GHC.Types.True (and (= isSorted_$35$$35$a9fW (apply$35$$35$72 (as SlowSortList.isSorted Int) iOrdered$35$$35$a9fF)) (= isSorted_$35$$35$a9fW (apply$35$$35$72 (as SlowSortList.isSorted Int) iOrdered$35$$35$a9fF))) (and (= lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)) (= lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW))) (= (as guardBy_$35$$35$a9fU Int) (apply$35$$35$54 (as VMonadPlus.guardBy Int) iMonadPlus$35$$35$a9fE)) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (and (= VV$35$$35$F$35$$35$532 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= VV$35$$35$F$35$$35$532 (apply$35$$35$0 (apply$35$$35$0 (as vbind_$35$$35$a9fK Int) (apply$35$$35$36 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw)) (= VV$35$$35$F$35$$35$532 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= VV$35$$35$F$35$$35$532 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= VV$35$$35$F$35$$35$532 lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By)) (= (as permute_$35$$35$a9fS Int) (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (and (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$0 (apply$35$$35$0 (as vbind_$35$$35$a9fK Int) (apply$35$$35$36 lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw)) (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx)) (= lq_anf$36$$35$$35$7205759403792830524$35$$35$d9By (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (as vbind_$35$$35$a9fK Int)) lq_anf$36$$35$$35$7205759403792830521$35$$35$d9Bv) lq_anf$36$$35$$35$7205759403792830522$35$$35$d9Bw) lq_anf$36$$35$$35$7205759403792830523$35$$35$d9Bx))) (and (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE))) (= (as kleisli_$35$$35$a9fO Int) (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ)) (and (= (as fix$36$$62$$61$$62$$35$$35$a9fN Int) (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ)) (= (as fix$36$$62$$61$$62$$35$$35$a9fN Int) (as kleisli_$35$$35$a9fO Int))) (= (as vbind_$35$$35$a9fK Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) (not GHC.Types.False) (and (= (as fix$36$$62$$62$$61$$35$$35$a9fL Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) (= (as fix$36$$62$$62$$61$$35$$35$a9fL Int) (as vbind_$35$$35$a9fK Int))) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (and (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) (VMonadPlus.iMonad (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$54 (as SlowSortList.permute Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$0 (apply$35$$35$54 (as VMonadPlus.guardBy Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (apply$35$$35$72 (as SlowSortList.isSorted Int) (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)))) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo))) (and (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (as permute_$35$$35$a9fS Int))) (and (= lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)) (= lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$532 lq_anf$36$$35$$35$7205759403792830520$35$$35$d9Bu)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= (is-VNat.Zero VNat.Zero) true) (= (is-VNat.Suc VNat.Zero) false)) (and (= iMonad_$35$$35$a9fD (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (= iMonad_$35$$35$a9fD (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (= iMonad_$35$$35$a9fD (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA))) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= (as vlift_$35$$35$a9fC Int) (VMonad.vlift iMonad_$35$$35$a9fD)) GHC.Types.True (= (as permute_$35$$35$a9fB Int) (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA)) (and (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) true) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) VNat.Zero) (= lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5 (as VList.VNil (VList.VList Int))) (= lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5 (as VList.VNil (VList.VList Int)))) (and (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (ite (is-VList.VNil lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5) (apply$35$$35$36 (VMonad.vlift (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (as VList.VNil (VList.VList Int))) (apply$35$$35$0 (apply$35$$35$0 (VMonad.vbind (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.split Int) iMonadPlus$35$$35$a9fA) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) (smt_lambda$35$$35$0 lam_arg$35$$35$3$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.vmapM2 Int) (VMonadPlus.iMonad iMonadPlus$35$$35$a9fA)) (smt_lambda$35$$35$36 lam_arg$35$$35$2$35$$35$36 (smt_lambda$35$$35$40 lam_arg$35$$35$1$35$$35$36 (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) lam_arg$35$$35$2$35$$35$36) (apply$35$$35$40 (apply$35$$35$36 (as VList.vappend Int) (apply$35$$35$4 (as VList.vsingleton Int) (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) lam_arg$35$$35$1$35$$35$36))))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lam_arg$35$$35$3$35$$35$0))) (apply$35$$35$36 (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fA) (apply$35$$35$4 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lam_arg$35$$35$3$35$$35$0))))))) (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (apply$35$$35$36 (as permute_$35$$35$a9fB Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5)) (= lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6 (apply$35$$35$36 (as permute_$35$$35$a9fB Int) lq_anf$36$$35$$35$7205759403792830557$35$$35$d9C5))) (and (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) true) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) false) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) true) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7) VNat.Zero) (= lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7 (as VList.VNil (VList.VList Int))) (= lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7 (as VList.VNil (VList.VList Int)))) (and (= lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7)) (= lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7))) (not GHC.Types.False) (and (= VV$35$$35$F$35$$35$268 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7)) (= VV$35$$35$F$35$$35$268 (apply$35$$35$36 (as vlift_$35$$35$a9fC Int) lq_anf$36$$35$$35$7205759403792830559$35$$35$d9C7)) (= VV$35$$35$F$35$$35$268 lq_anf$36$$35$$35$7205759403792830560$35$$35$d9C8))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$268 lq_anf$36$$35$$35$7205759403792830558$35$$35$d9C6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF))) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (and (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs))) (and (= (is-VNat.Zero VNat.Zero) true) (= (is-VNat.Suc VNat.Zero) false)) (and (= (apply$35$$35$8 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) true) (= (apply$35$$35$8 (as snd Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iOrdered$35$$35$a9fF) (= (apply$35$$35$6 (as fst Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) iMonadPlus$35$$35$a9fE) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF)) (= lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn (apply$35$$35$72 (apply$35$$35$54 (as GHC.Tuple.$40$$44$$41$ Int) iMonadPlus$35$$35$a9fE) iOrdered$35$$35$a9fF))) (and (= slowsort_$35$$35$a9fX (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (= slowsort_$35$$35$a9fX (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) GHC.Types.True (and (= isSorted_$35$$35$a9fW (apply$35$$35$72 (as SlowSortList.isSorted Int) iOrdered$35$$35$a9fF)) (= isSorted_$35$$35$a9fW (apply$35$$35$72 (as SlowSortList.isSorted Int) iOrdered$35$$35$a9fF))) (= (as guardBy_$35$$35$a9fU Int) (apply$35$$35$54 (as VMonadPlus.guardBy Int) iMonadPlus$35$$35$a9fE)) (= (as permute_$35$$35$a9fS Int) (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (and (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE)) (= iMonad_$35$$35$a9fQ (VMonadPlus.iMonad iMonadPlus$35$$35$a9fE))) (= (as kleisli_$35$$35$a9fO Int) (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ)) (and (= (as fix$36$$62$$61$$62$$35$$35$a9fN Int) (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ)) (= (as fix$36$$62$$61$$62$$35$$35$a9fN Int) (as kleisli_$35$$35$a9fO Int))) (= (as vbind_$35$$35$a9fK Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) (not GHC.Types.False) (and (= (as fix$36$$62$$62$$61$$35$$35$a9fL Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) (= (as fix$36$$62$$62$$61$$35$$35$a9fL Int) (as vbind_$35$$35$a9fK Int))) (and (= VV$35$$35$F$35$$35$572 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) iMonad_$35$$35$a9fQ) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$572 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as VMonad.raw_kleisli Int) (VMonad.vbind iMonad_$35$$35$a9fQ)) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$572 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$572 (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (as fix$36$$62$$61$$62$$35$$35$a9fN Int) lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq) lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br) lq_anf$36$$35$$35$7205759403792830518$35$$35$d9Bs)) (= VV$35$$35$F$35$$35$572 lq_anf$36$$35$$35$7205759403792830519$35$$35$d9Bt)) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (and (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$2 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) xs$35$$35$a9fH) (= (VList.VCons$35$$35$lqdc$35$$35$$36$select$35$$35$VList.VCons$35$$35$1 lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) p$35$$35$a9fG) (= (is-VList.VCons lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) true) (= (is-VList.VNil lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) false) (= (apply$35$$35$43 (as VList.vlength Int) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo) (VNat.Suc (apply$35$$35$43 (as VList.vlength Int) xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH)) (= lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo ((as VList.VCons (VList.VList Int)) p$35$$35$a9fG xs$35$$35$a9fH))) (= lq_anf$36$$35$$35$7205759403792830512$35$$35$d9Bm ds_d9Bf) (and (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 (apply$35$$35$0 (as SlowSortList.slowsort Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$45 (as VMonad.kleisli Int) (VMonadPlus.iMonad (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$54 (as SlowSortList.permute Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn))) (apply$35$$35$0 (apply$35$$35$54 (as VMonadPlus.guardBy Int) (apply$35$$35$6 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)) (apply$35$$35$72 (as SlowSortList.isSorted Int) (apply$35$$35$8 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792830513$35$$35$d9Bn)))) lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo)) (= lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp (apply$35$$35$36 slowsort_$35$$35$a9fX lq_anf$36$$35$$35$7205759403792830514$35$$35$d9Bo))) (and (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (apply$35$$35$54 (as SlowSortList.permute Int) iMonadPlus$35$$35$a9fE)) (= lq_anf$36$$35$$35$7205759403792830516$35$$35$d9Bq (as permute_$35$$35$a9fS Int))) (and (= lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)) (= lq_anf$36$$35$$35$7205759403792830517$35$$35$d9Br (apply$35$$35$0 (as guardBy_$35$$35$a9fU Int) isSorted_$35$$35$a9fW)))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$572 lq_anf$36$$35$$35$7205759403792830515$35$$35$d9Bp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
