1:1-1:1::RunTimeCheck.$trModule :: "GHC.Types.Module"
18:1-18:9::RunTimeCheck.critical :: "forall a . {VV : a | slowSpec VV} -> a"
18:10-18:11::x :: "{VV : a | slowSpec VV}"
22:1-22:4::RunTimeCheck.bar :: "forall a .\n{VV : (PropositionalEquality.EqT (a -> GHC.Types.Bool)) | eqT fastSpec slowSpec} -> a -> (GHC.Maybe.Maybe a)"
22:5-22:7::pf :: "(PropositionalEquality.EqT a -> GHC.Types.Bool)"
22:8-22:9::x :: "a"
22:15-22:25::lq_anf$##7205759403792807676 :: "{v : GHC.Types.Bool | v == fastSpec x\n                      && v == true}"
22:24-22:25::x :: "{VV : a | VV == x}"
22:28-22:72::lq_anf$##7205759403792807680 :: "()"
22:34-22:46::lq_anf$##7205759403792807677 :: "{v : GHC.Types.Bool | v == fastSpec x\n                      && v == true}"
22:44-22:45::x :: "{VV : a | VV == x}"
22:47-22:59::lq_anf$##7205759403792807678 :: "{v : GHC.Types.Bool | v == slowSpec x\n                      && v == true}"
22:57-22:58::x :: "{VV : a | VV == x}"
22:60-22:72::lq_anf$##7205759403792807679 :: "{v : (PropositionalEquality.EqT GHC.Types.Bool) | eqT (fastSpec x) (slowSpec x)\n                                                  && v == unExt x pf}"
22:67-22:68::x :: "{VV : a | VV == x}"
22:69-22:71::pf :: "{v : (PropositionalEquality.EqT a -> GHC.Types.Bool) | v == pf}"
23:18-23:35::GHC.Maybe.Just :: "{VV : forall a .\n      x1:a -> {v : (GHC.Maybe.Maybe a) | (isJust v <=> true)\n                                         && fromJust v == x1\n                                         && v == Just x1} | VV == Just}"
23:23-23:35::lq_anf$##7205759403792807683 :: "{VV : a | VV == critical x}"
23:33-23:34::x :: "{VV : a | VV == x}"
24:18-24:25::_ :: "{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | (isJust v <=> false)\n                                 && v == Nothing} | VV == Nothing}"
28:1-28:6::RunTimeCheck.unExt :: "forall a .\nx1:a -> {VV : (PropositionalEquality.EqT (a -> GHC.Types.Bool)) | eqT fastSpec slowSpec} -> {VV : (PropositionalEquality.EqT GHC.Types.Bool) | eqT (fastSpec x1) (slowSpec x1)}"
28:7-28:8::x :: "a"
28:9-28:10::p :: "{VV : (PropositionalEquality.EqT a -> GHC.Types.Bool) | eqT fastSpec slowSpec}"
28:13-28:48::lq_anf$##7205759403792807667 :: "{v : (PropositionalEquality.EqT GHC.Types.Bool) | lqdc##$select v == p}"
28:19-28:27::_ :: "{VV : forall a .\n      x1:a -> {v : GHC.Types.Bool | v == fastSpec x1\n                                    && v == true} | VV == fastSpec}"
28:28-28:36::_ :: "{VV : forall a .\n      x1:a -> {v : GHC.Types.Bool | v == slowSpec x1\n                                    && v == true} | VV == slowSpec}"
28:37-28:38::p :: "{v : (PropositionalEquality.EqT a -> GHC.Types.Bool) | eqT fastSpec slowSpec\n                                                       && v == p}"
28:39-28:48::lq_anf$##7205759403792807666 :: "x1:(a -> GHC.Types.Bool) -> {v : GHC.Types.Bool | v == flip' x x1\n                                                  && v == x1 x}"
28:46-28:47::x :: "{VV : a | VV == x}"
28:51-28:67::lq_anf$##7205759403792807669 :: "GHC.Types.Bool"
28:57-28:58::x :: "{VV : a | VV == x}"
28:59-28:67::_ :: "{VV : forall a .\n      x1:a -> {v : GHC.Types.Bool | v == fastSpec x1\n                                    && v == true} | VV == fastSpec}"
28:70-28:86::lq_anf$##7205759403792807672 :: "GHC.Types.Bool"
28:76-28:77::x :: "{VV : a | VV == x}"
28:78-28:86::_ :: "{VV : forall a .\n      x1:a -> {v : GHC.Types.Bool | v == slowSpec x1\n                                    && v == true} | VV == slowSpec}"
34:1-34:6::RunTimeCheck.flip' :: "forall a b .\nx1:a -> x2:(a -> b) -> {VV : b | VV == flip' x1 x2\n                                 && VV == x2 x1}"
34:7-34:8::x :: "a"
34:9-34:10::f :: "a -> b"
34:15-34:16::x :: "{VV : a | VV == x}"
38:1-38:9::RunTimeCheck.fastSpec :: "forall a .\nx1:a -> {VV : GHC.Types.Bool | VV == fastSpec x1\n                               && VV == true}"
42:1-42:9::RunTimeCheck.slowSpec :: "forall a .\nx1:a -> {VV : GHC.Types.Bool | VV == slowSpec x1\n                               && VV == true}"