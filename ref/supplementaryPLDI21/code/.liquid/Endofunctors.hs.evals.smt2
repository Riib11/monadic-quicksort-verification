(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1636 () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1159 () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_tmp$36$x$35$$35$1992 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824468$35$$35$d81S$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1794 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1207 () Int)
(declare-fun VV$35$$35$F$35$$35$112 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824456$35$$35$d81G$35$$35$k_$35$$35$1316 () Int)
(declare-fun VV$35$$35$F$35$$35$82 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1636 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1577 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824486$35$$35$d82a () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_tmp$36$x$35$$35$1381 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824473$35$$35$d81X () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1794 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1159 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_tmp$36$x$35$$35$784 () Int)
(declare-fun bbEq () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824458$35$$35$d81I$35$$35$k_$35$$35$1316 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqSMT$35$$35$3 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1922 () Int)
(declare-fun papp5 () Int)
(declare-fun lq_tmp$36$x$35$$35$1376 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.Admit () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824469$35$$35$d81T$35$$35$k_$35$$35$1636 () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1789 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1351 () Int)
(declare-fun PEqProperties.C$58$SMTEq () Int)
(declare-fun VV$35$$35$F$35$$35$57 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1207 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun VV$35$$35$F$35$$35$100 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1108 () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1794 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1336 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.withProof () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824484$35$$35$d828 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1794 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824485$35$$35$d829 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_tmp$36$x$35$$35$1067 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1159 () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1207 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1229 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun VV$35$$35$F$35$$35$67 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1316 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1922 () Int)
(declare-fun VV$35$$35$F$35$$35$119 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1671 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1826 () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_tmp$36$x$35$$35$1706 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1316 () Int)
(declare-fun PEqProperties.aEqToSMT () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1503 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1696 () Int)
(declare-fun VV$35$$35$F$35$$35$122 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824476$35$$35$d820 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1953 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824482$35$$35$d826$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_tmp$36$x$35$$35$782 () Int)
(declare-fun lq_tmp$36$x$35$$35$1334 () Int)
(declare-fun lq_karg$36$VV$35$$35$1107$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824483$35$$35$d827$35$$35$k_$35$$35$1933 () Int)
(declare-fun Endofunctors.mempty () Int)
(declare-fun lq_karg$36$VV$35$$35$1127$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1483 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1483 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824469$35$$35$d81T$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824457$35$$35$d81H () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824468$35$$35$d81S$35$$35$k_$35$$35$1636 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824482$35$$35$d826$35$$35$k_$35$$35$1933 () Int)
(declare-fun g$35$$35$a7qB () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824484$35$$35$d828$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1647 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824474$35$$35$d81Y () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824483$35$$35$d827$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824455$35$$35$d81F$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1968 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824485$35$$35$d829$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1277 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824477$35$$35$d821 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$VV$35$$35$1607$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$VV$35$$35$1967$35$$35$k_$35$$35$1968 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1045 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun PEqProperties.toSMT () Int)
(declare-fun lq_karg$36$VV$35$$35$1677$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824471$35$$35$d81V$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1305 () Int)
(declare-fun VV$35$$35$F$35$$35$48 () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1108 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun VV$35$$35$F$35$$35$114 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1854 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824456$35$$35$d81G$35$$35$k_$35$$35$1277 () Int)
(declare-fun PEqProperties.C$58$Symmetry () Int)
(declare-fun VV$35$$35$F$35$$35$84 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1229 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$VV$35$$35$973$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_tmp$36$x$35$$35$1387 () Int)
(declare-fun lq_tmp$36$x$35$$35$1380 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1277 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824470$35$$35$d81U$35$$35$k_$35$$35$1636 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q () Int)
(declare-fun lq_tmp$36$x$35$$35$785 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$956 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$60$$61$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqSMT$35$$35$2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1045 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun lq_tmp$36$x$35$$35$1377 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1953 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824473$35$$35$d81X$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824472$35$$35$d81W$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1671 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824475$35$$35$d81Z$35$$35$k_$35$$35$1678 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1671 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1305 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1175 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1968 () Int)
(declare-fun lq_tmp$36$x$35$$35$1993 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun a$35$$35$a7qC () Int)
(declare-fun PropositionalEquality.symmP () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824488$35$$35$d82c$35$$35$k_$35$$35$1922 () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$974 () Int)
(declare-fun VV$35$$35$F$35$$35$113 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1336 () Int)
(declare-fun VV$35$$35$F$35$$35$60 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1667 () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1108 () Int)
(declare-fun fix$36$$36$dReflexivity_a7sQ () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$968 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1794 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824471$35$$35$d81V () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824488$35$$35$d82c () Int)
(declare-fun lq_tmp$36$x$35$$35$1868 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824475$35$$35$d81Z$35$$35$k_$35$$35$1682 () Int)
(declare-fun autolen () Int)
(declare-fun VV$35$$35$F$35$$35$125 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1667 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824485$35$$35$d829$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1108 () Int)
(declare-fun VV$35$$35$F$35$$35$107 () Int)
(declare-fun VV$35$$35$F$35$$35$97 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1128 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1229 () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun VV$35$$35$F$35$$35$79 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1108 () Int)
(declare-fun head () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1229 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1483 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1229 () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824484$35$$35$d828$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1257 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqCtx$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1181 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1457 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1457 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824475$35$$35$d81Z$35$$35$k_$35$$35$1667 () Int)
(declare-fun a$35$$35$a7qE () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1207 () Int)
(declare-fun VV$35$$35$F$35$$35$115 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1534 () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$85 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824487$35$$35$d82b$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1554 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824474$35$$35$d81Y$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1789 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1386 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_tmp$36$x$35$$35$783 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_tmp$36$x$35$$35$1498 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1477 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1589 () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1477 () Int)
(declare-fun papp2 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1477 () Int)
(declare-fun lq_tmp$36$x$35$$35$1252 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824455$35$$35$d81F$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1002 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1854 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824487$35$$35$d82b () Int)
(declare-fun PEqProperties.refl () Int)
(declare-fun VV$35$$35$F$35$$35$77 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_karg$36$VV$35$$35$935$35$$35$k_$35$$35$936 () Int)
(declare-fun PEqProperties.cong () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqCtx$35$$35$4 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_tmp$36$x$35$$35$1176 () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1990 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1207 () Int)
(declare-fun Endofunctors.monoid_leftIdentity () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824459$35$$35$d81J$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_tmp$36$x$35$$35$1549 () Int)
(declare-fun VV$35$$35$F$35$$35$110 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1159 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$63$ () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824460$35$$35$d81K$35$$35$k_$35$$35$1351 () Int)
(declare-fun fromJust () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824455$35$$35$d81F$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_tmp$36$x$35$$35$1383 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_karg$36$VV$35$$35$955$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824484$35$$35$d828$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_tmp$36$x$35$$35$1989 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824485$35$$35$d829$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1472 () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_tmp$36$x$35$$35$786 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1316 () Int)
(declare-fun VV$35$$35$F$35$$35$109 () Int)
(declare-fun lq_tmp$36$x$35$$35$1945 () Int)
(declare-fun lq_tmp$36$x$35$$35$1374 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqSMT$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1229 () Int)
(declare-fun VV$35$$35$F$35$$35$99 () Int)
(declare-fun PropositionalEquality.EqFun () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$936 () Int)
(declare-fun PEqProperties.C$58$Transitivity () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1472 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1347 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D$35$$35$k_$35$$35$1257 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824489$35$$35$d82d$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1351 () Int)
(declare-fun x$35$$35$a7qF () Int)
(declare-fun lq_tmp$36$x$35$$35$1869 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1181 () Int)
(declare-fun VV$35$$35$F$35$$35$124 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824460$35$$35$d81K$35$$35$k_$35$$35$1347 () Int)
(declare-fun VV$35$$35$F$35$$35$106 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1503 () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1457 () Int)
(declare-fun VV$35$$35$F$35$$35$96 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1874 () Int)
(declare-fun PEqProperties.trans () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun VV$35$$35$F$35$$35$78 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1774 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824486$35$$35$d82a$35$$35$k_$35$$35$1922 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqFun$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1257 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R$35$$35$k_$35$$35$1608 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1002 () Int)
(declare-fun VV$35$$35$F$35$$35$61 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1257 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1503 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1503 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun PEqProperties.C$58$Reflexivity () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_tmp$36$x$35$$35$969 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1589 () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1554 () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824471$35$$35$d81V$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_tmp$36$x$35$$35$1103 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_tmp$36$x$35$$35$1705 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1636 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R$35$$35$k_$35$$35$1636 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_karg$36$VV$35$$35$1588$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$VV$35$$35$1206$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$VV$35$$35$1646$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$VV$35$$35$1788$35$$35$k_$35$$35$1789 () Int)
(declare-fun lq_tmp$36$x$35$$35$1389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$VV$35$$35$1932$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_tmp$36$x$35$$35$1497 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1647 () Int)
(declare-fun VV$35$$35$F$35$$35$121 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$VV$35$$35$1576$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1854 () Int)
(declare-fun VV$35$$35$F$35$$35$103 () Int)
(declare-fun lq_karg$36$VV$35$$35$1256$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824459$35$$35$d81J$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$VV$35$$35$1072$35$$35$k_$35$$35$1073 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C () Int)
(declare-fun lq_karg$36$VV$35$$35$1952$35$$35$k_$35$$35$1953 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$VV$35$$35$950$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E () Int)
(declare-fun lq_karg$36$VV$35$$35$1670$35$$35$k_$35$$35$1671 () Int)
(declare-fun lq_karg$36$VV$35$$35$1180$35$$35$k_$35$$35$1181 () Int)
(declare-fun fix$36$$36$dReflexivity_a7su () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824458$35$$35$d81I () Int)
(declare-fun lq_karg$36$VV$35$$35$1304$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$VV$35$$35$1502$35$$35$k_$35$$35$1503 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1340 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_karg$36$VV$35$$35$1346$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824456$35$$35$d81G () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_karg$36$VV$35$$35$1482$35$$35$k_$35$$35$1483 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$VV$35$$35$1956$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$VV$35$$35$1276$35$$35$k_$35$$35$1277 () Int)
(declare-fun PEqProperties.sym () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824475$35$$35$d81Z$35$$35$k_$35$$35$1671 () Int)
(declare-fun lq_tmp$36$x$35$$35$1659 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1789 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1951$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_karg$36$VV$35$$35$1350$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_karg$36$VV$35$$35$1666$35$$35$k_$35$$35$1667 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A () Int)
(declare-fun lq_tmp$36$x$35$$35$1039 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1277 () Int)
(declare-fun VV$35$$35$F$35$$35$64 () Int)
(declare-fun lq_karg$36$VV$35$$35$1456$35$$35$k_$35$$35$1457 () Int)
(declare-fun lq_karg$36$VV$35$$35$1158$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$VV$35$$35$1476$35$$35$k_$35$$35$1477 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1340 () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Int)
(declare-fun lq_karg$36$VV$35$$35$1044$35$$35$k_$35$$35$1045 () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Int)
(declare-fun PropositionalEquality.EqCtx () Int)
(declare-fun lq_tmp$36$x$35$$35$1390 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824457$35$$35$d81H$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824468$35$$35$d81S$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824455$35$$35$d81F$35$$35$k_$35$$35$1305 () Int)
(declare-fun a$35$$35$a7qz () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1305 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z () Int)
(declare-fun lq_tmp$36$x$35$$35$1548 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1316 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$62$$61$ () Int)
(declare-fun VV$35$$35$F$35$$35$111 () Int)
(declare-fun VV$35$$35$F$35$$35$81 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824460$35$$35$d81K$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_tmp$36$x$35$$35$1382 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1181 () Int)
(declare-fun is$36$PropositionalEquality.EqSMT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1933 () Int)
(declare-fun x$35$$35$a7qH () Int)
(declare-fun lq_tmp$36$x$35$$35$787 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824482$35$$35$d826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824468$35$$35$d81S$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$951 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun VV$35$$35$F$35$$35$108 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_tmp$36$x$35$$35$1375 () Int)
(declare-fun PropositionalEquality.$36$WEqCtx () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1665$35$$35$k_$35$$35$1671 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1671 () Int)
(declare-fun VV$35$$35$F$35$$35$98 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$951 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824481$35$$35$d825 () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1671 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1854 () Int)
(declare-fun VV$35$$35$F$35$$35$76 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_tmp$36$x$35$$35$1328 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1073 () Int)
(declare-fun y$35$$35$a7qI () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824483$35$$35$d827 () Int)
(declare-fun lq_tmp$36$x$35$$35$1991 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1073 () Int)
(declare-fun lit$36$propositional$45$equality$45$0.1.0.0$45$I3b76TrI2Jz4ErVGS6x2Zr () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824480$35$$35$d824 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1794 () Int)
(declare-fun isAdmit () Int)
(declare-fun z$35$$35$a7qJ () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824471$35$$35$d81V$35$$35$k_$35$$35$1636 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqFun$35$$35$2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1073 () Int)
(declare-fun is$36$PropositionalEquality.EqCtx () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824472$35$$35$d81W () Int)
(declare-fun PropositionalEquality.reflP () Int)
(declare-fun lq_karg$36$VV$35$$35$1843$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$VV$35$$35$1873$35$$35$k_$35$$35$1874 () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_tmp$36$x$35$$35$1224 () Int)
(declare-fun lq_tmp$36$x$35$$35$1040 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824470$35$$35$d81U () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824484$35$$35$d828$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1647 () Int)
(declare-fun VV$35$$35$F$35$$35$62 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824484$35$$35$d828$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1844 () Int)
(declare-fun PropositionalEquality.eqRTCtx () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_karg$36$VV$35$$35$1793$35$$35$k_$35$$35$1794 () Int)
(declare-fun lq_karg$36$VV$35$$35$1963$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1229 () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_karg$36$VV$35$$35$1853$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824470$35$$35$d81U$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1968 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1667 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1667 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_tmp$36$x$35$$35$1703 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1229 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824469$35$$35$d81T$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824482$35$$35$d826$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$VV$35$$35$1553$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824457$35$$35$d81H$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1128 () Int)
(declare-fun PropositionalEquality.deqFun () Int)
(declare-fun VV$35$$35$F$35$$35$127 () Int)
(declare-fun VV$35$$35$F$35$$35$105 () Int)
(declare-fun lq_karg$36$VV$35$$35$1893$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$VV$35$$35$1773$35$$35$k_$35$$35$1774 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1953 () Int)
(declare-fun fix$36$$36$dReflexivity_a7rZ () Int)
(declare-fun lq_tmp$36$x$35$$35$1378 () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1774 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R$35$$35$k_$35$$35$1577 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824485$35$$35$d829$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$VV$35$$35$1533$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1774 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824483$35$$35$d827$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1128 () Int)
(declare-fun VV$35$$35$F$35$$35$59 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824460$35$$35$d81K () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1953 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824468$35$$35$d81S$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1968 () Int)
(declare-fun PEqProperties.C$58$Congruence () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_tmp$36$x$35$$35$1223 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824486$35$$35$d82a$35$$35$k_$35$$35$1894 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O () Int)
(declare-fun a$35$$35$a7qK () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$65 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1316 () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1534 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1159 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun PropositionalEquality.transP () Int)
(declare-fun lq_tmp$36$x$35$$35$1102 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_tmp$36$x$35$$35$1704 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun PropositionalEquality.$36$WEqFun () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun prop () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824474$35$$35$d81Y$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824488$35$$35$d82c$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_tmp$36$x$35$$35$1982 () Int)
(declare-fun lq_tmp$36$x$35$$35$1388 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824468$35$$35$d81S () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824489$35$$35$d82d$35$$35$k_$35$$35$1953 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1305 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$120 () Int)
(declare-fun Endofunctors.monoid_rightIdentity () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824489$35$$35$d82d$35$$35$k_$35$$35$1968 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun VV$35$$35$F$35$$35$102 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1316 () Int)
(declare-fun PEqProperties.$61$$126$$61$ () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1073 () Int)
(declare-fun VV$35$$35$F$35$$35$92 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824464$35$$35$d81O$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1534 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$1372 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E$35$$35$k_$35$$35$1257 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_tmp$36$x$35$$35$1251 () Int)
(declare-fun lq_tmp$36$x$35$$35$997 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824470$35$$35$d81U$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1045 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1577 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1483 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824483$35$$35$d827$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1483 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1181 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1789 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824482$35$$35$d826$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824455$35$$35$d81F$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1794 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.impossible () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_tmp$36$x$35$$35$1068 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1789 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqCtx$35$$35$2 () Int)
(declare-fun PEqProperties.flip () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1181 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824472$35$$35$d81W$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824475$35$$35$d81Z () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1128 () Int)
(declare-fun VV$35$$35$F$35$$35$68 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$951 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1483 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$61$$33$ () Int)
(declare-fun VV$35$$35$F$35$$35$116 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824457$35$$35$d81H$35$$35$k_$35$$35$1305 () Int)
(declare-fun is$36$PropositionalEquality.EqFun () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824456$35$$35$d81G$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1045 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m () Int)
(declare-fun eqT () Int)
(declare-fun f$35$$35$a7qA () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_tmp$36$x$35$$35$1385 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1667 () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1128 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$974 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$956 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1665 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$956 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824444$35$$35$d81u$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824453$35$$35$d81D$35$$35$k_$35$$35$1207 () Int)
(declare-fun PEqProperties.dollar () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$974 () Int)
(declare-fun x$35$$35$a7qD () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1894 () Int)
(declare-fun VV$35$$35$F$35$$35$126 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824442$35$$35$d81s$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1257 () Int)
(declare-fun VV$35$$35$F$35$$35$104 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824479$35$$35$d823$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1477 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824487$35$$35$d82b$35$$35$k_$35$$35$1922 () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_tmp$36$x$35$$35$1379 () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824483$35$$35$d827$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1854 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1181 () Int)
(declare-fun VV$35$$35$F$35$$35$58 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1789 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824469$35$$35$d81T$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824482$35$$35$d826$35$$35$k_$35$$35$1844 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqFun$35$$35$3 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_tmp$36$x$35$$35$1951 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824472$35$$35$d81W$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824473$35$$35$d81X$35$$35$k_$35$$35$1636 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_karg$36$VV$35$$35$1339$35$$35$k_$35$$35$1340 () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L () Int)
(declare-fun lq_karg$36$a$35$$35$a7qK$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824449$35$$35$d81z$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824445$35$$35$d81v$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824465$35$$35$d81P$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824470$35$$35$d81U$35$$35$k_$35$$35$1647 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1503 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N () Int)
(declare-fun VV$35$$35$F$35$$35$63 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1503 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1347 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824469$35$$35$d81T () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824447$35$$35$d81x () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824467$35$$35$d81R$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824448$35$$35$d81y$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824446$35$$35$d81w$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1257 () Int)
(declare-fun PropositionalEquality.C$58$AEq () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824483$35$$35$d827$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$VV$35$$35$1315$35$$35$k_$35$$35$1316 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824455$35$$35$d81F () Int)
(declare-fun VV$35$$35$F$35$$35$118 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$VV$35$$35$1825$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1305 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824482$35$$35$d826$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_tmp$36$x$35$$35$1707 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1774 () Int)
(declare-fun lq_karg$36$VV$35$$35$1001$35$$35$k_$35$$35$1002 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_karg$36$VV$35$$35$1635$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824489$35$$35$d82d () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1636 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1277 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824451$35$$35$d81B () Int)
(declare-fun lq_tmp$36$x$35$$35$1365 () Int)
(declare-fun VV$35$$35$F$35$$35$123 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824458$35$$35$d81I$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1472 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1957 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824460$35$$35$d81K$35$$35$k_$35$$35$1340 () Int)
(declare-fun VV$35$$35$F$35$$35$101 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824456$35$$35$d81G$35$$35$k_$35$$35$1305 () Int)
(declare-fun VV$35$$35$F$35$$35$91 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1874 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824459$35$$35$d81J () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824481$35$$35$d825$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$VV$35$$35$1335$35$$35$k_$35$$35$1336 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1351 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824479$35$$35$d823 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qF$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$VV$35$$35$1681$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1207 () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1181 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1844 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824478$35$$35$d822 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E$35$$35$k_$35$$35$1305 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_karg$36$VV$35$$35$1921$35$$35$k_$35$$35$1922 () Int)
(declare-fun lq_karg$36$VV$35$$35$1471$35$$35$k_$35$$35$1472 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1844 () Int)
(declare-fun VV$35$$35$F$35$$35$66 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824480$35$$35$d824$35$$35$k_$35$$35$1894 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1305 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1257 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1477 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1108 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1477 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$936 () Int)
(declare-fun a$35$$35$a7qG () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824441$35$$35$d81r$35$$35$k_$35$$35$1002 () Int)
(declare-fun VV$35$$35$F$35$$35$69 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1554 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1554 () Int)
(declare-fun lit$36$Endofunctors () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824443$35$$35$d81t$35$$35$k_$35$$35$1305 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_karg$36$x$35$$35$a7qH$35$$35$k_$35$$35$1277 () Int)
(declare-fun VV$35$$35$F$35$$35$117 () Int)
(declare-fun PropositionalEquality.bEq () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1826 () Int)
(declare-fun VV$35$$35$F$35$$35$87 () Int)
(declare-fun lq_karg$36$y$35$$35$a7qI$35$$35$k_$35$$35$1277 () Int)
(declare-fun Endofunctors.monoid_associativity () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1968 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1334$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_tmp$36$x$35$$35$1384 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1968 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824486$35$$35$d82a$35$$35$k_$35$$35$1933 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824454$35$$35$d81E$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1207 () Int)
(declare-fun PropositionalEquality.eqSMT () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1682 () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_associativity$35$$35$k_$35$$35$1774 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M$35$$35$k_$35$$35$1682 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L$35$$35$k_$35$$35$1457 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824489$35$$35$d82d$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_tmp$36$x$35$$35$1373 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824476$35$$35$d820$35$$35$k_$35$$35$1953 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1957 () Int)
(declare-fun lq_tmp$36$x$35$$35$996 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qE$35$$35$k_$35$$35$1608 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lq_karg$36$Endofunctors.monoid_leftIdentity$35$$35$k_$35$$35$1874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824450$35$$35$d81A$35$$35$k_$35$$35$1229 () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.QED () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p$35$$35$k_$35$$35$1340 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q$35$$35$k_$35$$35$1347 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun lq_karg$36$a$35$$35$a7qG$35$$35$k_$35$$35$1826 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824478$35$$35$d822$35$$35$k_$35$$35$1964 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824466$35$$35$d81Q$35$$35$k_$35$$35$1589 () Int)
(declare-fun lq_karg$36$x$35$$35$a7qD$35$$35$k_$35$$35$1503 () Int)
(declare-fun PropositionalEquality.EqSMT () Int)
(declare-fun Endofunctors.mappend () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824452$35$$35$d81C$35$$35$k_$35$$35$1229 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$PropositionalEquality.EqCtx$35$$35$3 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m$35$$35$k_$35$$35$1159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824469$35$$35$d81T$35$$35$k_$35$$35$1608 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792824477$35$$35$d821$35$$35$k_$35$$35$1953 () Int)
(declare-fun lq_karg$36$z$35$$35$a7qJ$35$$35$k_$35$$35$1277 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$Endofunctors lit$36$propositional$45$equality$45$0.1.0.0$45$I3b76TrI2Jz4ErVGS6x2Zr))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct Language.Haskell.Liquid.ProofCombinators.QED Language.Haskell.Liquid.ProofCombinators.Admit))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$propositional$45$equality$45$0.1.0.0$45$I3b76TrI2Jz4ErVGS6x2Zr) 53))
(assert (= (strLen lit$36$Endofunctors) 12))
(push 1)
(push 1)
(assert (and (= Language.Haskell.Liquid.ProofCombinators.QED Language.Haskell.Liquid.ProofCombinators.QED)))
(assert (and (not GHC.Types.False)))
(assert (and (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and GHC.Types.True))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m) z$35$$35$a7qJ)) (= lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m) z$35$$35$a7qJ)))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) y$35$$35$a7qI) z$35$$35$a7qJ)) (= lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) y$35$$35$a7qI) z$35$$35$a7qJ)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o)) (= lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) lq_anf$36$$35$$35$7205759403792824438$35$$35$d81o)))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q (apply$35$$35$0 (apply$35$$35$0 (as PropositionalEquality.$36$WEqFun Int) lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n) lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p)) (= lq_anf$36$$35$$35$7205759403792824440$35$$35$d81q (apply$35$$35$0 (apply$35$$35$0 (as PropositionalEquality.$36$WEqFun Int) lq_anf$36$$35$$35$7205759403792824437$35$$35$d81n) lq_anf$36$$35$$35$7205759403792824439$35$$35$d81p)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792824460$35$$35$d81K (smt_lambda$35$$35$0 lam_arg$35$$35$1$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$63$ Int) (apply$35$$35$0 (as PEqProperties.refl Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) y$35$$35$a7qI)) z$35$$35$a7qJ) lam_arg$35$$35$1$35$$35$0))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) y$35$$35$a7qI)) z$35$$35$a7qJ) lam_arg$35$$35$1$35$$35$0)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) y$35$$35$a7qI) (apply$35$$35$0 z$35$$35$a7qJ lam_arg$35$$35$1$35$$35$0)))) (apply$35$$35$0 x$35$$35$a7qH (apply$35$$35$0 y$35$$35$a7qI (apply$35$$35$0 z$35$$35$a7qJ lam_arg$35$$35$1$35$$35$0))))) (apply$35$$35$0 x$35$$35$a7qH (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) y$35$$35$a7qI) z$35$$35$a7qJ) lam_arg$35$$35$1$35$$35$0)))) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) y$35$$35$a7qI) z$35$$35$a7qJ)) lam_arg$35$$35$1$35$$35$0))) Language.Haskell.Liquid.ProofCombinators.QED))))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) y$35$$35$a7qI)) (= lq_anf$36$$35$$35$7205759403792824436$35$$35$d81m (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qH) y$35$$35$a7qI)))))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L (as Endofunctors.mempty Int))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N (apply$35$$35$0 (apply$35$$35$0 (as PropositionalEquality.$36$WEqFun Int) lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M) x$35$$35$a7qD)) (= lq_anf$36$$35$$35$7205759403792824463$35$$35$d81N (apply$35$$35$0 (apply$35$$35$0 (as PropositionalEquality.$36$WEqFun Int) lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M) x$35$$35$a7qD)))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L) x$35$$35$a7qD)) (= lq_anf$36$$35$$35$7205759403792824462$35$$35$d81M (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) lq_anf$36$$35$$35$7205759403792824461$35$$35$d81L) x$35$$35$a7qD)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792824475$35$$35$d81Z (smt_lambda$35$$35$0 lam_arg$35$$35$1$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$63$ Int) (apply$35$$35$0 (as PEqProperties.refl Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) (as Endofunctors.mempty Int)) x$35$$35$a7qD) lam_arg$35$$35$1$35$$35$0))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) (as Endofunctors.mempty Int)) x$35$$35$a7qD) lam_arg$35$$35$1$35$$35$0)) (apply$35$$35$0 (as Endofunctors.mempty Int) (apply$35$$35$0 x$35$$35$a7qD lam_arg$35$$35$1$35$$35$0)))) (apply$35$$35$0 x$35$$35$a7qD lam_arg$35$$35$1$35$$35$0))) Language.Haskell.Liquid.ProofCombinators.QED))))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (= lq_anf$36$$35$$35$7205759403792824489$35$$35$d82d (smt_lambda$35$$35$0 lam_arg$35$$35$1$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$63$ Int) (apply$35$$35$0 (as PEqProperties.refl Int) (apply$35$$35$0 x$35$$35$a7qF lam_arg$35$$35$1$35$$35$0))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 (apply$35$$35$0 (as PEqProperties.$61$$126$$61$ Int) (apply$35$$35$0 x$35$$35$a7qF lam_arg$35$$35$1$35$$35$0)) (apply$35$$35$0 x$35$$35$a7qF (apply$35$$35$0 (as Endofunctors.mempty Int) lam_arg$35$$35$1$35$$35$0)))) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qF) (as Endofunctors.mempty Int)) lam_arg$35$$35$1$35$$35$0))) Language.Haskell.Liquid.ProofCombinators.QED))))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824478$35$$35$d822 (apply$35$$35$0 (apply$35$$35$0 (as PropositionalEquality.$36$WEqFun Int) x$35$$35$a7qF) lq_anf$36$$35$$35$7205759403792824477$35$$35$d821)) (= lq_anf$36$$35$$35$7205759403792824478$35$$35$d822 (apply$35$$35$0 (apply$35$$35$0 (as PropositionalEquality.$36$WEqFun Int) x$35$$35$a7qF) lq_anf$36$$35$$35$7205759403792824477$35$$35$d821)))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792824477$35$$35$d821 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qF) lq_anf$36$$35$$35$7205759403792824476$35$$35$d820)) (= lq_anf$36$$35$$35$7205759403792824477$35$$35$d821 (apply$35$$35$0 (apply$35$$35$0 (as Endofunctors.mappend Int) x$35$$35$a7qF) lq_anf$36$$35$$35$7205759403792824476$35$$35$d820)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792824476$35$$35$d820 (as Endofunctors.mempty Int))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(pop 1)
(pop 1)
(pop 1)
(pop 1)
