1:1-1:1::Readers.$trModule :: "GHC.Types.Module"
20:1-20:5::Readers.fmap :: "forall a b c .\nx1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == fmap x1 x3 x5\n                                                && VV == x1 (x3 x5)}"
20:6-20:9::fab :: "a -> b"
20:10-20:13::fra :: "a -> b"
20:14-20:15::r :: "a"
20:22-20:29::lq_anf$##7205759403792834505 :: "{VV : a | VV == fra r}"
20:27-20:28::r :: "{VV : a | VV == r}"
24:1-24:3::Readers.id :: "forall a .\nx1:a -> {VV : a | VV == id x1\n                  && VV == x1}"
24:4-24:5::x :: "a"
28:1-28:7::Readers.dollar :: "forall a b .\nx1:(a -> b) -> x3:a -> {VV : b | VV == dollar x1 x3\n                                 && VV == x1 x3}"
28:8-28:9::f :: "a -> b"
28:10-28:11::v :: "a"
28:16-28:17::v :: "{VV : a | VV == v}"
32:1-32:3::Readers.on :: "forall a b .\nx1:a -> x2:(a -> b) -> {VV : b | VV == on x1 x2\n                                 && VV == x2 x1}"
32:4-32:5::v :: "a"
32:6-32:7::f :: "a -> b"
32:12-32:13::v :: "{VV : a | VV == v}"
36:1-36:8::Readers.compose :: "forall a b c .\nx1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                && VV == x1 (x3 x5)}"
36:9-36:10::g :: "a -> b"
36:11-36:12::f :: "a -> b"
36:13-36:14::x :: "a"
36:19-36:24::lq_anf$##7205759403792834525 :: "{VV : a | VV == f x}"
36:22-36:23::x :: "{VV : a | VV == x}"
40:1-40:20::Readers.functorLaw_identity :: "forall a b .\n(PEqProperties.Reflexivity<[]> a) =>\n{VV : (PropositionalEquality.EqT (b -> a) -> b -> a) | eqT (fmap id) id}"
41:9-41:18::lq_anf$##7205759403792834507 :: "(a -> b) -> a -> b"
41:15-41:17::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
41:19-41:21::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
42:5-42:6::r :: "a -> b"
42:16-42:27::lq_anf$##7205759403792834510 :: "a -> b"
42:22-42:24::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
42:25-42:26::r :: "a -> b"
42:28-42:34::lq_anf$##7205759403792834511 :: "a -> b"
42:32-42:33::r :: "a -> b"
43:7-43:8::a :: "a"
43:12-43:30::lq_anf$##7205759403792834514 :: "(PropositionalEquality.EqT a)"
43:17-43:30::lq_anf$##7205759403792834513 :: "a"
43:23-43:25::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
43:26-43:27::r :: "a -> b"
43:28-43:29::a :: "{VV : a | VV == a}"
44:14-44:25::lq_anf$##7205759403792834516 :: "a"
44:19-44:21::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
44:22-44:23::r :: "a -> b"
44:24-44:25::a :: "{VV : a | VV == a}"
45:14-45:22::lq_anf$##7205759403792834518 :: "a"
45:17-45:22::lq_anf$##7205759403792834517 :: "{VV : a | VV == r a}"
45:20-45:21::a :: "{VV : a | VV == a}"
46:14-46:20::lq_anf$##7205759403792834520 :: "{VV : a | VV == id r a}"
46:17-46:18::r :: "a -> b"
46:19-46:20::a :: "{VV : a | VV == a}"
47:14-47:17::Language.Haskell.Liquid.ProofCombinators.QED :: "{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}"
52:1-52:23::Readers.functorLaw_composition :: "forall a b c d .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(b -> c) -> x4:(c -> a) -> {VV : (PropositionalEquality.EqT (d -> b) -> d -> a) | eqT (fmap (compose x4 x2)) (compose (fmap x4) (fmap x2))}"
52:24-52:25::f :: "a -> b"
52:26-52:27::g :: "a -> b"
53:9-53:29::lq_anf$##7205759403792834527 :: "(a -> b) -> a -> c"
53:15-53:28::lq_anf$##7205759403792834526 :: "x1:a -> {VV : b | VV == compose g f x1\n                  && VV == g (f x1)}"
53:24-53:25::g :: "a -> b"
53:26-53:27::f :: "a -> b"
53:30-53:57::lq_anf$##7205759403792834530 :: "(a -> b) -> a -> c"
53:39-53:47::lq_anf$##7205759403792834528 :: "x1:(a -> b) -> x3:a -> {VV : c | VV == fmap g x1 x3\n                                 && VV == g (x1 x3)}"
53:45-53:46::g :: "a -> b"
53:48-53:56::lq_anf$##7205759403792834529 :: "x1:(a -> b) -> x3:a -> {VV : c | VV == fmap f x1 x3\n                                 && VV == f (x1 x3)}"
53:54-53:55::f :: "a -> b"
54:7-54:10::rdr :: "a -> b"
54:20-54:44::lq_anf$##7205759403792834532 :: "a -> b"
54:26-54:39::lq_anf$##7205759403792834531 :: "x1:a -> {VV : b | VV == compose g f x1\n                  && VV == g (f x1)}"
54:35-54:36::g :: "a -> b"
54:37-54:38::f :: "a -> b"
54:40-54:43::rdr :: "a -> b"
54:45-54:78::lq_anf$##7205759403792834535 :: "a -> b"
54:55-54:63::lq_anf$##7205759403792834533 :: "x1:(a -> b) -> x3:a -> {VV : c | VV == fmap g x1 x3\n                                 && VV == g (x1 x3)}"
54:61-54:62::g :: "a -> b"
54:64-54:72::lq_anf$##7205759403792834534 :: "x1:(a -> b) -> x3:a -> {VV : c | VV == fmap f x1 x3\n                                 && VV == f (x1 x3)}"
54:70-54:71::f :: "a -> b"
54:74-54:77::rdr :: "a -> b"
55:9-55:10::r :: "a"
56:9-56:35::lq_anf$##7205759403792834537 :: "a"
56:15-56:28::lq_anf$##7205759403792834536 :: "x1:a -> {VV : b | VV == compose g f x1\n                  && VV == g (f x1)}"
56:24-56:25::g :: "a -> b"
56:26-56:27::f :: "a -> b"
56:29-56:32::rdr :: "a -> b"
56:33-56:34::r :: "{VV : a | VV == r}"
57:14-57:38::lq_anf$##7205759403792834540 :: "a"
57:19-57:32::lq_anf$##7205759403792834539 :: "x1:a -> {VV : b | VV == compose g f x1\n                  && VV == g (f x1)}"
57:28-57:29::g :: "a -> b"
57:30-57:31::f :: "a -> b"
57:33-57:36::rdr :: "a -> b"
57:37-57:38::r :: "{VV : a | VV == r}"
58:14-58:35::lq_anf$##7205759403792834542 :: "a"
58:23-58:24::g :: "a -> b"
58:25-58:26::f :: "a -> b"
58:28-58:35::lq_anf$##7205759403792834541 :: "{VV : a | VV == rdr r}"
58:33-58:34::r :: "{VV : a | VV == r}"
59:14-59:27::lq_anf$##7205759403792834546 :: "a"
59:16-59:27::lq_anf$##7205759403792834545 :: "a"
59:19-59:26::lq_anf$##7205759403792834544 :: "{VV : a | VV == rdr r}"
59:24-59:25::r :: "{VV : a | VV == r}"
60:14-60:34::lq_anf$##7205759403792834549 :: "a"
60:16-60:34::lq_anf$##7205759403792834548 :: "{VV : a | VV == fmap f rdr r\n          && VV == f (rdr r)}"
60:24-60:25::f :: "a -> b"
60:27-60:30::rdr :: "a -> b"
60:32-60:33::r :: "{VV : a | VV == r}"
61:14-61:37::lq_anf$##7205759403792834552 :: "a"
61:19-61:20::g :: "a -> b"
61:21-61:35::lq_anf$##7205759403792834551 :: "x1:a -> {VV : b | VV == fmap f rdr x1\n                  && VV == f (rdr x1)}"
61:28-61:29::f :: "a -> b"
61:31-61:34::rdr :: "a -> b"
61:36-61:37::r :: "{VV : a | VV == r}"
62:14-62:47::lq_anf$##7205759403792834556 :: "a"
62:23-62:31::lq_anf$##7205759403792834554 :: "x1:(a -> b) -> x3:a -> {VV : c | VV == fmap g x1 x3\n                                 && VV == g (x1 x3)}"
62:29-62:30::g :: "a -> b"
62:32-62:40::lq_anf$##7205759403792834555 :: "x1:(a -> b) -> x3:a -> {VV : c | VV == fmap f x1 x3\n                                 && VV == f (x1 x3)}"
62:38-62:39::f :: "a -> b"
62:42-62:45::rdr :: "a -> b"
62:46-62:47::r :: "{VV : a | VV == r}"
63:14-63:17::Language.Haskell.Liquid.ProofCombinators.QED :: "{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}"
67:1-67:5::Readers.pure :: "forall a b .\nx1:a -> x2:b -> {VV : a | VV == pure x1 x2\n                          && VV == x1}"
67:6-67:7::a :: "a"
67:8-67:10::_r :: "a"
71:1-71:3::Readers.ap :: "forall a b c .\nx1:(a -> b -> c) -> x4:(a -> b) -> x6:a -> {VV : c | VV == ap x1 x4 x6\n                                                     && VV == x1 x6 (x4 x6)}"
71:4-71:8::frab :: "a -> b -> c"
71:9-71:12::fra :: "a -> b"
71:13-71:14::r :: "a"
71:22-71:23::r :: "{VV : a | VV == r}"
71:24-71:31::lq_anf$##7205759403792834561 :: "{VV : a | VV == fra r}"
71:29-71:30::r :: "{VV : a | VV == r}"
76:1-76:24::Readers.applicativeLaw_identity :: "forall a b .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:(b -> a) -> {VV : (PropositionalEquality.EqT b -> a) | eqT (ap (pure id) x3) x3}"
76:25-76:26::v :: "a -> b"
77:9-77:25::lq_anf$##7205759403792834775 :: "a -> b"
77:13-77:22::lq_anf$##7205759403792834774 :: "a -> b -> b"
77:19-77:21::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
77:23-77:24::v :: "a -> b"
77:26-77:27::v :: "a -> b"
78:5-78:6::r :: "a"
79:12-79:30::lq_anf$##7205759403792834778 :: "a"
79:16-79:25::lq_anf$##7205759403792834777 :: "a -> b -> b"
79:22-79:24::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
79:26-79:27::v :: "a -> b"
79:28-79:29::r :: "{VV : a | VV == r}"
80:12-80:31::lq_anf$##7205759403792834781 :: "a"
80:19-80:21::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
80:23-80:24::r :: "{VV : a | VV == r}"
80:25-80:30::lq_anf$##7205759403792834780 :: "{VV : a | VV == v r}"
80:28-80:29::r :: "{VV : a | VV == r}"
81:12-81:17::lq_anf$##7205759403792834782 :: "{VV : a | VV == v r}"
81:15-81:16::r :: "{VV : a | VV == r}"
82:8-82:33::lq_anf$##7205759403792834786 :: "(PropositionalEquality.EqT a)"
82:14-82:32::lq_anf$##7205759403792834785 :: "a"
82:18-82:27::lq_anf$##7205759403792834784 :: "a -> b -> b"
82:24-82:26::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
82:28-82:29::v :: "a -> b"
82:30-82:31::r :: "{VV : a | VV == r}"
83:15-83:34::lq_anf$##7205759403792834789 :: "a"
83:22-83:24::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
83:26-83:27::r :: "{VV : a | VV == r}"
83:28-83:33::lq_anf$##7205759403792834788 :: "{VV : a | VV == v r}"
83:31-83:32::r :: "{VV : a | VV == r}"
84:15-84:25::lq_anf$##7205759403792834791 :: "a"
84:19-84:24::lq_anf$##7205759403792834790 :: "{VV : a | VV == v r}"
84:22-84:23::r :: "{VV : a | VV == r}"
85:15-85:20::lq_anf$##7205759403792834792 :: "{VV : a | VV == v r}"
85:18-85:19::r :: "{VV : a | VV == r}"
86:10-86:36::lq_anf$##7205759403792834796 :: "(PropositionalEquality.EqT a)"
86:16-86:35::lq_anf$##7205759403792834795 :: "a"
86:23-86:25::_ :: "{VV : forall a .\n      x1:a -> {VV : a | VV == id x1\n                        && VV == x1} | VV == id}"
86:27-86:28::r :: "{VV : a | VV == r}"
86:29-86:34::lq_anf$##7205759403792834794 :: "{VV : a | VV == v r}"
86:32-86:33::r :: "{VV : a | VV == r}"
87:10-87:27::lq_anf$##7205759403792834799 :: "(PropositionalEquality.EqT a)"
87:16-87:26::lq_anf$##7205759403792834798 :: "a"
87:20-87:25::lq_anf$##7205759403792834797 :: "{VV : a | VV == v r}"
87:23-87:24::r :: "{VV : a | VV == r}"
92:1-92:28::Readers.applicativeLaw_homomorphism :: "forall a b c .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:(b -> a) -> x5:b -> {VV : (PropositionalEquality.EqT c -> a) | eqT (ap (pure x3) (pure x5)) (pure (x3 x5))}"
92:29-92:30::f :: "a -> b"
92:31-92:32::v :: "a"
93:9-93:31::lq_anf$##7205759403792834564 :: "a -> b"
93:13-93:21::lq_anf$##7205759403792834562 :: "x1:a -> b -> c"
93:19-93:20::f :: "a -> b"
93:22-93:30::lq_anf$##7205759403792834563 :: "x1:a -> {VV : b | VV == pure v x1\n                  && VV == v}"
93:28-93:29::v :: "{VV : a | VV == v}"
93:32-93:44::lq_anf$##7205759403792834566 :: "a -> b"
93:38-93:43::lq_anf$##7205759403792834565 :: "{VV : a | VV == f v}"
93:41-93:42::v :: "{VV : a | VV == v}"
94:5-94:6::r :: "a"
95:12-95:36::lq_anf$##7205759403792834569 :: "a"
95:16-95:24::lq_anf$##7205759403792834567 :: "x1:a -> b -> c"
95:22-95:23::f :: "a -> b"
95:25-95:33::lq_anf$##7205759403792834568 :: "x1:a -> {VV : b | VV == pure v x1\n                  && VV == v}"
95:31-95:32::v :: "{VV : a | VV == v}"
95:34-95:35::r :: "{VV : a | VV == r}"
96:12-96:33::lq_anf$##7205759403792834571 :: "a"
96:18-96:19::f :: "a -> b"
96:20-96:21::r :: "{VV : a | VV == r}"
96:22-96:32::lq_anf$##7205759403792834570 :: "{VV : a | VV == pure v r\n          && VV == v}"
96:28-96:29::v :: "{VV : a | VV == v}"
96:30-96:31::r :: "{VV : a | VV == r}"
97:12-97:26::lq_anf$##7205759403792834573 :: "a"
97:18-97:23::lq_anf$##7205759403792834572 :: "{VV : a | VV == f v}"
97:21-97:22::v :: "{VV : a | VV == v}"
97:24-97:25::r :: "{VV : a | VV == r}"
98:8-98:39::lq_anf$##7205759403792834577 :: "(PropositionalEquality.EqT a)"
98:14-98:38::lq_anf$##7205759403792834576 :: "a"
98:18-98:26::lq_anf$##7205759403792834574 :: "x1:a -> b -> c"
98:24-98:25::f :: "a -> b"
98:27-98:35::lq_anf$##7205759403792834575 :: "x1:a -> {VV : b | VV == pure v x1\n                  && VV == v}"
98:33-98:34::v :: "{VV : a | VV == v}"
98:36-98:37::r :: "{VV : a | VV == r}"
99:15-99:36::lq_anf$##7205759403792834579 :: "a"
99:21-99:22::f :: "a -> b"
99:23-99:24::r :: "{VV : a | VV == r}"
99:25-99:35::lq_anf$##7205759403792834578 :: "{VV : a | VV == pure v r\n          && VV == v}"
99:31-99:32::v :: "{VV : a | VV == v}"
99:33-99:34::r :: "{VV : a | VV == r}"
100:15-100:27::lq_anf$##7205759403792834580 :: "{VV : a | VV == pure f r v}"
100:21-100:22::f :: "a -> b"
100:23-100:24::r :: "{VV : a | VV == r}"
100:25-100:26::v :: "{VV : a | VV == v}"
101:15-101:29::lq_anf$##7205759403792834582 :: "a"
101:21-101:26::lq_anf$##7205759403792834581 :: "{VV : a | VV == f v}"
101:24-101:25::v :: "{VV : a | VV == v}"
101:27-101:28::r :: "{VV : a | VV == r}"
102:10-102:38::lq_anf$##7205759403792834585 :: "(PropositionalEquality.EqT a)"
102:16-102:37::lq_anf$##7205759403792834584 :: "a"
102:22-102:23::f :: "a -> b"
102:24-102:25::r :: "{VV : a | VV == r}"
102:26-102:36::lq_anf$##7205759403792834583 :: "{VV : a | VV == pure v r\n          && VV == v}"
102:32-102:33::v :: "{VV : a | VV == v}"
102:34-102:35::r :: "{VV : a | VV == r}"
103:17-103:29::lq_anf$##7205759403792834586 :: "{VV : a | VV == pure f r v}"
103:23-103:24::f :: "a -> b"
103:25-103:26::r :: "{VV : a | VV == r}"
103:27-103:28::v :: "{VV : a | VV == v}"
104:17-104:22::lq_anf$##7205759403792834587 :: "{VV : a | VV == f v}"
104:20-104:21::v :: "{VV : a | VV == v}"
105:17-105:31::lq_anf$##7205759403792834589 :: "a"
105:23-105:28::lq_anf$##7205759403792834588 :: "{VV : a | VV == f v}"
105:26-105:27::v :: "{VV : a | VV == v}"
105:29-105:30::r :: "{VV : a | VV == r}"
106:12-106:31::lq_anf$##7205759403792834591 :: "(PropositionalEquality.EqT a)"
106:18-106:30::lq_anf$##7205759403792834590 :: "{VV : a | VV == pure f r v}"
106:24-106:25::f :: "a -> b"
106:26-106:27::r :: "{VV : a | VV == r}"
106:28-106:29::v :: "{VV : a | VV == v}"
107:12-107:24::lq_anf$##7205759403792834593 :: "(PropositionalEquality.EqT a)"
107:18-107:23::lq_anf$##7205759403792834592 :: "{VV : a | VV == f v}"
107:21-107:22::v :: "{VV : a | VV == v}"
112:1-112:27::Readers.applicativeLaw_interchange :: "forall a b c .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:(b -> c -> a) -> x6:c -> {VV : (PropositionalEquality.EqT b -> a) | eqT (ap x3 (pure x6)) (ap (pure (on x6)) x3)}"
112:28-112:29::u :: "a -> b -> c"
112:30-112:31::y :: "a"
113:9-113:24::lq_anf$##7205759403792834723 :: "a -> b"
113:13-113:14::u :: "a -> b -> c"
113:15-113:23::lq_anf$##7205759403792834722 :: "x1:a -> {VV : b | VV == pure y x1\n                  && VV == y}"
113:21-113:22::y :: "{VV : a | VV == y}"
113:25-113:45::lq_anf$##7205759403792834726 :: "a -> b"
113:29-113:42::lq_anf$##7205759403792834725 :: "a -> (b -> c) -> c"
113:35-113:41::lq_anf$##7205759403792834724 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
113:39-113:40::y :: "{VV : a | VV == y}"
113:43-113:44::u :: "a -> b -> c"
114:5-114:6::r :: "a"
115:12-115:29::lq_anf$##7205759403792834728 :: "a"
115:16-115:17::u :: "a -> b -> c"
115:18-115:26::lq_anf$##7205759403792834727 :: "x1:a -> {VV : b | VV == pure y x1\n                  && VV == y}"
115:24-115:25::y :: "{VV : a | VV == y}"
115:27-115:28::r :: "{VV : a | VV == r}"
116:12-116:28::lq_anf$##7205759403792834730 :: "a"
116:15-116:16::r :: "{VV : a | VV == r}"
116:17-116:27::lq_anf$##7205759403792834729 :: "{VV : a | VV == pure y r\n          && VV == y}"
116:23-116:24::y :: "{VV : a | VV == y}"
116:25-116:26::r :: "{VV : a | VV == r}"
117:12-117:34::lq_anf$##7205759403792834733 :: "a"
117:16-117:29::lq_anf$##7205759403792834732 :: "a -> (b -> c) -> c"
117:22-117:28::lq_anf$##7205759403792834731 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
117:26-117:27::y :: "{VV : a | VV == y}"
117:30-117:31::u :: "a -> b -> c"
117:32-117:33::r :: "{VV : a | VV == r}"
118:8-118:32::lq_anf$##7205759403792834736 :: "(PropositionalEquality.EqT a)"
118:14-118:31::lq_anf$##7205759403792834735 :: "a"
118:18-118:19::u :: "a -> b -> c"
118:20-118:28::lq_anf$##7205759403792834734 :: "x1:a -> {VV : b | VV == pure y x1\n                  && VV == y}"
118:26-118:27::y :: "{VV : a | VV == y}"
118:29-118:30::r :: "{VV : a | VV == r}"
119:15-119:31::lq_anf$##7205759403792834738 :: "a"
119:18-119:19::r :: "{VV : a | VV == r}"
119:20-119:30::lq_anf$##7205759403792834737 :: "{VV : a | VV == pure y r\n          && VV == y}"
119:26-119:27::y :: "{VV : a | VV == y}"
119:28-119:29::r :: "{VV : a | VV == r}"
120:15-120:22::lq_anf$##7205759403792834739 :: "{VV : a | VV == u r y}"
120:18-120:19::r :: "{VV : a | VV == r}"
120:20-120:21::y :: "{VV : a | VV == y}"
121:15-121:37::lq_anf$##7205759403792834742 :: "a"
121:19-121:32::lq_anf$##7205759403792834741 :: "a -> (b -> c) -> c"
121:25-121:31::lq_anf$##7205759403792834740 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
121:29-121:30::y :: "{VV : a | VV == y}"
121:33-121:34::u :: "a -> b -> c"
121:35-121:36::r :: "{VV : a | VV == r}"
122:10-122:33::lq_anf$##7205759403792834745 :: "(PropositionalEquality.EqT a)"
122:16-122:32::lq_anf$##7205759403792834744 :: "a"
122:19-122:20::r :: "{VV : a | VV == r}"
122:21-122:31::lq_anf$##7205759403792834743 :: "{VV : a | VV == pure y r\n          && VV == y}"
122:27-122:28::y :: "{VV : a | VV == y}"
122:29-122:30::r :: "{VV : a | VV == r}"
123:17-123:24::lq_anf$##7205759403792834746 :: "{VV : a | VV == u r y}"
123:20-123:21::r :: "{VV : a | VV == r}"
123:22-123:23::y :: "{VV : a | VV == y}"
124:17-124:31::lq_anf$##7205759403792834748 :: "a"
124:22-124:23::y :: "{VV : a | VV == y}"
124:25-124:30::lq_anf$##7205759403792834747 :: "a -> b"
124:28-124:29::r :: "{VV : a | VV == r}"
125:17-125:39::lq_anf$##7205759403792834751 :: "a"
125:21-125:34::lq_anf$##7205759403792834750 :: "a -> (b -> c) -> c"
125:27-125:33::lq_anf$##7205759403792834749 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
125:31-125:32::y :: "{VV : a | VV == y}"
125:35-125:36::u :: "a -> b -> c"
125:37-125:38::r :: "{VV : a | VV == r}"
126:12-126:26::lq_anf$##7205759403792834753 :: "(PropositionalEquality.EqT a)"
126:18-126:25::lq_anf$##7205759403792834752 :: "{VV : a | VV == u r y}"
126:21-126:22::r :: "{VV : a | VV == r}"
126:23-126:24::y :: "{VV : a | VV == y}"
127:19-127:33::lq_anf$##7205759403792834755 :: "a"
127:24-127:25::y :: "{VV : a | VV == y}"
127:27-127:32::lq_anf$##7205759403792834754 :: "a -> b"
127:30-127:31::r :: "{VV : a | VV == r}"
128:19-128:42::lq_anf$##7205759403792834758 :: "a"
128:26-128:32::lq_anf$##7205759403792834756 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
128:30-128:31::y :: "{VV : a | VV == y}"
128:34-128:35::r :: "{VV : a | VV == r}"
128:36-128:41::lq_anf$##7205759403792834757 :: "a -> b"
128:39-128:40::r :: "{VV : a | VV == r}"
129:19-129:41::lq_anf$##7205759403792834761 :: "a"
129:23-129:36::lq_anf$##7205759403792834760 :: "a -> (b -> c) -> c"
129:29-129:35::lq_anf$##7205759403792834759 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
129:33-129:34::y :: "{VV : a | VV == y}"
129:37-129:38::u :: "a -> b -> c"
129:39-129:40::r :: "{VV : a | VV == r}"
130:14-130:35::lq_anf$##7205759403792834764 :: "(PropositionalEquality.EqT a)"
130:20-130:34::lq_anf$##7205759403792834763 :: "a"
130:25-130:26::y :: "{VV : a | VV == y}"
130:28-130:33::lq_anf$##7205759403792834762 :: "a -> b"
130:31-130:32::r :: "{VV : a | VV == r}"
131:14-131:44::lq_anf$##7205759403792834768 :: "(PropositionalEquality.EqT a)"
131:20-131:43::lq_anf$##7205759403792834767 :: "a"
131:27-131:33::lq_anf$##7205759403792834765 :: "x1:(a -> b) -> {VV : b | VV == on y x1\n                         && VV == x1 y}"
131:31-131:32::y :: "{VV : a | VV == y}"
131:35-131:36::r :: "{VV : a | VV == r}"
131:37-131:42::lq_anf$##7205759403792834766 :: "a -> b"
131:40-131:41::r :: "{VV : a | VV == r}"
139:1-139:27::Readers.applicativeLaw_composition :: "forall a b c d .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:(b -> c -> a) -> x6:(b -> d -> c) -> x9:(b -> d) -> {VV : (PropositionalEquality.EqT b -> a) | eqT (ap (ap (ap (pure compose) x3) x6) x9) (ap x3 (ap x6 x9))}"
139:28-139:29::u :: "a -> b -> c"
139:30-139:31::v :: "a -> b -> c"
139:32-139:33::w :: "a -> b"
140:9-140:44::lq_anf$##7205759403792834601 :: "a -> b"
140:13-140:41::lq_anf$##7205759403792834600 :: "a -> b -> c"
140:17-140:38::lq_anf$##7205759403792834599 :: "a -> (b -> c) -> b -> d"
140:21-140:35::lq_anf$##7205759403792834598 :: "a -> (b -> c) -> (d -> b) -> d -> c"
140:27-140:34::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
140:36-140:37::u :: "a -> b -> c"
140:39-140:40::v :: "a -> b -> c"
140:42-140:43::w :: "a -> b"
141:9-141:24::lq_anf$##7205759403792834603 :: "a -> b"
141:13-141:14::u :: "a -> b -> c"
141:15-141:23::lq_anf$##7205759403792834602 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
141:19-141:20::v :: "a -> b -> c"
141:21-141:22::w :: "a -> b"
142:5-142:6::r :: "a"
143:13-143:50::lq_anf$##7205759403792834608 :: "a"
143:17-143:45::lq_anf$##7205759403792834607 :: "a -> b -> c"
143:21-143:42::lq_anf$##7205759403792834606 :: "a -> (b -> c) -> b -> d"
143:25-143:39::lq_anf$##7205759403792834605 :: "a -> (b -> c) -> (d -> b) -> d -> c"
143:31-143:38::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
143:40-143:41::u :: "a -> b -> c"
143:43-143:44::v :: "a -> b -> c"
143:46-143:47::w :: "a -> b"
143:48-143:49::r :: "{VV : a | VV == r}"
144:13-144:51::lq_anf$##7205759403792834613 :: "a"
144:18-144:39::lq_anf$##7205759403792834611 :: "a -> (b -> c) -> b -> d"
144:22-144:36::lq_anf$##7205759403792834610 :: "a -> (b -> c) -> (d -> b) -> d -> c"
144:28-144:35::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
144:37-144:38::u :: "a -> b -> c"
144:40-144:41::v :: "a -> b -> c"
144:43-144:44::r :: "{VV : a | VV == r}"
144:45-144:50::lq_anf$##7205759403792834612 :: "{VV : a | VV == w r}"
144:48-144:49::r :: "{VV : a | VV == r}"
145:13-145:30::lq_anf$##7205759403792834615 :: "a"
145:17-145:18::u :: "a -> b -> c"
145:19-145:27::lq_anf$##7205759403792834614 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
145:23-145:24::v :: "a -> b -> c"
145:25-145:26::w :: "a -> b"
145:28-145:29::r :: "{VV : a | VV == r}"
146:9-146:53::lq_anf$##7205759403792834621 :: "(PropositionalEquality.EqT a)"
146:15-146:52::lq_anf$##7205759403792834620 :: "a"
146:19-146:47::lq_anf$##7205759403792834619 :: "a -> b -> c"
146:23-146:44::lq_anf$##7205759403792834618 :: "a -> (b -> c) -> b -> d"
146:27-146:41::lq_anf$##7205759403792834617 :: "a -> (b -> c) -> (d -> b) -> d -> c"
146:33-146:40::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
146:42-146:43::u :: "a -> b -> c"
146:45-146:46::v :: "a -> b -> c"
146:48-146:49::w :: "a -> b"
146:50-146:51::r :: "{VV : a | VV == r}"
147:16-147:54::lq_anf$##7205759403792834626 :: "a"
147:21-147:42::lq_anf$##7205759403792834624 :: "a -> (b -> c) -> b -> d"
147:25-147:39::lq_anf$##7205759403792834623 :: "a -> (b -> c) -> (d -> b) -> d -> c"
147:31-147:38::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
147:40-147:41::u :: "a -> b -> c"
147:43-147:44::v :: "a -> b -> c"
147:46-147:47::r :: "{VV : a | VV == r}"
147:48-147:53::lq_anf$##7205759403792834625 :: "{VV : a | VV == w r}"
147:51-147:52::r :: "{VV : a | VV == r}"
148:16-148:53::lq_anf$##7205759403792834631 :: "a"
148:21-148:35::lq_anf$##7205759403792834628 :: "a -> (b -> c) -> (d -> b) -> d -> c"
148:27-148:34::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
148:36-148:37::u :: "a -> b -> c"
148:39-148:40::r :: "{VV : a | VV == r}"
148:41-148:46::lq_anf$##7205759403792834629 :: "a -> b"
148:44-148:45::r :: "{VV : a | VV == r}"
148:47-148:52::lq_anf$##7205759403792834630 :: "{VV : a | VV == w r}"
148:50-148:51::r :: "{VV : a | VV == r}"
149:16-149:33::lq_anf$##7205759403792834633 :: "a"
149:20-149:21::u :: "a -> b -> c"
149:22-149:30::lq_anf$##7205759403792834632 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
149:26-149:27::v :: "a -> b -> c"
149:28-149:29::w :: "a -> b"
149:31-149:32::r :: "{VV : a | VV == r}"
150:11-150:56::lq_anf$##7205759403792834639 :: "(PropositionalEquality.EqT a)"
150:17-150:55::lq_anf$##7205759403792834638 :: "a"
150:22-150:43::lq_anf$##7205759403792834636 :: "a -> (b -> c) -> b -> d"
150:26-150:40::lq_anf$##7205759403792834635 :: "a -> (b -> c) -> (d -> b) -> d -> c"
150:32-150:39::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
150:41-150:42::u :: "a -> b -> c"
150:44-150:45::v :: "a -> b -> c"
150:47-150:48::r :: "{VV : a | VV == r}"
150:49-150:54::lq_anf$##7205759403792834637 :: "{VV : a | VV == w r}"
150:52-150:53::r :: "{VV : a | VV == r}"
151:18-151:55::lq_anf$##7205759403792834644 :: "a"
151:23-151:37::lq_anf$##7205759403792834641 :: "a -> (b -> c) -> (d -> b) -> d -> c"
151:29-151:36::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
151:38-151:39::u :: "a -> b -> c"
151:41-151:42::r :: "{VV : a | VV == r}"
151:43-151:48::lq_anf$##7205759403792834642 :: "a -> b"
151:46-151:47::r :: "{VV : a | VV == r}"
151:49-151:54::lq_anf$##7205759403792834643 :: "{VV : a | VV == w r}"
151:52-151:53::r :: "{VV : a | VV == r}"
152:18-152:54::lq_anf$##7205759403792834649 :: "a"
152:25-152:32::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
152:34-152:35::r :: "{VV : a | VV == r}"
152:36-152:41::lq_anf$##7205759403792834646 :: "a -> b"
152:39-152:40::r :: "{VV : a | VV == r}"
152:42-152:47::lq_anf$##7205759403792834647 :: "a -> b"
152:45-152:46::r :: "{VV : a | VV == r}"
152:48-152:53::lq_anf$##7205759403792834648 :: "{VV : a | VV == w r}"
152:51-152:52::r :: "{VV : a | VV == r}"
153:18-153:35::lq_anf$##7205759403792834651 :: "a"
153:22-153:23::u :: "a -> b -> c"
153:24-153:32::lq_anf$##7205759403792834650 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
153:28-153:29::v :: "a -> b -> c"
153:30-153:31::w :: "a -> b"
153:33-153:34::r :: "{VV : a | VV == r}"
154:13-154:57::lq_anf$##7205759403792834657 :: "(PropositionalEquality.EqT a)"
154:19-154:56::lq_anf$##7205759403792834656 :: "a"
154:24-154:38::lq_anf$##7205759403792834653 :: "a -> (b -> c) -> (d -> b) -> d -> c"
154:30-154:37::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
154:39-154:40::u :: "a -> b -> c"
154:42-154:43::r :: "{VV : a | VV == r}"
154:44-154:49::lq_anf$##7205759403792834654 :: "a -> b"
154:47-154:48::r :: "{VV : a | VV == r}"
154:50-154:55::lq_anf$##7205759403792834655 :: "{VV : a | VV == w r}"
154:53-154:54::r :: "{VV : a | VV == r}"
155:20-155:56::lq_anf$##7205759403792834662 :: "a"
155:27-155:34::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
155:36-155:37::r :: "{VV : a | VV == r}"
155:38-155:43::lq_anf$##7205759403792834659 :: "a -> b"
155:41-155:42::r :: "{VV : a | VV == r}"
155:44-155:49::lq_anf$##7205759403792834660 :: "a -> b"
155:47-155:48::r :: "{VV : a | VV == r}"
155:50-155:55::lq_anf$##7205759403792834661 :: "{VV : a | VV == w r}"
155:53-155:54::r :: "{VV : a | VV == r}"
156:20-156:47::lq_anf$##7205759403792834666 :: "a"
156:29-156:34::lq_anf$##7205759403792834663 :: "a -> b"
156:32-156:33::r :: "{VV : a | VV == r}"
156:35-156:40::lq_anf$##7205759403792834664 :: "a -> b"
156:38-156:39::r :: "{VV : a | VV == r}"
156:41-156:46::lq_anf$##7205759403792834665 :: "{VV : a | VV == w r}"
156:44-156:45::r :: "{VV : a | VV == r}"
157:20-157:37::lq_anf$##7205759403792834668 :: "a"
157:24-157:25::u :: "a -> b -> c"
157:26-157:34::lq_anf$##7205759403792834667 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
157:30-157:31::v :: "a -> b -> c"
157:32-157:33::w :: "a -> b"
157:35-157:36::r :: "{VV : a | VV == r}"
158:15-158:58::lq_anf$##7205759403792834674 :: "(PropositionalEquality.EqT a)"
158:21-158:57::lq_anf$##7205759403792834673 :: "a"
158:28-158:35::_ :: "{VV : forall a b c .\n      x1:(a -> b) -> x3:(c -> a) -> x5:c -> {VV : b | VV == compose x1 x3 x5\n                                                      && VV == x1 (x3 x5)} | VV == compose}"
158:37-158:38::r :: "{VV : a | VV == r}"
158:39-158:44::lq_anf$##7205759403792834670 :: "a -> b"
158:42-158:43::r :: "{VV : a | VV == r}"
158:45-158:50::lq_anf$##7205759403792834671 :: "a -> b"
158:48-158:49::r :: "{VV : a | VV == r}"
158:51-158:56::lq_anf$##7205759403792834672 :: "{VV : a | VV == w r}"
158:54-158:55::r :: "{VV : a | VV == r}"
159:22-159:49::lq_anf$##7205759403792834678 :: "a"
159:31-159:36::lq_anf$##7205759403792834675 :: "a -> b"
159:34-159:35::r :: "{VV : a | VV == r}"
159:37-159:42::lq_anf$##7205759403792834676 :: "a -> b"
159:40-159:41::r :: "{VV : a | VV == r}"
159:43-159:48::lq_anf$##7205759403792834677 :: "{VV : a | VV == w r}"
159:46-159:47::r :: "{VV : a | VV == r}"
160:22-160:43::lq_anf$##7205759403792834681 :: "a"
160:26-160:27::r :: "{VV : a | VV == r}"
160:29-160:42::lq_anf$##7205759403792834680 :: "a"
160:33-160:34::r :: "{VV : a | VV == r}"
160:36-160:41::lq_anf$##7205759403792834679 :: "{VV : a | VV == w r}"
160:39-160:40::r :: "{VV : a | VV == r}"
161:22-161:39::lq_anf$##7205759403792834683 :: "a"
161:26-161:27::u :: "a -> b -> c"
161:28-161:36::lq_anf$##7205759403792834682 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
161:32-161:33::v :: "a -> b -> c"
161:34-161:35::w :: "a -> b"
161:37-161:38::r :: "{VV : a | VV == r}"
162:17-162:51::lq_anf$##7205759403792834688 :: "(PropositionalEquality.EqT a)"
162:23-162:50::lq_anf$##7205759403792834687 :: "a"
162:32-162:37::lq_anf$##7205759403792834684 :: "a -> b"
162:35-162:36::r :: "{VV : a | VV == r}"
162:38-162:43::lq_anf$##7205759403792834685 :: "a -> b"
162:41-162:42::r :: "{VV : a | VV == r}"
162:44-162:49::lq_anf$##7205759403792834686 :: "{VV : a | VV == w r}"
162:47-162:48::r :: "{VV : a | VV == r}"
163:24-163:45::lq_anf$##7205759403792834691 :: "a"
163:28-163:29::r :: "{VV : a | VV == r}"
163:31-163:44::lq_anf$##7205759403792834690 :: "a"
163:35-163:36::r :: "{VV : a | VV == r}"
163:38-163:43::lq_anf$##7205759403792834689 :: "{VV : a | VV == w r}"
163:41-163:42::r :: "{VV : a | VV == r}"
164:24-164:41::lq_anf$##7205759403792834694 :: "a"
164:27-164:28::r :: "{VV : a | VV == r}"
164:29-164:40::lq_anf$##7205759403792834693 :: "a"
164:32-164:33::r :: "{VV : a | VV == r}"
164:34-164:39::lq_anf$##7205759403792834692 :: "{VV : a | VV == w r}"
164:37-164:38::r :: "{VV : a | VV == r}"
165:24-165:41::lq_anf$##7205759403792834696 :: "a"
165:28-165:29::u :: "a -> b -> c"
165:30-165:38::lq_anf$##7205759403792834695 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
165:34-165:35::v :: "a -> b -> c"
165:36-165:37::w :: "a -> b"
165:39-165:40::r :: "{VV : a | VV == r}"
166:19-166:47::lq_anf$##7205759403792834700 :: "(PropositionalEquality.EqT a)"
166:25-166:46::lq_anf$##7205759403792834699 :: "a"
166:29-166:30::r :: "{VV : a | VV == r}"
166:32-166:45::lq_anf$##7205759403792834698 :: "a"
166:36-166:37::r :: "{VV : a | VV == r}"
166:39-166:44::lq_anf$##7205759403792834697 :: "{VV : a | VV == w r}"
166:42-166:43::r :: "{VV : a | VV == r}"
167:26-167:43::lq_anf$##7205759403792834703 :: "a"
167:29-167:30::r :: "{VV : a | VV == r}"
167:31-167:42::lq_anf$##7205759403792834702 :: "a"
167:34-167:35::r :: "{VV : a | VV == r}"
167:36-167:41::lq_anf$##7205759403792834701 :: "{VV : a | VV == w r}"
167:39-167:40::r :: "{VV : a | VV == r}"
168:26-168:42::lq_anf$##7205759403792834705 :: "a"
168:29-168:30::r :: "{VV : a | VV == r}"
168:31-168:41::lq_anf$##7205759403792834704 :: "{VV : a | VV == ap v w r\n          && VV == v r (w r)}"
168:35-168:36::v :: "a -> b -> c"
168:37-168:38::w :: "a -> b"
168:39-168:40::r :: "{VV : a | VV == r}"
169:26-169:43::lq_anf$##7205759403792834707 :: "a"
169:30-169:31::u :: "a -> b -> c"
169:32-169:40::lq_anf$##7205759403792834706 :: "x1:a -> {VV : b | VV == ap v w x1\n                  && VV == v x1 (w x1)}"
169:36-169:37::v :: "a -> b -> c"
169:38-169:39::w :: "a -> b"
169:41-169:42::r :: "{VV : a | VV == r}"
170:21-170:45::lq_anf$##7205759403792834711 :: "(PropositionalEquality.EqT a)"
170:27-170:44::lq_anf$##7205759403792834710 :: "a"
170:30-170:31::r :: "{VV : a | VV == r}"
170:32-170:43::lq_anf$##7205759403792834709 :: "a"
170:35-170:36::r :: "{VV : a | VV == r}"
170:37-170:42::lq_anf$##7205759403792834708 :: "{VV : a | VV == w r}"
170:40-170:41::r :: "{VV : a | VV == r}"
171:21-171:44::lq_anf$##7205759403792834714 :: "(PropositionalEquality.EqT a)"
171:27-171:43::lq_anf$##7205759403792834713 :: "a"
171:30-171:31::r :: "{VV : a | VV == r}"
171:32-171:42::lq_anf$##7205759403792834712 :: "{VV : a | VV == ap v w r\n          && VV == v r (w r)}"
171:36-171:37::v :: "a -> b -> c"
171:38-171:39::w :: "a -> b"
171:40-171:41::r :: "{VV : a | VV == r}"
175:1-175:8::Readers.ap_fmap :: "forall a b c .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:(b -> a) -> x5:(c -> b) -> {VV : (PropositionalEquality.EqT c -> a) | eqT (fmap x3 x5) (ap (pure x3) x5)}"
175:9-175:10::f :: "a -> b"
175:11-175:12::a :: "a -> b"
176:9-176:19::lq_anf$##7205759403792834802 :: "x1:a -> {VV : b | VV == fmap f a x1\n                  && VV == f (a x1)}"
176:15-176:16::f :: "a -> b"
176:17-176:18::a :: "a -> b"
176:20-176:35::lq_anf$##7205759403792834804 :: "a -> b"
176:24-176:32::lq_anf$##7205759403792834803 :: "x1:a -> b -> c"
176:30-176:31::f :: "a -> b"
176:33-176:34::a :: "a -> b"
177:5-177:6::r :: "a"
178:12-178:24::lq_anf$##7205759403792834805 :: "{VV : a | VV == fmap f a r\n          && VV == f (a r)}"
178:18-178:19::f :: "a -> b"
178:20-178:21::a :: "a -> b"
178:22-178:23::r :: "{VV : a | VV == r}"
179:12-179:21::lq_anf$##7205759403792834807 :: "a"
179:15-179:20::lq_anf$##7205759403792834806 :: "{VV : a | VV == a r}"
179:18-179:19::r :: "{VV : a | VV == r}"
180:12-180:29::lq_anf$##7205759403792834809 :: "a"
180:16-180:24::lq_anf$##7205759403792834808 :: "x1:a -> b -> c"
180:22-180:23::f :: "a -> b"
180:25-180:26::a :: "a -> b"
180:27-180:28::r :: "{VV : a | VV == r}"
181:7-181:26::lq_anf$##7205759403792834811 :: "(PropositionalEquality.EqT a)"
181:13-181:25::lq_anf$##7205759403792834810 :: "{VV : a | VV == fmap f a r\n          && VV == f (a r)}"
181:19-181:20::f :: "a -> b"
181:21-181:22::a :: "a -> b"
181:23-181:24::r :: "{VV : a | VV == r}"
182:14-182:23::lq_anf$##7205759403792834813 :: "a"
182:17-182:22::lq_anf$##7205759403792834812 :: "{VV : a | VV == a r}"
182:20-182:21::r :: "{VV : a | VV == r}"
183:14-183:32::lq_anf$##7205759403792834815 :: "a"
183:21-183:22::f :: "a -> b"
183:24-183:25::r :: "{VV : a | VV == r}"
183:26-183:31::lq_anf$##7205759403792834814 :: "{VV : a | VV == a r}"
183:29-183:30::r :: "{VV : a | VV == r}"
184:14-184:31::lq_anf$##7205759403792834817 :: "a"
184:18-184:26::lq_anf$##7205759403792834816 :: "x1:a -> b -> c"
184:24-184:25::f :: "a -> b"
184:27-184:28::a :: "a -> b"
184:29-184:30::r :: "{VV : a | VV == r}"
185:9-185:25::lq_anf$##7205759403792834820 :: "(PropositionalEquality.EqT a)"
185:15-185:24::lq_anf$##7205759403792834819 :: "a"
185:18-185:23::lq_anf$##7205759403792834818 :: "{VV : a | VV == a r}"
185:21-185:22::r :: "{VV : a | VV == r}"
186:9-186:34::lq_anf$##7205759403792834823 :: "(PropositionalEquality.EqT a)"
186:15-186:33::lq_anf$##7205759403792834822 :: "a"
186:22-186:23::f :: "a -> b"
186:25-186:26::r :: "{VV : a | VV == r}"
186:27-186:32::lq_anf$##7205759403792834821 :: "{VV : a | VV == a r}"
186:30-186:31::r :: "{VV : a | VV == r}"
190:1-190:5::Readers.bind :: "forall a b c .\nx1:(a -> b) -> x3:(b -> a -> c) -> x6:a -> {VV : c | VV == bind x1 x3 x6\n                                                     && VV == x3 (x1 x6) x6}"
190:6-190:9::fra :: "a -> b"
190:10-190:14::farb :: "a -> b -> c"
190:18-190:19::r :: "a"
190:28-190:35::lq_anf$##7205759403792834826 :: "{VV : a | VV == fra r}"
190:33-190:34::r :: "{VV : a | VV == r}"
190:36-190:37::r :: "{VV : a | VV == r}"
196:1-196:22::Readers.monadLaw_leftIdentity :: "forall a b c .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:b -> x4:(b -> c -> a) -> {VV : (PropositionalEquality.EqT c -> a) | eqT (bind (pure x3) x4) (x4 x3)}"
196:23-196:24::a :: "a"
196:25-196:26::f :: "a -> b -> c"
197:9-197:26::lq_anf$##7205759403792834846 :: "a -> b"
197:15-197:23::lq_anf$##7205759403792834845 :: "x1:a -> {VV : b | VV == pure a x1\n                  && VV == a}"
197:21-197:22::a :: "{VV : a | VV == a}"
197:24-197:25::f :: "a -> b -> c"
197:27-197:32::lq_anf$##7205759403792834847 :: "a -> b"
197:30-197:31::a :: "{VV : a | VV == a}"
198:5-198:6::r :: "a"
199:13-199:32::lq_anf$##7205759403792834849 :: "a"
199:19-199:27::lq_anf$##7205759403792834848 :: "x1:a -> {VV : b | VV == pure a x1\n                  && VV == a}"
199:25-199:26::a :: "{VV : a | VV == a}"
199:28-199:29::f :: "a -> b -> c"
199:30-199:31::r :: "{VV : a | VV == r}"
199:33-199:49::lq_anf$##7205759403792834851 :: "a"
199:36-199:46::lq_anf$##7205759403792834850 :: "{VV : a | VV == pure a r\n          && VV == a}"
199:42-199:43::a :: "{VV : a | VV == a}"
199:44-199:45::r :: "{VV : a | VV == r}"
199:47-199:48::r :: "{VV : a | VV == r}"
199:50-199:57::lq_anf$##7205759403792834852 :: "{VV : a | VV == f a r}"
199:53-199:54::a :: "{VV : a | VV == a}"
199:55-199:56::r :: "{VV : a | VV == r}"
200:13-200:39::lq_anf$##7205759403792834855 :: "(PropositionalEquality.EqT a)"
200:19-200:38::lq_anf$##7205759403792834854 :: "a"
200:25-200:33::lq_anf$##7205759403792834853 :: "x1:a -> {VV : b | VV == pure a x1\n                  && VV == a}"
200:31-200:32::a :: "{VV : a | VV == a}"
200:34-200:35::f :: "a -> b -> c"
200:36-200:37::r :: "{VV : a | VV == r}"
201:13-201:36::lq_anf$##7205759403792834858 :: "(PropositionalEquality.EqT a)"
201:19-201:35::lq_anf$##7205759403792834857 :: "a"
201:22-201:32::lq_anf$##7205759403792834856 :: "{VV : a | VV == pure a r\n          && VV == a}"
201:28-201:29::a :: "{VV : a | VV == a}"
201:30-201:31::r :: "{VV : a | VV == r}"
201:33-201:34::r :: "{VV : a | VV == r}"
207:1-207:23::Readers.monadLaw_leftIdentity' :: "forall a b c .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:b -> x4:(b -> c -> a) -> {VV : (PropositionalEquality.EqT c -> a) | eqT (bind (pure x3) x4) (x4 x3)}"
207:24-207:25::a :: "a"
207:26-207:27::f :: "a -> b -> c"
208:9-208:26::lq_anf$##7205759403792834861 :: "a -> b"
208:15-208:23::lq_anf$##7205759403792834860 :: "x1:a -> {VV : b | VV == pure a x1\n                  && VV == a}"
208:21-208:22::a :: "{VV : a | VV == a}"
208:24-208:25::f :: "a -> b -> c"
208:27-208:32::lq_anf$##7205759403792834862 :: "a -> b"
208:30-208:31::a :: "{VV : a | VV == a}"
209:5-209:6::r :: "a"
210:7-210:31::lq_anf$##7205759403792834865 :: "(PropositionalEquality.EqT a)"
210:12-210:31::lq_anf$##7205759403792834864 :: "a"
210:18-210:26::lq_anf$##7205759403792834863 :: "x1:a -> {VV : b | VV == pure a x1\n                  && VV == a}"
210:24-210:25::a :: "{VV : a | VV == a}"
210:27-210:28::f :: "a -> b -> c"
210:29-210:30::r :: "{VV : a | VV == r}"
211:7-211:54::lq_anf$##7205759403792834871 :: "{v : () | (isAdmit QED => false)\n          && (not (isAdmit QED) => true)}"
211:8-211:25::lq_anf$##7205759403792834867 :: "a"
211:13-211:21::lq_anf$##7205759403792834866 :: "x1:a -> {VV : b | VV == pure a x1\n                  && VV == a}"
211:19-211:20::a :: "{VV : a | VV == a}"
211:22-211:23::f :: "a -> b -> c"
211:24-211:25::r :: "{VV : a | VV == r}"
211:30-211:44::lq_anf$##7205759403792834869 :: "a"
211:32-211:42::lq_anf$##7205759403792834868 :: "{VV : a | VV == pure a r\n          && VV == a}"
211:38-211:39::a :: "{VV : a | VV == a}"
211:40-211:41::r :: "{VV : a | VV == r}"
211:43-211:44::r :: "{VV : a | VV == r}"
211:50-211:53::Language.Haskell.Liquid.ProofCombinators.QED :: "{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}"
215:1-215:23::Readers.monadLaw_rightIdentity :: "forall a b .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(b -> a) -> {VV : (PropositionalEquality.EqT b -> a) | eqT (bind x2 pure) x2}"
215:24-215:25::m :: "a -> b"
216:9-216:22::lq_anf$##7205759403792834874 :: "a -> b"
216:15-216:16::m :: "a -> b"
216:17-216:21::_ :: "{VV : forall a b .\n      x1:a -> x2:b -> {VV : a | VV == pure x1 x2\n                                && VV == x1} | VV == pure}"
216:23-216:24::m :: "a -> b"
217:5-217:6::r :: "a"
218:6-218:26::lq_anf$##7205759403792834877 :: "(PropositionalEquality.EqT a)"
218:11-218:26::lq_anf$##7205759403792834876 :: "a"
218:17-218:18::m :: "a -> b"
218:19-218:23::_ :: "{VV : forall a b .\n      x1:a -> x2:b -> {VV : a | VV == pure x1 x2\n                                && VV == x1} | VV == pure}"
218:24-218:25::r :: "{VV : a | VV == r}"
219:11-219:26::lq_anf$##7205759403792834879 :: "a"
219:17-219:18::m :: "a -> b"
219:19-219:23::_ :: "{VV : forall a b .\n      x1:a -> x2:b -> {VV : a | VV == pure x1 x2\n                                && VV == x1} | VV == pure}"
219:24-219:25::r :: "{VV : a | VV == r}"
220:11-220:23::lq_anf$##7205759403792834881 :: "a"
220:16-220:21::lq_anf$##7205759403792834880 :: "{VV : a | VV == m r}"
220:19-220:20::r :: "{VV : a | VV == r}"
220:22-220:23::r :: "{VV : a | VV == r}"
221:11-221:14::Language.Haskell.Liquid.ProofCombinators.QED :: "{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}"
225:1-225:8::Readers.kleisli :: "forall a b c d .\nx1:(a -> b -> c) -> x4:(c -> b -> d) -> x7:a -> x8:b -> {VV : d | VV == kleisli x1 x4 x7 x8\n                                                                  && VV == bind (x1 x7) x4 x8}"
225:9-225:10::f :: "a -> b -> c"
225:11-225:12::g :: "a -> b -> c"
225:13-225:14::x :: "a"
225:22-225:27::lq_anf$##7205759403792834827 :: "a -> b"
225:25-225:26::x :: "{VV : a | VV == x}"
225:28-225:29::g :: "a -> b -> c"
233:1-233:23::Readers.monadLaw_associativity :: "forall a b c d .\n(PEqProperties.Reflexivity<[]> a, PEqProperties.Transitivity<[]> a) =>\nx3:(b -> c) -> x5:(c -> b -> d) -> x8:(d -> b -> a) -> {VV : (PropositionalEquality.EqT b -> a) | eqT (bind (bind x3 x5) x8) (bind x3 (kleisli x5 x8))}"
233:24-233:25::m :: "a -> b"
233:26-233:27::f :: "a -> b -> c"
233:28-233:29::g :: "a -> b -> c"
234:9-234:28::lq_anf$##7205759403792834829 :: "a -> b"
234:15-234:25::lq_anf$##7205759403792834828 :: "x1:a -> {VV : b | VV == bind m f x1\n                  && VV == f (m x1) x1}"
234:21-234:22::m :: "a -> b"
234:23-234:24::f :: "a -> b -> c"
234:26-234:27::g :: "a -> b -> c"
234:29-234:51::lq_anf$##7205759403792834831 :: "a -> b"
234:35-234:36::m :: "a -> b"
234:37-234:50::lq_anf$##7205759403792834830 :: "x1:a -> x2:b -> {VV : c | VV == kleisli f g x1 x2\n                          && VV == bind (f x1) g x2}"
234:46-234:47::f :: "a -> b -> c"
234:48-234:49::g :: "a -> b -> c"
234:54-234:55::r :: "a"
235:10-235:12::el :: "a"
235:16-235:35::_ :: "a"
235:21-235:31::lq_anf$##7205759403792834837 :: "x1:a -> {VV : b | VV == bind m f x1\n                  && VV == f (m x1) x1}"
235:27-235:28::m :: "a -> b"
235:29-235:30::f :: "a -> b -> c"
235:32-235:33::g :: "a -> b -> c"
235:34-235:35::r :: "{VV : a | VV == r}"
236:10-236:13::eml :: "a"
236:16-236:32::_ :: "a"
236:18-236:30::lq_anf$##7205759403792834836 :: "{VV : a | VV == bind m f r\n          && VV == f (m r) r}"
236:24-236:25::m :: "a -> b"
236:26-236:27::f :: "a -> b -> c"
236:28-236:29::r :: "{VV : a | VV == r}"
236:31-236:32::r :: "{VV : a | VV == r}"
237:10-237:12::em :: "a"
237:16-237:36::_ :: "a"
237:22-237:31::lq_anf$##7205759403792834835 :: "a -> b"
237:25-237:30::lq_anf$##7205759403792834834 :: "{VV : a | VV == m r}"
237:28-237:29::r :: "{VV : a | VV == r}"
237:32-237:33::g :: "a -> b -> c"
237:35-237:36::r :: "{VV : a | VV == r}"
238:10-238:13::emr :: "a"
238:16-238:35::_ :: "a"
238:24-238:25::f :: "a -> b -> c"
238:26-238:27::g :: "a -> b -> c"
238:28-238:33::lq_anf$##7205759403792834833 :: "{VV : a | VV == m r}"
238:31-238:32::r :: "{VV : a | VV == r}"
238:34-238:35::r :: "{VV : a | VV == r}"
239:10-239:12::er :: "a"
239:16-239:38::_ :: "a"
239:21-239:22::m :: "a -> b"
239:23-239:36::lq_anf$##7205759403792834832 :: "x1:a -> x2:b -> {VV : c | VV == kleisli f g x1 x2\n                          && VV == bind (f x1) g x2}"
239:32-239:33::f :: "a -> b -> c"
239:34-239:35::g :: "a -> b -> c"
239:37-239:38::r :: "{VV : a | VV == r}"
240:15-240:17::el :: "{VV : a | VV == el}"
240:18-240:20::em :: "{VV : a | VV == em}"
240:21-240:23::er :: "{VV : a | VV == er}"
241:12-241:50::lq_anf$##7205759403792834840 :: "{v : (PropositionalEquality.EqT a) | eqT el em}"
241:19-241:21::el :: "{VV : a | VV == el}"
241:22-241:25::eml :: "{VV : a | VV == eml}"
241:26-241:28::em :: "{VV : a | VV == em}"
241:29-241:38::lq_anf$##7205759403792834838 :: "{v : (PropositionalEquality.EqT a) | eqT el el\n                                     && v == refl el}"
241:35-241:37::el :: "{VV : a | VV == el}"
241:39-241:49::lq_anf$##7205759403792834839 :: "{v : (PropositionalEquality.EqT a) | eqT eml eml\n                                     && v == refl eml}"
241:45-241:48::eml :: "{VV : a | VV == eml}"
242:12-242:50::lq_anf$##7205759403792834843 :: "{v : (PropositionalEquality.EqT a) | eqT em er}"
242:19-242:21::em :: "{VV : a | VV == em}"
242:22-242:25::emr :: "{VV : a | VV == emr}"
242:26-242:28::er :: "{VV : a | VV == er}"
242:29-242:38::lq_anf$##7205759403792834841 :: "{v : (PropositionalEquality.EqT a) | eqT em em\n                                     && v == refl em}"
242:35-242:37::em :: "{VV : a | VV == em}"
242:39-242:49::lq_anf$##7205759403792834842 :: "{v : (PropositionalEquality.EqT a) | eqT emr emr\n                                     && v == refl emr}"
242:45-242:48::emr :: "{VV : a | VV == emr}"