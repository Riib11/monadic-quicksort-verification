{"status":"safe","types":{"37":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824468","row":37,"col":15},"30":{"ann":"a -> a","ident":"x","row":37,"col":30},"23":{"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","row":37,"col":23},"32":{"ann":"{VV : a | VV == a}","ident":"a","row":37,"col":32}},"48":{"19":{"ann":"{VV : a | VV == mempty a\n          && VV == a}","ident":"lq_anf$##7205759403792824482","row":48,"col":19},"17":{"ann":"a","ident":"lq_anf$##7205759403792824483","row":48,"col":17},"27":{"ann":"{VV : a | VV == a}","ident":"a","row":48,"col":27}},"61":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824451","row":61,"col":15},"17":{"ann":"a","ident":"lq_anf$##7205759403792824450","row":61,"col":17},"23":{"ann":"{VV : a | VV == a}","ident":"a","row":61,"col":23},"20":{"ann":"{VV : a | VV == z a}","ident":"lq_anf$##7205759403792824449","row":61,"col":20}},"57":{"57":{"ann":"a -> a","ident":"z","row":57,"col":57},"44":{"ann":"a -> a","ident":"x","row":57,"col":44},"29":{"ann":"a -> a","ident":"y","row":57,"col":29},"35":{"ann":"a -> a","ident":"lq_anf$##7205759403792824439","row":57,"col":35},"18":{"ann":"x1:a -> {VV : a | VV == mappend x y x1\n                  && VV == x (y x1)}","ident":"lq_anf$##7205759403792824436","row":57,"col":18},"46":{"ann":"x1:a -> {VV : a | VV == mappend y z x1\n                  && VV == y (z x1)}","ident":"lq_anf$##7205759403792824438","row":57,"col":46},"64":{"ann":"a","ident":"a","row":57,"col":64},"27":{"ann":"a -> a","ident":"x","row":57,"col":27},"55":{"ann":"a -> a","ident":"y","row":57,"col":55},"3":{"ann":"x1:(a -> (PropositionalEquality.EqT a)) -> {v : (PropositionalEquality.EqT a -> a) | lqdc##$select v == x1}","ident":"lq_anf$##7205759403792824440","row":57,"col":3},"9":{"ann":"a -> a","ident":"lq_anf$##7205759403792824437","row":57,"col":9},"32":{"ann":"a -> a","ident":"z","row":57,"col":32}},"36":{"28":{"ann":"{VV : a | VV == a}","ident":"a","row":36,"col":28},"19":{"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","row":36,"col":19},"26":{"ann":"a -> a","ident":"x","row":36,"col":26},"5":{"ann":"(PropositionalEquality.EqT a)","ident":"lq_anf$##7205759403792824466","row":36,"col":5},"10":{"ann":"a","ident":"lq_anf$##7205759403792824465","row":36,"col":10}},"49":{"25":{"ann":"a -> a","ident":"x","row":49,"col":25},"17":{"ann":"a","ident":"lq_anf$##7205759403792824486","row":49,"col":17},"34":{"ann":"{VV : a | VV == a}","ident":"a","row":49,"col":34},"27":{"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","row":49,"col":27}},"50":{"17":{"ann":"{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}","ident":"Language.Haskell.Liquid.ProofCombinators.QED","row":50,"col":17}},"44":{"22":{"ann":"a -> a","ident":"x","row":44,"col":22},"1":{"ann":"forall a .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(a -> a) -> {VV : (PropositionalEquality.EqT a -> a) | eqT x2 (mappend x2 mempty)}","ident":"Endofunctors.monoid_rightIdentity","row":44,"col":1}},"56":{"22":{"ann":"a -> a","ident":"x","row":56,"col":22},"1":{"ann":"forall a .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(a -> a) -> x4:(a -> a) -> x6:(a -> a) -> {VV : (PropositionalEquality.EqT a -> a) | eqT (mappend (mappend x2 x4) x6) (mappend x2 (mappend x4 x6))}","ident":"Endofunctors.monoid_associativity","row":56,"col":1},"26":{"ann":"a -> a","ident":"z","row":56,"col":26},"24":{"ann":"a -> a","ident":"y","row":56,"col":24}},"35":{"25":{"ann":"a -> a","ident":"x","row":35,"col":25},"28":{"ann":"a -> a","ident":"x","row":35,"col":28},"18":{"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","row":35,"col":18},"33":{"ann":"a","ident":"a","row":35,"col":33},"3":{"ann":"x1:(a -> (PropositionalEquality.EqT a)) -> {v : (PropositionalEquality.EqT a -> a) | lqdc##$select v == x1\n                                                                                     && lqdc##$select v == x}","ident":"lq_anf$##7205759403792824463","row":35,"col":3},"9":{"ann":"a -> a","ident":"lq_anf$##7205759403792824462","row":35,"col":9}},"45":{"13":{"ann":"a -> a","ident":"lq_anf$##7205759403792824477","row":45,"col":13},"22":{"ann":"a -> a","ident":"x","row":45,"col":22},"35":{"ann":"a","ident":"a","row":45,"col":35},"5":{"ann":"x1:(a -> (PropositionalEquality.EqT a)) -> {v : (PropositionalEquality.EqT a -> a) | lqdc##$select v == x1\n                                                                                     && lqdc##$select v == x}","ident":"lq_anf$##7205759403792824478","row":45,"col":5},"11":{"ann":"a -> a","ident":"x","row":45,"col":11},"24":{"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","row":45,"col":24}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Endofunctors.$trModule","row":1,"col":1}},"40":{"15":{"ann":"{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}","ident":"Language.Haskell.Liquid.ProofCombinators.QED","row":40,"col":15}},"62":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824454","row":62,"col":15},"28":{"ann":"a -> a","ident":"z","row":62,"col":28},"30":{"ann":"{VV : a | VV == a}","ident":"a","row":62,"col":30},"17":{"ann":"{VV : a | VV == mappend y z a\n          && VV == y (z a)}","ident":"lq_anf$##7205759403792824453","row":62,"col":17},"26":{"ann":"a -> a","ident":"y","row":62,"col":26}},"59":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824445","row":59,"col":15},"37":{"ann":"a -> a","ident":"z","row":59,"col":37},"23":{"ann":"x1:a -> {VV : a | VV == mappend x y x1\n                  && VV == x (y x1)}","ident":"lq_anf$##7205759403792824444","row":59,"col":23},"34":{"ann":"a -> a","ident":"y","row":59,"col":34},"39":{"ann":"{VV : a | VV == a}","ident":"a","row":59,"col":39},"32":{"ann":"a -> a","ident":"x","row":59,"col":32}},"34":{"1":{"ann":"forall a .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(a -> a) -> {VV : (PropositionalEquality.EqT a -> a) | eqT (mappend mempty x2) x2}","ident":"Endofunctors.monoid_leftIdentity","row":34,"col":1},"21":{"ann":"a -> a","ident":"x","row":34,"col":21}},"20":{"1":{"ann":"forall a .\nx1:a -> {VV : a | VV == mempty x1\n                  && VV == x1}","ident":"Endofunctors.mempty","row":20,"col":1},"8":{"ann":"a","ident":"a","row":20,"col":8}},"39":{"15":{"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824472","row":39,"col":15},"17":{"ann":"{VV : a | VV == a}","ident":"a","row":39,"col":17}},"46":{"15":{"ann":"{VV : a | VV == a}","ident":"a","row":46,"col":15},"7":{"ann":"(PropositionalEquality.EqT a)","ident":"lq_anf$##7205759403792824480","row":46,"col":7},"12":{"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824479","row":46,"col":12}},"64":{"15":{"ann":"{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}","ident":"Language.Haskell.Liquid.ProofCombinators.QED","row":64,"col":15}},"58":{"28":{"ann":"a -> a","ident":"x","row":58,"col":28},"19":{"ann":"x1:a -> {VV : a | VV == mappend x y x1\n                  && VV == x (y x1)}","ident":"lq_anf$##7205759403792824441","row":58,"col":19},"30":{"ann":"a -> a","ident":"y","row":58,"col":30},"35":{"ann":"{VV : a | VV == a}","ident":"a","row":58,"col":35},"5":{"ann":"(PropositionalEquality.EqT a)","ident":"lq_anf$##7205759403792824443","row":58,"col":5},"33":{"ann":"a -> a","ident":"z","row":58,"col":33},"10":{"ann":"a","ident":"lq_anf$##7205759403792824442","row":58,"col":10}},"63":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824457","row":63,"col":15},"25":{"ann":"x1:a -> {VV : a | VV == mappend y z x1\n                  && VV == y (z x1)}","ident":"lq_anf$##7205759403792824456","row":63,"col":25},"36":{"ann":"a -> a","ident":"z","row":63,"col":36},"23":{"ann":"a -> a","ident":"x","row":63,"col":23},"34":{"ann":"a -> a","ident":"y","row":63,"col":34},"39":{"ann":"{VV : a | VV == a}","ident":"a","row":63,"col":39}},"38":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824470","row":38,"col":15},"25":{"ann":"{VV : a | VV == a}","ident":"a","row":38,"col":25},"22":{"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824469","row":38,"col":22}},"47":{"19":{"ann":"{VV : a | VV == a}","ident":"a","row":47,"col":19},"17":{"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824481","row":47,"col":17}},"24":{"13":{"ann":"a","ident":"a","row":24,"col":13},"22":{"ann":"{VV : a | VV == a}","ident":"a","row":24,"col":22},"19":{"ann":"{VV : a | VV == g a}","ident":"lq_anf$##7205759403792824435","row":24,"col":19},"1":{"ann":"forall a .\nx1:(a -> a) -> x3:(a -> a) -> x5:a -> {VV : a | VV == mappend x1 x3 x5\n                                                && VV == x1 (x3 x5)}","ident":"Endofunctors.mappend","row":24,"col":1},"11":{"ann":"a -> a","ident":"g","row":24,"col":11},"9":{"ann":"a -> a","ident":"f","row":24,"col":9}},"60":{"15":{"ann":"a","ident":"lq_anf$##7205759403792824447","row":60,"col":15},"29":{"ann":"{VV : a | VV == z a}","ident":"lq_anf$##7205759403792824446","row":60,"col":29},"26":{"ann":"a -> a","ident":"y","row":60,"col":26},"24":{"ann":"a -> a","ident":"x","row":60,"col":24},"32":{"ann":"{VV : a | VV == a}","ident":"a","row":60,"col":32}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Endofunctors.$trModule","stop":{"line":1,"column":1}},{"start":{"line":20,"column":1},"ann":"forall a .\nx1:a -> {VV : a | VV == mempty x1\n                  && VV == x1}","ident":"Endofunctors.mempty","stop":{"line":20,"column":7}},{"start":{"line":20,"column":8},"ann":"a","ident":"a","stop":{"line":20,"column":9}},{"start":{"line":24,"column":1},"ann":"forall a .\nx1:(a -> a) -> x3:(a -> a) -> x5:a -> {VV : a | VV == mappend x1 x3 x5\n                                                && VV == x1 (x3 x5)}","ident":"Endofunctors.mappend","stop":{"line":24,"column":8}},{"start":{"line":24,"column":9},"ann":"a -> a","ident":"f","stop":{"line":24,"column":10}},{"start":{"line":24,"column":11},"ann":"a -> a","ident":"g","stop":{"line":24,"column":12}},{"start":{"line":24,"column":13},"ann":"a","ident":"a","stop":{"line":24,"column":14}},{"start":{"line":24,"column":19},"ann":"{VV : a | VV == g a}","ident":"lq_anf$##7205759403792824435","stop":{"line":24,"column":24}},{"start":{"line":24,"column":22},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":24,"column":23}},{"start":{"line":34,"column":1},"ann":"forall a .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(a -> a) -> {VV : (PropositionalEquality.EqT a -> a) | eqT (mappend mempty x2) x2}","ident":"Endofunctors.monoid_leftIdentity","stop":{"line":34,"column":20}},{"start":{"line":34,"column":21},"ann":"a -> a","ident":"x","stop":{"line":34,"column":22}},{"start":{"line":35,"column":3},"ann":"x1:(a -> (PropositionalEquality.EqT a)) -> {v : (PropositionalEquality.EqT a -> a) | lqdc##$select v == x1\n                                                                                     && lqdc##$select v == x}","ident":"lq_anf$##7205759403792824463","stop":{"line":35,"column":29}},{"start":{"line":35,"column":9},"ann":"a -> a","ident":"lq_anf$##7205759403792824462","stop":{"line":35,"column":27}},{"start":{"line":35,"column":18},"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","stop":{"line":35,"column":24}},{"start":{"line":35,"column":25},"ann":"a -> a","ident":"x","stop":{"line":35,"column":26}},{"start":{"line":35,"column":28},"ann":"a -> a","ident":"x","stop":{"line":35,"column":29}},{"start":{"line":35,"column":33},"ann":"a","ident":"a","stop":{"line":35,"column":34}},{"start":{"line":36,"column":5},"ann":"(PropositionalEquality.EqT a)","ident":"lq_anf$##7205759403792824466","stop":{"line":36,"column":30}},{"start":{"line":36,"column":10},"ann":"a","ident":"lq_anf$##7205759403792824465","stop":{"line":36,"column":30}},{"start":{"line":36,"column":19},"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","stop":{"line":36,"column":25}},{"start":{"line":36,"column":26},"ann":"a -> a","ident":"x","stop":{"line":36,"column":27}},{"start":{"line":36,"column":28},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":36,"column":29}},{"start":{"line":37,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824468","stop":{"line":37,"column":33}},{"start":{"line":37,"column":23},"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","stop":{"line":37,"column":29}},{"start":{"line":37,"column":30},"ann":"a -> a","ident":"x","stop":{"line":37,"column":31}},{"start":{"line":37,"column":32},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":37,"column":33}},{"start":{"line":38,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824470","stop":{"line":38,"column":27}},{"start":{"line":38,"column":22},"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824469","stop":{"line":38,"column":27}},{"start":{"line":38,"column":25},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":38,"column":26}},{"start":{"line":39,"column":15},"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824472","stop":{"line":39,"column":18}},{"start":{"line":39,"column":17},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":39,"column":18}},{"start":{"line":40,"column":15},"ann":"{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}","ident":"Language.Haskell.Liquid.ProofCombinators.QED","stop":{"line":40,"column":18}},{"start":{"line":44,"column":1},"ann":"forall a .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(a -> a) -> {VV : (PropositionalEquality.EqT a -> a) | eqT x2 (mappend x2 mempty)}","ident":"Endofunctors.monoid_rightIdentity","stop":{"line":44,"column":21}},{"start":{"line":44,"column":22},"ann":"a -> a","ident":"x","stop":{"line":44,"column":23}},{"start":{"line":45,"column":5},"ann":"x1:(a -> (PropositionalEquality.EqT a)) -> {v : (PropositionalEquality.EqT a -> a) | lqdc##$select v == x1\n                                                                                     && lqdc##$select v == x}","ident":"lq_anf$##7205759403792824478","stop":{"line":45,"column":31}},{"start":{"line":45,"column":11},"ann":"a -> a","ident":"x","stop":{"line":45,"column":12}},{"start":{"line":45,"column":13},"ann":"a -> a","ident":"lq_anf$##7205759403792824477","stop":{"line":45,"column":31}},{"start":{"line":45,"column":22},"ann":"a -> a","ident":"x","stop":{"line":45,"column":23}},{"start":{"line":45,"column":24},"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","stop":{"line":45,"column":30}},{"start":{"line":45,"column":35},"ann":"a","ident":"a","stop":{"line":45,"column":36}},{"start":{"line":46,"column":7},"ann":"(PropositionalEquality.EqT a)","ident":"lq_anf$##7205759403792824480","stop":{"line":46,"column":17}},{"start":{"line":46,"column":12},"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824479","stop":{"line":46,"column":17}},{"start":{"line":46,"column":15},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":46,"column":16}},{"start":{"line":47,"column":17},"ann":"{VV : a | VV == x a}","ident":"lq_anf$##7205759403792824481","stop":{"line":47,"column":20}},{"start":{"line":47,"column":19},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":47,"column":20}},{"start":{"line":48,"column":17},"ann":"a","ident":"lq_anf$##7205759403792824483","stop":{"line":48,"column":29}},{"start":{"line":48,"column":19},"ann":"{VV : a | VV == mempty a\n          && VV == a}","ident":"lq_anf$##7205759403792824482","stop":{"line":48,"column":29}},{"start":{"line":48,"column":27},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":48,"column":28}},{"start":{"line":49,"column":17},"ann":"a","ident":"lq_anf$##7205759403792824486","stop":{"line":49,"column":35}},{"start":{"line":49,"column":25},"ann":"a -> a","ident":"x","stop":{"line":49,"column":26}},{"start":{"line":49,"column":27},"ann":"{VV : forall a .\n      x1:a -> {VV : a | VV == mempty x1\n                        && VV == x1} | VV == mempty}","ident":"_","stop":{"line":49,"column":33}},{"start":{"line":49,"column":34},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":49,"column":35}},{"start":{"line":50,"column":17},"ann":"{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}","ident":"Language.Haskell.Liquid.ProofCombinators.QED","stop":{"line":50,"column":20}},{"start":{"line":56,"column":1},"ann":"forall a .\n(PEqProperties.Reflexivity<[]> a) =>\nx2:(a -> a) -> x4:(a -> a) -> x6:(a -> a) -> {VV : (PropositionalEquality.EqT a -> a) | eqT (mappend (mappend x2 x4) x6) (mappend x2 (mappend x4 x6))}","ident":"Endofunctors.monoid_associativity","stop":{"line":56,"column":21}},{"start":{"line":56,"column":22},"ann":"a -> a","ident":"x","stop":{"line":56,"column":23}},{"start":{"line":56,"column":24},"ann":"a -> a","ident":"y","stop":{"line":56,"column":25}},{"start":{"line":56,"column":26},"ann":"a -> a","ident":"z","stop":{"line":56,"column":27}},{"start":{"line":57,"column":3},"ann":"x1:(a -> (PropositionalEquality.EqT a)) -> {v : (PropositionalEquality.EqT a -> a) | lqdc##$select v == x1}","ident":"lq_anf$##7205759403792824440","stop":{"line":57,"column":60}},{"start":{"line":57,"column":9},"ann":"a -> a","ident":"lq_anf$##7205759403792824437","stop":{"line":57,"column":34}},{"start":{"line":57,"column":18},"ann":"x1:a -> {VV : a | VV == mappend x y x1\n                  && VV == x (y x1)}","ident":"lq_anf$##7205759403792824436","stop":{"line":57,"column":31}},{"start":{"line":57,"column":27},"ann":"a -> a","ident":"x","stop":{"line":57,"column":28}},{"start":{"line":57,"column":29},"ann":"a -> a","ident":"y","stop":{"line":57,"column":30}},{"start":{"line":57,"column":32},"ann":"a -> a","ident":"z","stop":{"line":57,"column":33}},{"start":{"line":57,"column":35},"ann":"a -> a","ident":"lq_anf$##7205759403792824439","stop":{"line":57,"column":60}},{"start":{"line":57,"column":44},"ann":"a -> a","ident":"x","stop":{"line":57,"column":45}},{"start":{"line":57,"column":46},"ann":"x1:a -> {VV : a | VV == mappend y z x1\n                  && VV == y (z x1)}","ident":"lq_anf$##7205759403792824438","stop":{"line":57,"column":59}},{"start":{"line":57,"column":55},"ann":"a -> a","ident":"y","stop":{"line":57,"column":56}},{"start":{"line":57,"column":57},"ann":"a -> a","ident":"z","stop":{"line":57,"column":58}},{"start":{"line":57,"column":64},"ann":"a","ident":"a","stop":{"line":57,"column":65}},{"start":{"line":58,"column":5},"ann":"(PropositionalEquality.EqT a)","ident":"lq_anf$##7205759403792824443","stop":{"line":58,"column":37}},{"start":{"line":58,"column":10},"ann":"a","ident":"lq_anf$##7205759403792824442","stop":{"line":58,"column":37}},{"start":{"line":58,"column":19},"ann":"x1:a -> {VV : a | VV == mappend x y x1\n                  && VV == x (y x1)}","ident":"lq_anf$##7205759403792824441","stop":{"line":58,"column":32}},{"start":{"line":58,"column":28},"ann":"a -> a","ident":"x","stop":{"line":58,"column":29}},{"start":{"line":58,"column":30},"ann":"a -> a","ident":"y","stop":{"line":58,"column":31}},{"start":{"line":58,"column":33},"ann":"a -> a","ident":"z","stop":{"line":58,"column":34}},{"start":{"line":58,"column":35},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":58,"column":36}},{"start":{"line":59,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824445","stop":{"line":59,"column":40}},{"start":{"line":59,"column":23},"ann":"x1:a -> {VV : a | VV == mappend x y x1\n                  && VV == x (y x1)}","ident":"lq_anf$##7205759403792824444","stop":{"line":59,"column":36}},{"start":{"line":59,"column":32},"ann":"a -> a","ident":"x","stop":{"line":59,"column":33}},{"start":{"line":59,"column":34},"ann":"a -> a","ident":"y","stop":{"line":59,"column":35}},{"start":{"line":59,"column":37},"ann":"a -> a","ident":"z","stop":{"line":59,"column":38}},{"start":{"line":59,"column":39},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":59,"column":40}},{"start":{"line":60,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824447","stop":{"line":60,"column":34}},{"start":{"line":60,"column":24},"ann":"a -> a","ident":"x","stop":{"line":60,"column":25}},{"start":{"line":60,"column":26},"ann":"a -> a","ident":"y","stop":{"line":60,"column":27}},{"start":{"line":60,"column":29},"ann":"{VV : a | VV == z a}","ident":"lq_anf$##7205759403792824446","stop":{"line":60,"column":34}},{"start":{"line":60,"column":32},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":60,"column":33}},{"start":{"line":61,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824451","stop":{"line":61,"column":26}},{"start":{"line":61,"column":17},"ann":"a","ident":"lq_anf$##7205759403792824450","stop":{"line":61,"column":26}},{"start":{"line":61,"column":20},"ann":"{VV : a | VV == z a}","ident":"lq_anf$##7205759403792824449","stop":{"line":61,"column":25}},{"start":{"line":61,"column":23},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":61,"column":24}},{"start":{"line":62,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824454","stop":{"line":62,"column":32}},{"start":{"line":62,"column":17},"ann":"{VV : a | VV == mappend y z a\n          && VV == y (z a)}","ident":"lq_anf$##7205759403792824453","stop":{"line":62,"column":32}},{"start":{"line":62,"column":26},"ann":"a -> a","ident":"y","stop":{"line":62,"column":27}},{"start":{"line":62,"column":28},"ann":"a -> a","ident":"z","stop":{"line":62,"column":29}},{"start":{"line":62,"column":30},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":62,"column":31}},{"start":{"line":63,"column":15},"ann":"a","ident":"lq_anf$##7205759403792824457","stop":{"line":63,"column":40}},{"start":{"line":63,"column":23},"ann":"a -> a","ident":"x","stop":{"line":63,"column":24}},{"start":{"line":63,"column":25},"ann":"x1:a -> {VV : a | VV == mappend y z x1\n                  && VV == y (z x1)}","ident":"lq_anf$##7205759403792824456","stop":{"line":63,"column":38}},{"start":{"line":63,"column":34},"ann":"a -> a","ident":"y","stop":{"line":63,"column":35}},{"start":{"line":63,"column":36},"ann":"a -> a","ident":"z","stop":{"line":63,"column":37}},{"start":{"line":63,"column":39},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":63,"column":40}},{"start":{"line":64,"column":15},"ann":"{v : Language.Haskell.Liquid.ProofCombinators.QED | v == QED}","ident":"Language.Haskell.Liquid.ProofCombinators.QED","stop":{"line":64,"column":18}}],"errors":[]}